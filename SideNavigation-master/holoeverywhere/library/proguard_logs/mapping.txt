android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    android.support.v4.app.FragmentManager getChildFragmentManager() -> d
    boolean isDetached() -> e
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> f
    void onResume() -> g
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> h
    void onStop() -> i
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> j
    void onDestroy() -> k
    void initState() -> l
    void onDetach() -> m
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> n
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> o
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> p
    void performResume() -> q
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> r
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> s
    void performStop() -> t
    void performReallyStop() -> u
    void performDestroyView() -> v
    void performDestroy() -> w
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a_
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b_
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.i:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.j:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.k:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.l:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.m:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.n:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    boolean popBackStackImmediate() -> c
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.o:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.p:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.r:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.s:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.u:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.v:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.w:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.x:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.y:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.z:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.aa:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ab:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ac:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ad:
android.support.v4.app.Watson -> android.support.v4.app.ae:
    java.util.ArrayList mCreatedMenus -> n
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> a
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> a
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> a
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> b
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> f
android.support.v4.app.Watson$OnCreateOptionsMenuListener -> android.support.v4.app.af:
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> a
android.support.v4.app.Watson$OnOptionsItemSelectedListener -> android.support.v4.app.ag:
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
android.support.v4.app.Watson$OnPrepareOptionsMenuListener -> android.support.v4.app.ah:
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> a
android.support.v4.app._HoloActivity -> android.support.v4.app._HoloActivity:
    android.content.Context mActionBarContext -> n
    android.support.v4.app._HoloActivity$Holo mConfig -> o
    java.util.Map mContextMenuListeners -> p
    boolean mForceThemeApply -> q
    boolean mInited -> r
    int mLastThemeResourceId -> s
    com.actionbarsherlock.view.MenuInflater mMenuInflater -> t
    java.util.List mOnWindowFocusChangeListeners -> u
    java.lang.String TAG -> v
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void addOnWindowFocusChangeListener(org.holoeverywhere.IHoloActivity$OnWindowFocusChangeListener) -> a
    android.support.v4.app._HoloActivity$Holo createConfig(android.os.Bundle) -> a
    void forceInit(android.os.Bundle) -> b
    com.actionbarsherlock.internal.view.menu.ContextMenuListener getContextMenuListener(android.view.View) -> a
    org.holoeverywhere.LayoutInflater getLayoutInflater() -> g
    org.holoeverywhere.preference.SharedPreferences getSharedPreferences(java.lang.String,int) -> a
    android.content.Context getSupportActionBarContext() -> h
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> f
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    android.content.res.Resources$Theme getTheme() -> getTheme
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean isForceThemeApply() -> i
    void onBackPressed() -> onBackPressed
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    boolean onContextItemSelected(com.actionbarsherlock.view.MenuItem) -> b
    void onContextMenuClosed(android.view.Menu) -> onContextMenuClosed
    void onContextMenuClosed(com.actionbarsherlock.view.ContextMenu) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.support.v4.app._HoloActivity$Holo onCreateConfig(android.os.Bundle) -> c
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void onCreateContextMenu(com.actionbarsherlock.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> a
    void onDestroy() -> onDestroy
    void onInit(android.support.v4.app._HoloActivity$Holo,android.os.Bundle) -> a
    void onPostInit(android.support.v4.app._HoloActivity$Holo,android.os.Bundle) -> b
    void onPreInit(android.support.v4.app._HoloActivity$Holo,android.os.Bundle) -> c
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    android.view.View prepareDecorView(android.view.View) -> b
    android.view.View prepareDecorView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void registerForContextMenu(android.view.View,com.actionbarsherlock.internal.view.menu.ContextMenuListener) -> a
    void requestWindowFeature(long) -> a
    void setForceThemeApply(boolean) -> b
    void setTheme(int) -> setTheme
    void setTheme(int,boolean) -> a
    void startActivities(android.content.Intent[]) -> startActivities
    void startActivities(android.content.Intent[],android.os.Bundle) -> startActivities
    void startActivity(android.content.Intent) -> startActivity
    void startActivity(android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void superStartActivity(android.content.Intent,int,android.os.Bundle) -> a
    void supportInvalidateOptionsMenu() -> c
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    android.content.SharedPreferences getSharedPreferences(java.lang.String,int) -> getSharedPreferences
android.support.v4.app._HoloActivity$Holo -> android.support.v4.app._HoloActivity$Holo:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean applyImmediately -> a
    boolean forceThemeApply -> b
    boolean ignoreApplicationInstanceCheck -> c
    boolean ignoreThemeCheck -> d
    boolean requireRoboguice -> e
    boolean requireSherlock -> f
    boolean requireSlider -> g
    org.holoeverywhere.util.SparseIntArray windowFeatures -> h
    android.support.v4.app._HoloActivity$Holo defaultConfig() -> a
    void createFromParcel(android.os.Parcel) -> a
    int describeContents() -> describeContents
    void requestWindowFeature(int) -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    org.holoeverywhere.util.SparseIntArray access$000(android.support.v4.app._HoloActivity$Holo) -> a
android.support.v4.app._HoloActivity$Holo$1 -> android.support.v4.app.ai:
    android.support.v4.app._HoloActivity$Holo createFromParcel(android.os.Parcel) -> a
    android.support.v4.app._HoloActivity$Holo[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app._HoloActivity$HoloThemeException -> android.support.v4.app.aj:
android.support.v4.app._HoloFragment -> android.support.v4.app.ak:
    org.holoeverywhere.app.Activity mActivity -> P
    boolean mDetachChildFragments -> Q
    com.actionbarsherlock.internal.view.menu.ContextMenuListener getContextMenuListener(android.view.View) -> a
    org.holoeverywhere.LayoutInflater getLayoutInflater() -> x
    org.holoeverywhere.LayoutInflater getLayoutInflater(android.os.Bundle) -> j
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> y
    org.holoeverywhere.app.Activity getSupportActivity() -> z
    void onAttach(org.holoeverywhere.app.Activity) -> a
    void onAttach(android.app.Activity) -> a
    boolean onContextItemSelected(android.view.MenuItem) -> b
    boolean onContextItemSelected(com.actionbarsherlock.view.MenuItem) -> b
    void onContextMenuClosed(com.actionbarsherlock.view.ContextMenu) -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void onCreateContextMenu(com.actionbarsherlock.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> a
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    android.view.View onCreateView(org.holoeverywhere.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onDestroyView() -> j
    void onInflate(org.holoeverywhere.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    void onViewCreated(android.view.View) -> b
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View prepareDecorView(android.view.View) -> c
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
android.support.v4.app._HoloFragmentInflater -> android.support.v4.app.al:
    android.view.View inflate(android.util.AttributeSet,android.view.View,android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    android.view.View inflate(org.holoeverywhere.LayoutInflater,android.util.AttributeSet,android.view.View,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManagerImpl obtainFragmentManager(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.l:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.q:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.t:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.v:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.w:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.x:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.y:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.z:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aa:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ab:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    boolean mFakeDragging -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Z
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> aa
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ab
    int mDrawingOrder -> ac
    java.util.ArrayList mDrawingOrderedChildren -> ad
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ae
    java.lang.Runnable mEndScrollRunnable -> af
    int mScrollState -> ag
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ac:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ad:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ae:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.af:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ag:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ah:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ai:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.aj:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ak:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.al:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.am:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.CursorAdapter -> android.support.v4.d.a:
    boolean mDataValid -> a
    boolean mAutoRequery -> b
    android.database.Cursor mCursor -> c
    android.content.Context mContext -> d
    int mRowIDColumn -> e
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> f
    android.database.DataSetObserver mDataSetObserver -> g
    android.support.v4.widget.CursorFilter mCursorFilter -> h
    android.widget.FilterQueryProvider mFilterQueryProvider -> i
    void init(android.content.Context,android.database.Cursor,int) -> a
    android.database.Cursor getCursor() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void changeCursor(android.database.Cursor) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> b
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.widget.Filter getFilter() -> getFilter
    void onContentChanged() -> b
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.d.b:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.d.c:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.d.d:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.d.e:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.d.f:
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.database.Cursor getCursor() -> a
    void changeCursor(android.database.Cursor) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.g:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.j:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.k:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.d.l:
    int mLayout -> j
    int mDropDownLayout -> k
    android.view.LayoutInflater mInflater -> l
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.d.m:
    int[] mFrom -> j
    int[] mTo -> k
    int mStringConversionColumn -> m
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> n
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> o
    java.lang.String[] mOriginalFrom -> l
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void setViewImage(android.widget.ImageView,java.lang.String) -> a
    void setViewText(android.widget.TextView,java.lang.String) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    void findColumns(java.lang.String[]) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> b
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.d.n:
    java.lang.CharSequence convertToString(android.database.Cursor) -> a
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.d.o:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> a
com.actionbarsherlock.ActionBarSherlock -> com.actionbarsherlock.a:
    java.lang.Class[] CONSTRUCTOR_ARGS -> c
    java.util.HashMap IMPLEMENTATIONS -> d
    android.app.Activity mActivity -> a
    boolean mIsDelegate -> b
    void registerImplementation(java.lang.Class) -> a
    boolean unregisterImplementation(java.lang.Class) -> b
    com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int) -> a
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchPostResume() -> a
    void dispatchPause() -> b
    void dispatchStop() -> c
    void dispatchInvalidateOptionsMenu() -> d
    boolean dispatchOpenOptionsMenu() -> e
    boolean dispatchCloseOptionsMenu() -> f
    void dispatchPostCreate(android.os.Bundle) -> a
    void dispatchTitleChanged(java.lang.CharSequence,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchMenuOpened(int,android.view.Menu) -> a
    void dispatchPanelClosed(int,android.view.Menu) -> b
    void dispatchDestroy() -> g
    boolean callbackCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    boolean callbackPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> b
    boolean callbackOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> a
com.actionbarsherlock.ActionBarSherlock$Implementation -> com.actionbarsherlock.b:
    int api() -> a
    int dpi() -> b
com.actionbarsherlock.ActionBarSherlock$OnActionModeFinishedListener -> com.actionbarsherlock.c:
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> a
com.actionbarsherlock.ActionBarSherlock$OnActionModeStartedListener -> com.actionbarsherlock.d:
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> a_
com.actionbarsherlock.ActionBarSherlock$OnCreateOptionsMenuListener -> com.actionbarsherlock.e:
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> a
com.actionbarsherlock.ActionBarSherlock$OnCreatePanelMenuListener -> com.actionbarsherlock.f:
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> a
com.actionbarsherlock.ActionBarSherlock$OnMenuItemSelectedListener -> com.actionbarsherlock.g:
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.ActionBarSherlock$OnOptionsItemSelectedListener -> com.actionbarsherlock.h:
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.ActionBarSherlock$OnPrepareOptionsMenuListener -> com.actionbarsherlock.i:
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> a
com.actionbarsherlock.ActionBarSherlock$OnPreparePanelListener -> com.actionbarsherlock.j:
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> a
com.actionbarsherlock.R -> com.actionbarsherlock.k:
com.actionbarsherlock.R$attr -> com.actionbarsherlock.l:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionSpinnerItemStyle -> actionSpinnerItemStyle
    int activatedBackgroundIndicator -> activatedBackgroundIndicator
    int activityChooserViewStyle -> activityChooserViewStyle
    int alertDialogCenterButtons -> alertDialogCenterButtons
    int alertDialogStyle -> alertDialogStyle
    int alertDialogTheme -> alertDialogTheme
    int autoCompleteTextViewStyle -> autoCompleteTextViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int borderlessButtonStyle -> borderlessButtonStyle
    int bottomBright -> bottomBright
    int bottomDark -> bottomDark
    int bottomMedium -> bottomMedium
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int buttonStyleSmall -> buttonStyleSmall
    int calendarViewShown -> calendarViewShown
    int calendarViewStyle -> calendarViewStyle
    int centerBright -> centerBright
    int centerDark -> centerDark
    int centerMedium -> centerMedium
    int customNavigationLayout -> customNavigationLayout
    int datePickerStyle -> datePickerStyle
    int dateTextAppearance -> dateTextAppearance
    int detailsElementBackground -> detailsElementBackground
    int dialogTheme -> dialogTheme
    int disableChildrenWhenDisabled -> disableChildrenWhenDisabled
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int dropDownHintAppearance -> dropDownHintAppearance
    int dropDownHorizontalOffset -> dropDownHorizontalOffset
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropDownVerticalOffset -> dropDownVerticalOffset
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int endYear -> endYear
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int fastScrollOverlayPosition -> fastScrollOverlayPosition
    int fastScrollPreviewBackgroundLeft -> fastScrollPreviewBackgroundLeft
    int fastScrollPreviewBackgroundRight -> fastScrollPreviewBackgroundRight
    int fastScrollTextColor -> fastScrollTextColor
    int fastScrollThumbDrawable -> fastScrollThumbDrawable
    int fastScrollTrackDrawable -> fastScrollTrackDrawable
    int firstDayOfWeek -> firstDayOfWeek
    int flingable -> flingable
    int focusedMonthDateColor -> focusedMonthDateColor
    int forceShownState -> forceShownState
    int fullBright -> fullBright
    int fullDark -> fullDark
    int gravity -> gravity
    int headerBackground -> headerBackground
    int height -> height
    int holoTheme -> holoTheme
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int horizontalDivider -> horizontalDivider
    int horizontalProgressLayout -> horizontalProgressLayout
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int itemBackground -> itemBackground
    int itemIconDisabledAlpha -> itemIconDisabledAlpha
    int itemPadding -> itemPadding
    int itemTextAppearance -> itemTextAppearance
    int layout -> layout
    int listDividerAlertDialog -> listDividerAlertDialog
    int listItemLayout -> listItemLayout
    int listLayout -> listLayout
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int maxDate -> maxDate
    int minDate -> minDate
    int modalBackgroundWrapper -> modalBackgroundWrapper
    int multiChoiceItemLayout -> multiChoiceItemLayout
    int navigationMode -> navigationMode
    int numberPickerDownButtonStyle -> numberPickerDownButtonStyle
    int numberPickerInputTextStyle -> numberPickerInputTextStyle
    int numberPickerStyle -> numberPickerStyle
    int numberPickerUpButtonStyle -> numberPickerUpButtonStyle
    int panelMenuListWidth -> panelMenuListWidth
    int popupMenuStyle -> popupMenuStyle
    int popupPromptView -> popupPromptView
    int preferenceTheme -> preferenceTheme
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int progressLayout -> progressLayout
    int queryHint -> queryHint
    int searchAutoCompleteTextView -> searchAutoCompleteTextView
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int segmentedButtonStyle -> segmentedButtonStyle
    int selectableItemBackground -> selectableItemBackground
    int selectedDateVerticalBar -> selectedDateVerticalBar
    int selectedWeekBackgroundColor -> selectedWeekBackgroundColor
    int selectionDivider -> selectionDivider
    int selectionDividerHeight -> selectionDividerHeight
    int selectionDividersDistance -> selectionDividersDistance
    int showDividers -> showDividers
    int showWeekNumber -> showWeekNumber
    int shownWeekCount -> shownWeekCount
    int singleChoiceItemLayout -> singleChoiceItemLayout
    int solidColor -> solidColor
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerItemStyle -> spinnerItemStyle
    int spinnerMode -> spinnerMode
    int spinnerStyle -> spinnerStyle
    int spinnersShown -> spinnersShown
    int startYear -> startYear
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int switchMinWidth -> switchMinWidth
    int switchPadding -> switchPadding
    int switchStyle -> switchStyle
    int switchStyleOld -> switchStyleOld
    int switchTextAppearance -> switchTextAppearance
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmall -> textAppearanceSmall
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorAlertDialogListItem -> textColorAlertDialogListItem
    int textColorPrimary -> textColorPrimary
    int textColorPrimaryDisableOnly -> textColorPrimaryDisableOnly
    int textColorPrimaryInverse -> textColorPrimaryInverse
    int textColorSearchUrl -> textColorSearchUrl
    int textOff -> textOff
    int textOn -> textOn
    int thumb -> thumb
    int thumbTextPadding -> thumbTextPadding
    int timePickerStyle -> timePickerStyle
    int title -> title
    int titleTextStyle -> titleTextStyle
    int toggleWhenClick -> toggleWhenClick
    int topBright -> topBright
    int topDark -> topDark
    int track -> track
    int unfocusedMonthDateColor -> unfocusedMonthDateColor
    int verticalDivider -> verticalDivider
    int virtualButtonPressedDrawable -> virtualButtonPressedDrawable
    int weekDayTextAppearance -> weekDayTextAppearance
    int weekNumberColor -> weekNumberColor
    int weekSeparatorLineColor -> weekSeparatorLineColor
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowAnimationStyle -> windowAnimationStyle
    int windowContentOverlay -> windowContentOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowMinHeightMajor -> windowMinHeightMajor
    int windowMinHeightMinor -> windowMinHeightMinor
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    int windowSplitActionBar -> windowSplitActionBar
com.actionbarsherlock.R$bool -> com.actionbarsherlock.m:
    int abs__action_bar_embed_tabs -> abs__action_bar_embed_tabs
    int abs__action_bar_expanded_action_views_exclusive -> abs__action_bar_expanded_action_views_exclusive
    int abs__config_actionMenuItemAllCaps -> abs__config_actionMenuItemAllCaps
    int abs__config_allowActionMenuItemTextWithIcon -> abs__config_allowActionMenuItemTextWithIcon
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> abs__config_showMenuShortcutsWhenKeyboardPresent
    int abs__split_action_bar_is_narrow -> abs__split_action_bar_is_narrow
com.actionbarsherlock.R$dimen -> com.actionbarsherlock.n:
    int abs__action_bar_default_height -> abs__action_bar_default_height
    int abs__action_bar_icon_vertical_padding -> abs__action_bar_icon_vertical_padding
    int abs__action_bar_subtitle_bottom_margin -> abs__action_bar_subtitle_bottom_margin
    int abs__action_bar_subtitle_text_size -> abs__action_bar_subtitle_text_size
    int abs__action_bar_subtitle_top_margin -> abs__action_bar_subtitle_top_margin
    int abs__action_bar_title_text_size -> abs__action_bar_title_text_size
    int abs__action_button_min_width -> abs__action_button_min_width
    int abs__config_prefDialogWidth -> abs__config_prefDialogWidth
    int abs__dialog_min_width_major -> abs__dialog_min_width_major
    int abs__dialog_min_width_minor -> abs__dialog_min_width_minor
    int abs__dropdownitem_icon_width -> abs__dropdownitem_icon_width
    int abs__dropdownitem_text_padding_left -> abs__dropdownitem_text_padding_left
    int abs__dropdownitem_text_padding_right -> abs__dropdownitem_text_padding_right
    int abs__search_view_preferred_width -> abs__search_view_preferred_width
    int abs__search_view_text_min_width -> abs__search_view_text_min_width
    int alert_dialog_button_bar_height -> alert_dialog_button_bar_height
    int alert_dialog_title_height -> alert_dialog_title_height
    int config_prefDialogWidth -> config_prefDialogWidth
    int dialog_fixed_height_major -> dialog_fixed_height_major
    int dialog_fixed_height_minor -> dialog_fixed_height_minor
    int dialog_fixed_width_major -> dialog_fixed_width_major
    int dialog_fixed_width_minor -> dialog_fixed_width_minor
    int dialog_min_width_major -> dialog_min_width_major
    int dialog_min_width_minor -> dialog_min_width_minor
    int fastscroll_overlay_size -> fastscroll_overlay_size
    int fastscroll_thumb_height -> fastscroll_thumb_height
    int fastscroll_thumb_width -> fastscroll_thumb_width
com.actionbarsherlock.R$drawable -> com.actionbarsherlock.o:
    int abs__ab_bottom_solid_dark_holo -> abs__ab_bottom_solid_dark_holo
    int abs__ab_bottom_solid_inverse_holo -> abs__ab_bottom_solid_inverse_holo
    int abs__ab_bottom_solid_light_holo -> abs__ab_bottom_solid_light_holo
    int abs__ab_bottom_transparent_dark_holo -> abs__ab_bottom_transparent_dark_holo
    int abs__ab_bottom_transparent_light_holo -> abs__ab_bottom_transparent_light_holo
    int abs__ab_share_pack_holo_dark -> abs__ab_share_pack_holo_dark
    int abs__ab_share_pack_holo_light -> abs__ab_share_pack_holo_light
    int abs__ab_solid_dark_holo -> abs__ab_solid_dark_holo
    int abs__ab_solid_light_holo -> abs__ab_solid_light_holo
    int abs__ab_solid_shadow_holo -> abs__ab_solid_shadow_holo
    int abs__ab_stacked_solid_dark_holo -> abs__ab_stacked_solid_dark_holo
    int abs__ab_stacked_solid_light_holo -> abs__ab_stacked_solid_light_holo
    int abs__ab_stacked_transparent_dark_holo -> abs__ab_stacked_transparent_dark_holo
    int abs__ab_stacked_transparent_light_holo -> abs__ab_stacked_transparent_light_holo
    int abs__ab_transparent_dark_holo -> abs__ab_transparent_dark_holo
    int abs__ab_transparent_light_holo -> abs__ab_transparent_light_holo
    int abs__activated_background_holo_dark -> abs__activated_background_holo_dark
    int abs__activated_background_holo_light -> abs__activated_background_holo_light
    int abs__btn_cab_done_default_holo_dark -> abs__btn_cab_done_default_holo_dark
    int abs__btn_cab_done_default_holo_light -> abs__btn_cab_done_default_holo_light
    int abs__btn_cab_done_focused_holo_dark -> abs__btn_cab_done_focused_holo_dark
    int abs__btn_cab_done_focused_holo_light -> abs__btn_cab_done_focused_holo_light
    int abs__btn_cab_done_holo_dark -> abs__btn_cab_done_holo_dark
    int abs__btn_cab_done_holo_light -> abs__btn_cab_done_holo_light
    int abs__btn_cab_done_pressed_holo_dark -> abs__btn_cab_done_pressed_holo_dark
    int abs__btn_cab_done_pressed_holo_light -> abs__btn_cab_done_pressed_holo_light
    int abs__cab_background_bottom_holo_dark -> abs__cab_background_bottom_holo_dark
    int abs__cab_background_bottom_holo_light -> abs__cab_background_bottom_holo_light
    int abs__cab_background_top_holo_dark -> abs__cab_background_top_holo_dark
    int abs__cab_background_top_holo_light -> abs__cab_background_top_holo_light
    int abs__ic_ab_back_holo_dark -> abs__ic_ab_back_holo_dark
    int abs__ic_ab_back_holo_light -> abs__ic_ab_back_holo_light
    int abs__ic_cab_done_holo_dark -> abs__ic_cab_done_holo_dark
    int abs__ic_cab_done_holo_light -> abs__ic_cab_done_holo_light
    int abs__ic_clear -> abs__ic_clear
    int abs__ic_clear_disabled -> abs__ic_clear_disabled
    int abs__ic_clear_holo_light -> abs__ic_clear_holo_light
    int abs__ic_clear_normal -> abs__ic_clear_normal
    int abs__ic_clear_search_api_disabled_holo_light -> abs__ic_clear_search_api_disabled_holo_light
    int abs__ic_clear_search_api_holo_light -> abs__ic_clear_search_api_holo_light
    int abs__ic_commit_search_api_holo_dark -> abs__ic_commit_search_api_holo_dark
    int abs__ic_commit_search_api_holo_light -> abs__ic_commit_search_api_holo_light
    int abs__ic_go -> abs__ic_go
    int abs__ic_go_search_api_holo_light -> abs__ic_go_search_api_holo_light
    int abs__ic_menu_moreoverflow_holo_dark -> abs__ic_menu_moreoverflow_holo_dark
    int abs__ic_menu_moreoverflow_holo_light -> abs__ic_menu_moreoverflow_holo_light
    int abs__ic_menu_moreoverflow_normal_holo_dark -> abs__ic_menu_moreoverflow_normal_holo_dark
    int abs__ic_menu_moreoverflow_normal_holo_light -> abs__ic_menu_moreoverflow_normal_holo_light
    int abs__ic_menu_share_holo_dark -> abs__ic_menu_share_holo_dark
    int abs__ic_menu_share_holo_light -> abs__ic_menu_share_holo_light
    int abs__ic_search -> abs__ic_search
    int abs__ic_search_api_holo_light -> abs__ic_search_api_holo_light
    int abs__ic_voice_search -> abs__ic_voice_search
    int abs__ic_voice_search_api_holo_light -> abs__ic_voice_search_api_holo_light
    int abs__item_background_holo_dark -> abs__item_background_holo_dark
    int abs__item_background_holo_light -> abs__item_background_holo_light
    int abs__list_activated_holo -> abs__list_activated_holo
    int abs__list_divider_holo_dark -> abs__list_divider_holo_dark
    int abs__list_divider_holo_light -> abs__list_divider_holo_light
    int abs__list_focused_holo -> abs__list_focused_holo
    int abs__list_longpressed_holo -> abs__list_longpressed_holo
    int abs__list_pressed_holo_dark -> abs__list_pressed_holo_dark
    int abs__list_pressed_holo_light -> abs__list_pressed_holo_light
    int abs__list_selector_background_transition_holo_dark -> abs__list_selector_background_transition_holo_dark
    int abs__list_selector_background_transition_holo_light -> abs__list_selector_background_transition_holo_light
    int abs__list_selector_disabled_holo_dark -> abs__list_selector_disabled_holo_dark
    int abs__list_selector_disabled_holo_light -> abs__list_selector_disabled_holo_light
    int abs__list_selector_holo_dark -> abs__list_selector_holo_dark
    int abs__list_selector_holo_light -> abs__list_selector_holo_light
    int abs__menu_dropdown_panel_holo_dark -> abs__menu_dropdown_panel_holo_dark
    int abs__menu_dropdown_panel_holo_light -> abs__menu_dropdown_panel_holo_light
    int abs__progress_bg_holo_dark -> abs__progress_bg_holo_dark
    int abs__progress_bg_holo_light -> abs__progress_bg_holo_light
    int abs__progress_horizontal_holo_dark -> abs__progress_horizontal_holo_dark
    int abs__progress_horizontal_holo_light -> abs__progress_horizontal_holo_light
    int abs__progress_medium_holo -> abs__progress_medium_holo
    int abs__progress_primary_holo_dark -> abs__progress_primary_holo_dark
    int abs__progress_primary_holo_light -> abs__progress_primary_holo_light
    int abs__progress_secondary_holo_dark -> abs__progress_secondary_holo_dark
    int abs__progress_secondary_holo_light -> abs__progress_secondary_holo_light
    int abs__search_dropdown_dark -> abs__search_dropdown_dark
    int abs__search_dropdown_light -> abs__search_dropdown_light
    int abs__spinner_48_inner_holo -> abs__spinner_48_inner_holo
    int abs__spinner_48_outer_holo -> abs__spinner_48_outer_holo
    int abs__spinner_ab_default_holo_dark -> abs__spinner_ab_default_holo_dark
    int abs__spinner_ab_default_holo_light -> abs__spinner_ab_default_holo_light
    int abs__spinner_ab_disabled_holo_dark -> abs__spinner_ab_disabled_holo_dark
    int abs__spinner_ab_disabled_holo_light -> abs__spinner_ab_disabled_holo_light
    int abs__spinner_ab_focused_holo_dark -> abs__spinner_ab_focused_holo_dark
    int abs__spinner_ab_focused_holo_light -> abs__spinner_ab_focused_holo_light
    int abs__spinner_ab_holo_dark -> abs__spinner_ab_holo_dark
    int abs__spinner_ab_holo_light -> abs__spinner_ab_holo_light
    int abs__spinner_ab_pressed_holo_dark -> abs__spinner_ab_pressed_holo_dark
    int abs__spinner_ab_pressed_holo_light -> abs__spinner_ab_pressed_holo_light
    int abs__tab_indicator_ab_holo -> abs__tab_indicator_ab_holo
    int abs__tab_selected_focused_holo -> abs__tab_selected_focused_holo
    int abs__tab_selected_holo -> abs__tab_selected_holo
    int abs__tab_selected_pressed_holo -> abs__tab_selected_pressed_holo
    int abs__tab_unselected_pressed_holo -> abs__tab_unselected_pressed_holo
    int abs__textfield_search_default_holo_dark -> abs__textfield_search_default_holo_dark
    int abs__textfield_search_default_holo_light -> abs__textfield_search_default_holo_light
    int abs__textfield_search_right_default_holo_dark -> abs__textfield_search_right_default_holo_dark
    int abs__textfield_search_right_default_holo_light -> abs__textfield_search_right_default_holo_light
    int abs__textfield_search_right_selected_holo_dark -> abs__textfield_search_right_selected_holo_dark
    int abs__textfield_search_right_selected_holo_light -> abs__textfield_search_right_selected_holo_light
    int abs__textfield_search_selected_holo_dark -> abs__textfield_search_selected_holo_dark
    int abs__textfield_search_selected_holo_light -> abs__textfield_search_selected_holo_light
    int abs__textfield_searchview_holo_dark -> abs__textfield_searchview_holo_dark
    int abs__textfield_searchview_holo_light -> abs__textfield_searchview_holo_light
    int abs__textfield_searchview_right_holo_dark -> abs__textfield_searchview_right_holo_dark
    int abs__textfield_searchview_right_holo_light -> abs__textfield_searchview_right_holo_light
    int abs__toast_frame -> abs__toast_frame
    int activated_background_holo -> activated_background_holo
    int background_cache_hint_selector_holo_dark -> background_cache_hint_selector_holo_dark
    int background_cache_hint_selector_holo_light -> background_cache_hint_selector_holo_light
    int background_holo_dark -> background_holo_dark
    int background_holo_light -> background_holo_light
    int btn_check_label_background -> btn_check_label_background
    int btn_check_off_disable_focused_holo_light -> btn_check_off_disable_focused_holo_light
    int btn_check_off_disable_holo_dark -> btn_check_off_disable_holo_dark
    int btn_check_off_disable_holo_light -> btn_check_off_disable_holo_light
    int btn_check_off_disabled_focused_holo_dark -> btn_check_off_disabled_focused_holo_dark
    int btn_check_off_disabled_focused_holo_light -> btn_check_off_disabled_focused_holo_light
    int btn_check_off_disabled_holo_dark -> btn_check_off_disabled_holo_dark
    int btn_check_off_disabled_holo_light -> btn_check_off_disabled_holo_light
    int btn_check_off_focused_holo_dark -> btn_check_off_focused_holo_dark
    int btn_check_off_focused_holo_light -> btn_check_off_focused_holo_light
    int btn_check_off_holo -> btn_check_off_holo
    int btn_check_off_holo_dark -> btn_check_off_holo_dark
    int btn_check_off_holo_light -> btn_check_off_holo_light
    int btn_check_off_normal_holo_dark -> btn_check_off_normal_holo_dark
    int btn_check_off_normal_holo_light -> btn_check_off_normal_holo_light
    int btn_check_off_pressed_holo_dark -> btn_check_off_pressed_holo_dark
    int btn_check_off_pressed_holo_light -> btn_check_off_pressed_holo_light
    int btn_check_on_disable_focused_holo_light -> btn_check_on_disable_focused_holo_light
    int btn_check_on_disable_holo_dark -> btn_check_on_disable_holo_dark
    int btn_check_on_disable_holo_light -> btn_check_on_disable_holo_light
    int btn_check_on_disabled_focused_holo_dark -> btn_check_on_disabled_focused_holo_dark
    int btn_check_on_disabled_focused_holo_light -> btn_check_on_disabled_focused_holo_light
    int btn_check_on_disabled_holo_dark -> btn_check_on_disabled_holo_dark
    int btn_check_on_disabled_holo_light -> btn_check_on_disabled_holo_light
    int btn_check_on_focused_holo_dark -> btn_check_on_focused_holo_dark
    int btn_check_on_focused_holo_light -> btn_check_on_focused_holo_light
    int btn_check_on_holo -> btn_check_on_holo
    int btn_check_on_holo_dark -> btn_check_on_holo_dark
    int btn_check_on_holo_light -> btn_check_on_holo_light
    int btn_check_on_pressed_holo_dark -> btn_check_on_pressed_holo_dark
    int btn_check_on_pressed_holo_light -> btn_check_on_pressed_holo_light
    int btn_checkbox_holo_dark -> btn_checkbox_holo_dark
    int btn_checkbox_holo_light -> btn_checkbox_holo_light
    int btn_default_disabled_focused_holo_dark -> btn_default_disabled_focused_holo_dark
    int btn_default_disabled_focused_holo_light -> btn_default_disabled_focused_holo_light
    int btn_default_disabled_holo_dark -> btn_default_disabled_holo_dark
    int btn_default_disabled_holo_light -> btn_default_disabled_holo_light
    int btn_default_focused_holo_dark -> btn_default_focused_holo_dark
    int btn_default_focused_holo_light -> btn_default_focused_holo_light
    int btn_default_holo_dark -> btn_default_holo_dark
    int btn_default_holo_light -> btn_default_holo_light
    int btn_default_normal_holo_dark -> btn_default_normal_holo_dark
    int btn_default_normal_holo_light -> btn_default_normal_holo_light
    int btn_default_pressed_holo_dark -> btn_default_pressed_holo_dark
    int btn_default_pressed_holo_light -> btn_default_pressed_holo_light
    int btn_group_disabled_holo_dark -> btn_group_disabled_holo_dark
    int btn_group_disabled_holo_light -> btn_group_disabled_holo_light
    int btn_group_focused_holo_dark -> btn_group_focused_holo_dark
    int btn_group_focused_holo_light -> btn_group_focused_holo_light
    int btn_group_holo_dark -> btn_group_holo_dark
    int btn_group_holo_light -> btn_group_holo_light
    int btn_group_normal_holo_dark -> btn_group_normal_holo_dark
    int btn_group_normal_holo_light -> btn_group_normal_holo_light
    int btn_group_pressed_holo_dark -> btn_group_pressed_holo_dark
    int btn_group_pressed_holo_light -> btn_group_pressed_holo_light
    int btn_radio_holo_dark -> btn_radio_holo_dark
    int btn_radio_holo_light -> btn_radio_holo_light
    int btn_radio_label_background -> btn_radio_label_background
    int btn_radio_off_disabled_focused_holo_dark -> btn_radio_off_disabled_focused_holo_dark
    int btn_radio_off_disabled_focused_holo_light -> btn_radio_off_disabled_focused_holo_light
    int btn_radio_off_disabled_holo_dark -> btn_radio_off_disabled_holo_dark
    int btn_radio_off_disabled_holo_light -> btn_radio_off_disabled_holo_light
    int btn_radio_off_focused_holo_dark -> btn_radio_off_focused_holo_dark
    int btn_radio_off_focused_holo_light -> btn_radio_off_focused_holo_light
    int btn_radio_off_holo -> btn_radio_off_holo
    int btn_radio_off_holo_dark -> btn_radio_off_holo_dark
    int btn_radio_off_holo_light -> btn_radio_off_holo_light
    int btn_radio_off_pressed_holo_dark -> btn_radio_off_pressed_holo_dark
    int btn_radio_off_pressed_holo_light -> btn_radio_off_pressed_holo_light
    int btn_radio_on_disabled_focused_holo_dark -> btn_radio_on_disabled_focused_holo_dark
    int btn_radio_on_disabled_focused_holo_light -> btn_radio_on_disabled_focused_holo_light
    int btn_radio_on_disabled_holo_dark -> btn_radio_on_disabled_holo_dark
    int btn_radio_on_disabled_holo_light -> btn_radio_on_disabled_holo_light
    int btn_radio_on_focused_holo_dark -> btn_radio_on_focused_holo_dark
    int btn_radio_on_focused_holo_light -> btn_radio_on_focused_holo_light
    int btn_radio_on_holo_dark -> btn_radio_on_holo_dark
    int btn_radio_on_holo_light -> btn_radio_on_holo_light
    int btn_radio_on_pressed_holo_dark -> btn_radio_on_pressed_holo_dark
    int btn_radio_on_pressed_holo_light -> btn_radio_on_pressed_holo_light
    int btn_rating_star_off_disabled_focused_holo_dark -> btn_rating_star_off_disabled_focused_holo_dark
    int btn_rating_star_off_disabled_focused_holo_light -> btn_rating_star_off_disabled_focused_holo_light
    int btn_rating_star_off_disabled_holo_dark -> btn_rating_star_off_disabled_holo_dark
    int btn_rating_star_off_disabled_holo_light -> btn_rating_star_off_disabled_holo_light
    int btn_rating_star_off_focused_holo_dark -> btn_rating_star_off_focused_holo_dark
    int btn_rating_star_off_focused_holo_light -> btn_rating_star_off_focused_holo_light
    int btn_rating_star_off_normal_holo_dark -> btn_rating_star_off_normal_holo_dark
    int btn_rating_star_off_normal_holo_light -> btn_rating_star_off_normal_holo_light
    int btn_rating_star_off_pressed_holo_dark -> btn_rating_star_off_pressed_holo_dark
    int btn_rating_star_off_pressed_holo_light -> btn_rating_star_off_pressed_holo_light
    int btn_rating_star_on_disabled_focused_holo_dark -> btn_rating_star_on_disabled_focused_holo_dark
    int btn_rating_star_on_disabled_focused_holo_light -> btn_rating_star_on_disabled_focused_holo_light
    int btn_rating_star_on_disabled_holo_dark -> btn_rating_star_on_disabled_holo_dark
    int btn_rating_star_on_disabled_holo_light -> btn_rating_star_on_disabled_holo_light
    int btn_rating_star_on_focused_holo_dark -> btn_rating_star_on_focused_holo_dark
    int btn_rating_star_on_focused_holo_light -> btn_rating_star_on_focused_holo_light
    int btn_rating_star_on_normal_holo_dark -> btn_rating_star_on_normal_holo_dark
    int btn_rating_star_on_normal_holo_light -> btn_rating_star_on_normal_holo_light
    int btn_rating_star_on_pressed_holo_dark -> btn_rating_star_on_pressed_holo_dark
    int btn_rating_star_on_pressed_holo_light -> btn_rating_star_on_pressed_holo_light
    int btn_toggle_holo_dark -> btn_toggle_holo_dark
    int btn_toggle_holo_light -> btn_toggle_holo_light
    int btn_toggle_off_disabled_focused_holo_dark -> btn_toggle_off_disabled_focused_holo_dark
    int btn_toggle_off_disabled_focused_holo_light -> btn_toggle_off_disabled_focused_holo_light
    int btn_toggle_off_disabled_holo_dark -> btn_toggle_off_disabled_holo_dark
    int btn_toggle_off_disabled_holo_light -> btn_toggle_off_disabled_holo_light
    int btn_toggle_off_focused_holo_dark -> btn_toggle_off_focused_holo_dark
    int btn_toggle_off_focused_holo_light -> btn_toggle_off_focused_holo_light
    int btn_toggle_off_normal_holo_dark -> btn_toggle_off_normal_holo_dark
    int btn_toggle_off_normal_holo_light -> btn_toggle_off_normal_holo_light
    int btn_toggle_off_pressed_holo_dark -> btn_toggle_off_pressed_holo_dark
    int btn_toggle_off_pressed_holo_light -> btn_toggle_off_pressed_holo_light
    int btn_toggle_on_disabled_focused_holo_dark -> btn_toggle_on_disabled_focused_holo_dark
    int btn_toggle_on_disabled_focused_holo_light -> btn_toggle_on_disabled_focused_holo_light
    int btn_toggle_on_disabled_holo_dark -> btn_toggle_on_disabled_holo_dark
    int btn_toggle_on_disabled_holo_light -> btn_toggle_on_disabled_holo_light
    int btn_toggle_on_focused_holo_dark -> btn_toggle_on_focused_holo_dark
    int btn_toggle_on_focused_holo_light -> btn_toggle_on_focused_holo_light
    int btn_toggle_on_normal_holo_dark -> btn_toggle_on_normal_holo_dark
    int btn_toggle_on_normal_holo_light -> btn_toggle_on_normal_holo_light
    int btn_toggle_on_pressed_holo_dark -> btn_toggle_on_pressed_holo_dark
    int btn_toggle_on_pressed_holo_light -> btn_toggle_on_pressed_holo_light
    int day_picker_week_view_dayline_holo -> day_picker_week_view_dayline_holo
    int dialog_bottom_holo_dark -> dialog_bottom_holo_dark
    int dialog_bottom_holo_light -> dialog_bottom_holo_light
    int dialog_divider_horizontal_holo_dark -> dialog_divider_horizontal_holo_dark
    int dialog_divider_horizontal_holo_light -> dialog_divider_horizontal_holo_light
    int dialog_full_holo_dark -> dialog_full_holo_dark
    int dialog_full_holo_light -> dialog_full_holo_light
    int dialog_middle_holo -> dialog_middle_holo
    int dialog_middle_holo_dark -> dialog_middle_holo_dark
    int dialog_middle_holo_light -> dialog_middle_holo_light
    int dialog_top_holo_dark -> dialog_top_holo_dark
    int dialog_top_holo_light -> dialog_top_holo_light
    int edit_text_holo_dark -> edit_text_holo_dark
    int edit_text_holo_light -> edit_text_holo_light
    int expander_close_holo_dark -> expander_close_holo_dark
    int expander_close_holo_light -> expander_close_holo_light
    int expander_group -> expander_group
    int expander_group_holo_dark -> expander_group_holo_dark
    int expander_group_holo_light -> expander_group_holo_light
    int expander_ic_maximized -> expander_ic_maximized
    int expander_ic_minimized -> expander_ic_minimized
    int expander_open_holo_dark -> expander_open_holo_dark
    int expander_open_holo_light -> expander_open_holo_light
    int fastscroll_label_left_holo_dark -> fastscroll_label_left_holo_dark
    int fastscroll_label_left_holo_light -> fastscroll_label_left_holo_light
    int fastscroll_label_right_holo_dark -> fastscroll_label_right_holo_dark
    int fastscroll_label_right_holo_light -> fastscroll_label_right_holo_light
    int fastscroll_thumb_default_holo -> fastscroll_thumb_default_holo
    int fastscroll_thumb_holo -> fastscroll_thumb_holo
    int fastscroll_thumb_pressed_holo -> fastscroll_thumb_pressed_holo
    int fastscroll_track_default_holo_dark -> fastscroll_track_default_holo_dark
    int fastscroll_track_default_holo_light -> fastscroll_track_default_holo_light
    int fastscroll_track_holo_dark -> fastscroll_track_holo_dark
    int fastscroll_track_holo_light -> fastscroll_track_holo_light
    int fastscroll_track_pressed_holo_dark -> fastscroll_track_pressed_holo_dark
    int fastscroll_track_pressed_holo_light -> fastscroll_track_pressed_holo_light
    int item_background_holo_dark -> item_background_holo_dark
    int item_background_holo_light -> item_background_holo_light
    int list_activated_holo -> list_activated_holo
    int list_divider_holo_dark -> list_divider_holo_dark
    int list_divider_holo_light -> list_divider_holo_light
    int list_focused_holo -> list_focused_holo
    int list_longpressed_holo -> list_longpressed_holo
    int list_pressed_holo_dark -> list_pressed_holo_dark
    int list_pressed_holo_light -> list_pressed_holo_light
    int list_section_divider_holo_dark -> list_section_divider_holo_dark
    int list_section_divider_holo_light -> list_section_divider_holo_light
    int list_selector_background_transition_holo_dark -> list_selector_background_transition_holo_dark
    int list_selector_background_transition_holo_light -> list_selector_background_transition_holo_light
    int list_selector_disabled_holo_dark -> list_selector_disabled_holo_dark
    int list_selector_disabled_holo_light -> list_selector_disabled_holo_light
    int list_selector_holo_dark -> list_selector_holo_dark
    int list_selector_holo_light -> list_selector_holo_light
    int menu_background_fill_parent_width_holo_dark -> menu_background_fill_parent_width_holo_dark
    int menu_background_fill_parent_width_holo_light -> menu_background_fill_parent_width_holo_light
    int menu_dropdown_panel_holo_dark -> menu_dropdown_panel_holo_dark
    int menu_dropdown_panel_holo_light -> menu_dropdown_panel_holo_light
    int menu_hardkey_panel_holo_dark -> menu_hardkey_panel_holo_dark
    int menu_hardkey_panel_holo_light -> menu_hardkey_panel_holo_light
    int modal_background_holo_dark -> modal_background_holo_dark
    int modal_background_holo_light -> modal_background_holo_light
    int numberpicker_selection_divider -> numberpicker_selection_divider
    int old_switch_thumb_activated_holo_dark -> old_switch_thumb_activated_holo_dark
    int old_switch_thumb_activated_holo_light -> old_switch_thumb_activated_holo_light
    int old_switch_thumb_disabled_holo_dark -> old_switch_thumb_disabled_holo_dark
    int old_switch_thumb_disabled_holo_light -> old_switch_thumb_disabled_holo_light
    int old_switch_thumb_holo_dark -> old_switch_thumb_holo_dark
    int old_switch_thumb_holo_light -> old_switch_thumb_holo_light
    int old_switch_thumb_pressed_holo_dark -> old_switch_thumb_pressed_holo_dark
    int old_switch_thumb_pressed_holo_light -> old_switch_thumb_pressed_holo_light
    int overscroll_edge -> overscroll_edge
    int overscroll_glow -> overscroll_glow
    int panel_bg_holo_dark -> panel_bg_holo_dark
    int panel_bg_holo_light -> panel_bg_holo_light
    int progress_bg_holo_dark -> progress_bg_holo_dark
    int progress_bg_holo_light -> progress_bg_holo_light
    int progress_horizontal_holo_dark -> progress_horizontal_holo_dark
    int progress_horizontal_holo_light -> progress_horizontal_holo_light
    int progress_indeterminate_horizontal_holo -> progress_indeterminate_horizontal_holo
    int progress_large_holo -> progress_large_holo
    int progress_medium_holo -> progress_medium_holo
    int progress_primary_holo_dark -> progress_primary_holo_dark
    int progress_primary_holo_light -> progress_primary_holo_light
    int progress_secondary_holo_dark -> progress_secondary_holo_dark
    int progress_secondary_holo_light -> progress_secondary_holo_light
    int progress_small_holo -> progress_small_holo
    int progressbar_indeterminate_holo1 -> progressbar_indeterminate_holo1
    int progressbar_indeterminate_holo2 -> progressbar_indeterminate_holo2
    int progressbar_indeterminate_holo3 -> progressbar_indeterminate_holo3
    int progressbar_indeterminate_holo4 -> progressbar_indeterminate_holo4
    int progressbar_indeterminate_holo5 -> progressbar_indeterminate_holo5
    int progressbar_indeterminate_holo6 -> progressbar_indeterminate_holo6
    int progressbar_indeterminate_holo7 -> progressbar_indeterminate_holo7
    int progressbar_indeterminate_holo8 -> progressbar_indeterminate_holo8
    int rate_star_big_half_holo_dark -> rate_star_big_half_holo_dark
    int rate_star_big_half_holo_light -> rate_star_big_half_holo_light
    int rate_star_big_off_holo_dark -> rate_star_big_off_holo_dark
    int rate_star_big_off_holo_light -> rate_star_big_off_holo_light
    int rate_star_big_on_holo_dark -> rate_star_big_on_holo_dark
    int rate_star_big_on_holo_light -> rate_star_big_on_holo_light
    int rate_star_small_half_holo_dark -> rate_star_small_half_holo_dark
    int rate_star_small_half_holo_light -> rate_star_small_half_holo_light
    int rate_star_small_off_holo_dark -> rate_star_small_off_holo_dark
    int rate_star_small_off_holo_light -> rate_star_small_off_holo_light
    int rate_star_small_on_holo_dark -> rate_star_small_on_holo_dark
    int rate_star_small_on_holo_light -> rate_star_small_on_holo_light
    int ratingbar_full_empty_holo_dark -> ratingbar_full_empty_holo_dark
    int ratingbar_full_empty_holo_light -> ratingbar_full_empty_holo_light
    int ratingbar_full_filled_holo_dark -> ratingbar_full_filled_holo_dark
    int ratingbar_full_filled_holo_light -> ratingbar_full_filled_holo_light
    int ratingbar_full_holo_dark -> ratingbar_full_holo_dark
    int ratingbar_full_holo_light -> ratingbar_full_holo_light
    int ratingbar_holo_dark -> ratingbar_holo_dark
    int ratingbar_holo_light -> ratingbar_holo_light
    int ratingbar_small_holo_dark -> ratingbar_small_holo_dark
    int ratingbar_small_holo_light -> ratingbar_small_holo_light
    int scrollbar_handle_holo_dark -> scrollbar_handle_holo_dark
    int scrollbar_handle_holo_light -> scrollbar_handle_holo_light
    int scrubber_control_disabled_holo -> scrubber_control_disabled_holo
    int scrubber_control_focused_holo -> scrubber_control_focused_holo
    int scrubber_control_normal_holo -> scrubber_control_normal_holo
    int scrubber_control_pressed_holo -> scrubber_control_pressed_holo
    int scrubber_control_selector_holo -> scrubber_control_selector_holo
    int scrubber_primary_holo -> scrubber_primary_holo
    int scrubber_progress_horizontal_holo_dark -> scrubber_progress_horizontal_holo_dark
    int scrubber_progress_horizontal_holo_light -> scrubber_progress_horizontal_holo_light
    int scrubber_secondary_holo -> scrubber_secondary_holo
    int scrubber_track_holo_dark -> scrubber_track_holo_dark
    int scrubber_track_holo_light -> scrubber_track_holo_light
    int spinner_16_inner_holo -> spinner_16_inner_holo
    int spinner_16_outer_holo -> spinner_16_outer_holo
    int spinner_20_inner_holo -> spinner_20_inner_holo
    int spinner_20_outer_holo -> spinner_20_outer_holo
    int spinner_48_inner_holo -> spinner_48_inner_holo
    int spinner_48_outer_holo -> spinner_48_outer_holo
    int spinner_76_inner_holo -> spinner_76_inner_holo
    int spinner_76_outer_holo -> spinner_76_outer_holo
    int spinner_background_holo_dark -> spinner_background_holo_dark
    int spinner_background_holo_light -> spinner_background_holo_light
    int spinner_default_holo_dark -> spinner_default_holo_dark
    int spinner_default_holo_light -> spinner_default_holo_light
    int spinner_disabled_holo_dark -> spinner_disabled_holo_dark
    int spinner_disabled_holo_light -> spinner_disabled_holo_light
    int spinner_focused_holo_dark -> spinner_focused_holo_dark
    int spinner_focused_holo_light -> spinner_focused_holo_light
    int spinner_pressed_holo_dark -> spinner_pressed_holo_dark
    int spinner_pressed_holo_light -> spinner_pressed_holo_light
    int switch_bg_disabled_holo_dark -> switch_bg_disabled_holo_dark
    int switch_bg_disabled_holo_light -> switch_bg_disabled_holo_light
    int switch_bg_focused_holo_dark -> switch_bg_focused_holo_dark
    int switch_bg_focused_holo_light -> switch_bg_focused_holo_light
    int switch_bg_holo_dark -> switch_bg_holo_dark
    int switch_bg_holo_light -> switch_bg_holo_light
    int switch_inner_holo_dark -> switch_inner_holo_dark
    int switch_inner_holo_light -> switch_inner_holo_light
    int switch_old_inner_holo_dark -> switch_old_inner_holo_dark
    int switch_old_inner_holo_light -> switch_old_inner_holo_light
    int switch_thumb_activated_holo_dark -> switch_thumb_activated_holo_dark
    int switch_thumb_activated_holo_light -> switch_thumb_activated_holo_light
    int switch_thumb_disabled_holo_dark -> switch_thumb_disabled_holo_dark
    int switch_thumb_disabled_holo_light -> switch_thumb_disabled_holo_light
    int switch_thumb_holo_dark -> switch_thumb_holo_dark
    int switch_thumb_holo_light -> switch_thumb_holo_light
    int switch_thumb_pressed_holo_dark -> switch_thumb_pressed_holo_dark
    int switch_thumb_pressed_holo_light -> switch_thumb_pressed_holo_light
    int switch_track_holo_dark -> switch_track_holo_dark
    int switch_track_holo_light -> switch_track_holo_light
    int textfield_activated_holo_dark -> textfield_activated_holo_dark
    int textfield_activated_holo_light -> textfield_activated_holo_light
    int textfield_bg_activated_holo_dark -> textfield_bg_activated_holo_dark
    int textfield_bg_default_holo_dark -> textfield_bg_default_holo_dark
    int textfield_bg_disabled_focused_holo_dark -> textfield_bg_disabled_focused_holo_dark
    int textfield_bg_disabled_holo_dark -> textfield_bg_disabled_holo_dark
    int textfield_bg_focused_holo_dark -> textfield_bg_focused_holo_dark
    int textfield_default_holo_dark -> textfield_default_holo_dark
    int textfield_default_holo_light -> textfield_default_holo_light
    int textfield_disabled_focused_holo_dark -> textfield_disabled_focused_holo_dark
    int textfield_disabled_focused_holo_light -> textfield_disabled_focused_holo_light
    int textfield_disabled_holo_dark -> textfield_disabled_holo_dark
    int textfield_disabled_holo_light -> textfield_disabled_holo_light
    int textfield_focused_holo_dark -> textfield_focused_holo_dark
    int textfield_focused_holo_light -> textfield_focused_holo_light
    int textfield_multiline_activated_holo_dark -> textfield_multiline_activated_holo_dark
    int textfield_multiline_activated_holo_light -> textfield_multiline_activated_holo_light
    int textfield_multiline_default_holo_dark -> textfield_multiline_default_holo_dark
    int textfield_multiline_default_holo_light -> textfield_multiline_default_holo_light
    int textfield_multiline_disabled_focused_holo_dark -> textfield_multiline_disabled_focused_holo_dark
    int textfield_multiline_disabled_focused_holo_light -> textfield_multiline_disabled_focused_holo_light
    int textfield_multiline_disabled_holo_dark -> textfield_multiline_disabled_holo_dark
    int textfield_multiline_disabled_holo_light -> textfield_multiline_disabled_holo_light
    int textfield_multiline_focused_holo_dark -> textfield_multiline_focused_holo_dark
    int textfield_multiline_focused_holo_light -> textfield_multiline_focused_holo_light
    int toast_frame -> toast_frame
    int transparent -> transparent
com.actionbarsherlock.R$id -> com.actionbarsherlock.p:
    int abs__action_bar -> abs__action_bar
    int abs__action_bar_container -> abs__action_bar_container
    int abs__action_bar_subtitle -> abs__action_bar_subtitle
    int abs__action_bar_title -> abs__action_bar_title
    int abs__action_context_bar -> abs__action_context_bar
    int abs__action_menu_divider -> abs__action_menu_divider
    int abs__action_menu_presenter -> abs__action_menu_presenter
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_bar_stub -> abs__action_mode_bar_stub
    int abs__action_mode_close_button -> abs__action_mode_close_button
    int abs__activity_chooser_view_content -> abs__activity_chooser_view_content
    int abs__checkbox -> abs__checkbox
    int abs__content -> abs__content
    int abs__default_activity_button -> abs__default_activity_button
    int abs__expand_activities_button -> abs__expand_activities_button
    int abs__home -> abs__home
    int abs__icon -> abs__icon
    int abs__image -> abs__image
    int abs__imageButton -> abs__imageButton
    int abs__list_item -> abs__list_item
    int abs__progress_circular -> abs__progress_circular
    int abs__progress_horizontal -> abs__progress_horizontal
    int abs__radio -> abs__radio
    int abs__search_badge -> abs__search_badge
    int abs__search_bar -> abs__search_bar
    int abs__search_button -> abs__search_button
    int abs__search_close_btn -> abs__search_close_btn
    int abs__search_edit_frame -> abs__search_edit_frame
    int abs__search_go_btn -> abs__search_go_btn
    int abs__search_mag_icon -> abs__search_mag_icon
    int abs__search_plate -> abs__search_plate
    int abs__search_src_text -> abs__search_src_text
    int abs__search_voice_btn -> abs__search_voice_btn
    int abs__shortcut -> abs__shortcut
    int abs__split_action_bar -> abs__split_action_bar
    int abs__submit_area -> abs__submit_area
    int abs__textButton -> abs__textButton
    int abs__title -> abs__title
    int abs__up -> abs__up
    int alertTitle -> alertTitle
    int all -> all
    int amPm -> amPm
    int atThumb -> atThumb
    int beginning -> beginning
    int bottom -> bottom
    int button1 -> button1
    int button2 -> button2
    int button3 -> button3
    int buttonPanel -> buttonPanel
    int buttonPanelTopDivivder -> buttonPanelTopDivivder
    int calendar_view -> calendar_view
    int center -> center
    int center_horizontal -> center_horizontal
    int center_vertical -> center_vertical
    int checkbox -> checkbox
    int clip -> clip
    int clip_horizontal -> clip_horizontal
    int clip_vertical -> clip_vertical
    int contentPanel -> contentPanel
    int custom -> custom
    int customPanel -> customPanel
    int dark -> dark
    int datePicker -> datePicker
    int day -> day
    int day_names -> day_names
    int decrement -> decrement
    int dialog -> dialog
    int disableHome -> disableHome
    int divider -> divider
    int dropdown -> dropdown
    int edit -> edit
    int edit_query -> edit_query
    int empty -> empty
    int end -> end
    int expanded_menu -> expanded_menu
    int fill -> fill
    int fill_horizontal -> fill_horizontal
    int fill_vertical -> fill_vertical
    int floating -> floating
    int homeAsUp -> homeAsUp
    int hour -> hour
    int icon -> icon
    int increment -> increment
    int internalEmpty -> internalEmpty
    int invalid -> invalid
    int left -> left
    int leftSpacer -> leftSpacer
    int light -> light
    int list -> list
    int listContainer -> listContainer
    int listMode -> listMode
    int message -> message
    int middle -> middle
    int minute -> minute
    int mixed -> mixed
    int month -> month
    int month_name -> month_name
    int none -> none
    int normal -> normal
    int numberpicker_input -> numberpicker_input
    int parentPanel -> parentPanel
    int pickers -> pickers
    int preference -> preference
    int progress -> progress
    int progressContainer -> progressContainer
    int progress_number -> progress_number
    int progress_percent -> progress_percent
    int radio -> radio
    int right -> right
    int rightSpacer -> rightSpacer
    int scrollView -> scrollView
    int secondaryProgress -> secondaryProgress
    int select_dialog_listview -> select_dialog_listview
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int start -> start
    int tabMode -> tabMode
    int tabSwipePager -> tabSwipePager
    int timePicker -> timePicker
    int title -> title
    int titleDivider -> titleDivider
    int titleDividerTop -> titleDividerTop
    int title_template -> title_template
    int top -> top
    int topPanel -> topPanel
    int typeface -> typeface
    int useLogo -> useLogo
    int wrap_content -> wrap_content
    int year -> year
com.actionbarsherlock.R$integer -> com.actionbarsherlock.q:
    int abs__max_action_buttons -> abs__max_action_buttons
    int config_activityDefaultDur -> config_activityDefaultDur
    int config_activityShortDur -> config_activityShortDur
    int config_longAnimTime -> config_longAnimTime
    int config_mediumAnimTime -> config_mediumAnimTime
    int config_shortAnimTime -> config_shortAnimTime
com.actionbarsherlock.R$layout -> com.actionbarsherlock.r:
    int abs__action_bar_home -> abs__action_bar_home
    int abs__action_bar_tab -> abs__action_bar_tab
    int abs__action_bar_tab_bar_view -> abs__action_bar_tab_bar_view
    int abs__action_bar_title_item -> abs__action_bar_title_item
    int abs__action_menu_item_layout -> abs__action_menu_item_layout
    int abs__action_menu_layout -> abs__action_menu_layout
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_close_item -> abs__action_mode_close_item
    int abs__activity_chooser_view -> abs__activity_chooser_view
    int abs__activity_chooser_view_list_item -> abs__activity_chooser_view_list_item
    int abs__list_menu_item_checkbox -> abs__list_menu_item_checkbox
    int abs__list_menu_item_icon -> abs__list_menu_item_icon
    int abs__list_menu_item_radio -> abs__list_menu_item_radio
    int abs__popup_menu_item_layout -> abs__popup_menu_item_layout
    int abs__screen_action_bar -> abs__screen_action_bar
    int abs__screen_action_bar_overlay -> abs__screen_action_bar_overlay
    int abs__screen_simple -> abs__screen_simple
    int abs__screen_simple_overlay_action_mode -> abs__screen_simple_overlay_action_mode
    int abs__search_dropdown_item_icons_2line -> abs__search_dropdown_item_icons_2line
    int abs__search_view -> abs__search_view
    int abs__simple_dropdown_hint -> abs__simple_dropdown_hint
    int alert_dialog_holo -> alert_dialog_holo
    int alert_dialog_progress_holo -> alert_dialog_progress_holo
    int calendar_view -> calendar_view
    int date_picker_dialog -> date_picker_dialog
    int date_picker_holo -> date_picker_holo
    int expandable_list_content -> expandable_list_content
    int expanded_menu_layout -> expanded_menu_layout
    int grid_content -> grid_content
    int list_content -> list_content
    int list_menu_item_checkbox -> list_menu_item_checkbox
    int list_menu_item_icon -> list_menu_item_icon
    int list_menu_item_layout -> list_menu_item_layout
    int list_menu_item_radio -> list_menu_item_radio
    int number_picker_with_selector_wheel -> number_picker_with_selector_wheel
    int popup_menu_item_layout -> popup_menu_item_layout
    int progress_dialog_holo -> progress_dialog_holo
    int select_dialog_holo -> select_dialog_holo
    int select_dialog_item_holo -> select_dialog_item_holo
    int select_dialog_multichoice_holo -> select_dialog_multichoice_holo
    int select_dialog_singlechoice_holo -> select_dialog_singlechoice_holo
    int sherlock_spinner_dropdown_item -> sherlock_spinner_dropdown_item
    int sherlock_spinner_item -> sherlock_spinner_item
    int simple_dropdown_hint -> simple_dropdown_hint
    int simple_dropdown_item_1line -> simple_dropdown_item_1line
    int simple_list_item_1 -> simple_list_item_1
    int simple_list_item_2 -> simple_list_item_2
    int simple_list_item_2_single_choice -> simple_list_item_2_single_choice
    int simple_list_item_activated_1 -> simple_list_item_activated_1
    int simple_list_item_activated_2 -> simple_list_item_activated_2
    int simple_list_item_checked -> simple_list_item_checked
    int simple_list_item_multiple_choice -> simple_list_item_multiple_choice
    int simple_list_item_single_choice -> simple_list_item_single_choice
    int simple_spinner_dropdown_item -> simple_spinner_dropdown_item
    int simple_spinner_item -> simple_spinner_item
    int tab_swipe -> tab_swipe
    int time_picker_dialog -> time_picker_dialog
    int time_picker_holo -> time_picker_holo
com.actionbarsherlock.R$string -> com.actionbarsherlock.s:
    int abs__action_bar_home_description -> abs__action_bar_home_description
    int abs__action_bar_up_description -> abs__action_bar_up_description
    int abs__action_menu_overflow_description -> abs__action_menu_overflow_description
    int abs__action_mode_done -> abs__action_mode_done
    int abs__activity_chooser_view_see_all -> abs__activity_chooser_view_see_all
    int abs__activitychooserview_choose_application -> abs__activitychooserview_choose_application
    int abs__searchview_description_clear -> abs__searchview_description_clear
    int abs__searchview_description_query -> abs__searchview_description_query
    int abs__searchview_description_search -> abs__searchview_description_search
    int abs__searchview_description_submit -> abs__searchview_description_submit
    int abs__searchview_description_voice -> abs__searchview_description_voice
    int abs__shareactionprovider_share_with -> abs__shareactionprovider_share_with
    int abs__shareactionprovider_share_with_application -> abs__shareactionprovider_share_with_application
    int candidates_style -> candidates_style
    int capital_off -> capital_off
    int capital_on -> capital_on
    int date_picker_decrement_day_button -> date_picker_decrement_day_button
    int date_picker_decrement_month_button -> date_picker_decrement_month_button
    int date_picker_decrement_year_button -> date_picker_decrement_year_button
    int date_picker_dialog_title -> date_picker_dialog_title
    int date_picker_increment_day_button -> date_picker_increment_day_button
    int date_picker_increment_month_button -> date_picker_increment_month_button
    int date_picker_increment_year_button -> date_picker_increment_year_button
    int date_time_done -> date_time_done
    int date_time_set -> date_time_set
    int loading -> loading
    int number_picker_decrement_button -> number_picker_decrement_button
    int number_picker_increment_button -> number_picker_increment_button
    int number_picker_increment_scroll_action -> number_picker_increment_scroll_action
    int number_picker_increment_scroll_mode -> number_picker_increment_scroll_mode
    int ringtone_default -> ringtone_default
    int ringtone_picker_title -> ringtone_picker_title
    int ringtone_silent -> ringtone_silent
    int time_picker_decrement_hour_button -> time_picker_decrement_hour_button
    int time_picker_decrement_minute_button -> time_picker_decrement_minute_button
    int time_picker_decrement_set_am_button -> time_picker_decrement_set_am_button
    int time_picker_dialog_title -> time_picker_dialog_title
    int time_picker_increment_hour_button -> time_picker_increment_hour_button
    int time_picker_increment_minute_button -> time_picker_increment_minute_button
    int time_picker_increment_set_pm_button -> time_picker_increment_set_pm_button
    int time_picker_separator -> time_picker_separator
com.actionbarsherlock.R$styleable -> com.actionbarsherlock.t:
    int[] AbsSpinner -> AbsSpinner
    int AbsSpinner_android_entries -> AbsSpinner_android_entries
    int[] AlertDialog -> AlertDialog
    int AlertDialog_bottomBright -> AlertDialog_bottomBright
    int AlertDialog_bottomDark -> AlertDialog_bottomDark
    int AlertDialog_bottomMedium -> AlertDialog_bottomMedium
    int AlertDialog_centerBright -> AlertDialog_centerBright
    int AlertDialog_centerDark -> AlertDialog_centerDark
    int AlertDialog_centerMedium -> AlertDialog_centerMedium
    int AlertDialog_fullBright -> AlertDialog_fullBright
    int AlertDialog_fullDark -> AlertDialog_fullDark
    int AlertDialog_gravity -> AlertDialog_gravity
    int AlertDialog_horizontalProgressLayout -> AlertDialog_horizontalProgressLayout
    int AlertDialog_layout -> AlertDialog_layout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_progressLayout -> AlertDialog_progressLayout
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int AlertDialog_topBright -> AlertDialog_topBright
    int AlertDialog_topDark -> AlertDialog_topDark
    int[] AutoCompleteTextView -> AutoCompleteTextView
    int AutoCompleteTextView_android_completionHint -> AutoCompleteTextView_android_completionHint
    int AutoCompleteTextView_android_completionHintView -> AutoCompleteTextView_android_completionHintView
    int AutoCompleteTextView_android_completionThreshold -> AutoCompleteTextView_android_completionThreshold
    int AutoCompleteTextView_android_dropDownAnchor -> AutoCompleteTextView_android_dropDownAnchor
    int AutoCompleteTextView_android_dropDownHeight -> AutoCompleteTextView_android_dropDownHeight
    int AutoCompleteTextView_android_dropDownSelector -> AutoCompleteTextView_android_dropDownSelector
    int AutoCompleteTextView_android_dropDownWidth -> AutoCompleteTextView_android_dropDownWidth
    int AutoCompleteTextView_android_entries -> AutoCompleteTextView_android_entries
    int AutoCompleteTextView_android_inputType -> AutoCompleteTextView_android_inputType
    int AutoCompleteTextView_dropDownHorizontalOffset -> AutoCompleteTextView_dropDownHorizontalOffset
    int AutoCompleteTextView_dropDownVerticalOffset -> AutoCompleteTextView_dropDownVerticalOffset
    int[] CalendarView -> CalendarView
    int CalendarView_dateTextAppearance -> CalendarView_dateTextAppearance
    int CalendarView_firstDayOfWeek -> CalendarView_firstDayOfWeek
    int CalendarView_focusedMonthDateColor -> CalendarView_focusedMonthDateColor
    int CalendarView_maxDate -> CalendarView_maxDate
    int CalendarView_minDate -> CalendarView_minDate
    int CalendarView_selectedDateVerticalBar -> CalendarView_selectedDateVerticalBar
    int CalendarView_selectedWeekBackgroundColor -> CalendarView_selectedWeekBackgroundColor
    int CalendarView_showWeekNumber -> CalendarView_showWeekNumber
    int CalendarView_shownWeekCount -> CalendarView_shownWeekCount
    int CalendarView_unfocusedMonthDateColor -> CalendarView_unfocusedMonthDateColor
    int CalendarView_weekDayTextAppearance -> CalendarView_weekDayTextAppearance
    int CalendarView_weekNumberColor -> CalendarView_weekNumberColor
    int CalendarView_weekSeparatorLineColor -> CalendarView_weekSeparatorLineColor
    int[] ColorDrawable -> ColorDrawable
    int ColorDrawable_android_color -> ColorDrawable_android_color
    int[] DatePicker -> DatePicker
    int DatePicker_calendarViewShown -> DatePicker_calendarViewShown
    int DatePicker_endYear -> DatePicker_endYear
    int DatePicker_forceShownState -> DatePicker_forceShownState
    int DatePicker_layout -> DatePicker_layout
    int DatePicker_maxDate -> DatePicker_maxDate
    int DatePicker_minDate -> DatePicker_minDate
    int DatePicker_spinnersShown -> DatePicker_spinnersShown
    int DatePicker_startYear -> DatePicker_startYear
    int[] Divider -> Divider
    int Divider_android_orientation -> Divider_android_orientation
    int[] ExpandableListView -> ExpandableListView
    int ExpandableListView_android_childDivider -> ExpandableListView_android_childDivider
    int ExpandableListView_android_childIndicator -> ExpandableListView_android_childIndicator
    int ExpandableListView_android_childIndicatorLeft -> ExpandableListView_android_childIndicatorLeft
    int ExpandableListView_android_childIndicatorRight -> ExpandableListView_android_childIndicatorRight
    int ExpandableListView_android_groupIndicator -> ExpandableListView_android_groupIndicator
    int ExpandableListView_android_indicatorLeft -> ExpandableListView_android_indicatorLeft
    int ExpandableListView_android_indicatorRight -> ExpandableListView_android_indicatorRight
    int[] FastScroll -> FastScroll
    int FastScroll_fastScrollOverlayPosition -> FastScroll_fastScrollOverlayPosition
    int FastScroll_fastScrollPreviewBackgroundLeft -> FastScroll_fastScrollPreviewBackgroundLeft
    int FastScroll_fastScrollPreviewBackgroundRight -> FastScroll_fastScrollPreviewBackgroundRight
    int FastScroll_fastScrollTextColor -> FastScroll_fastScrollTextColor
    int FastScroll_fastScrollThumbDrawable -> FastScroll_fastScrollThumbDrawable
    int FastScroll_fastScrollTrackDrawable -> FastScroll_fastScrollTrackDrawable
    int[] IconMenuView -> IconMenuView
    int IconMenuView_android_maxItems -> IconMenuView_android_maxItems
    int IconMenuView_android_maxItemsPerRow -> IconMenuView_android_maxItemsPerRow
    int IconMenuView_android_maxRows -> IconMenuView_android_maxRows
    int IconMenuView_android_moreIcon -> IconMenuView_android_moreIcon
    int IconMenuView_android_rowHeight -> IconMenuView_android_rowHeight
    int[] LayerDrawable -> LayerDrawable
    int LayerDrawable_android_opacity -> LayerDrawable_android_opacity
    int[] LayerDrawableItem -> LayerDrawableItem
    int LayerDrawableItem_android_bottom -> LayerDrawableItem_android_bottom
    int LayerDrawableItem_android_drawable -> LayerDrawableItem_android_drawable
    int LayerDrawableItem_android_id -> LayerDrawableItem_android_id
    int LayerDrawableItem_android_left -> LayerDrawableItem_android_left
    int LayerDrawableItem_android_right -> LayerDrawableItem_android_right
    int LayerDrawableItem_android_top -> LayerDrawableItem_android_top
    int[] LinearLayout -> LinearLayout
    int LinearLayout_android_divider -> LinearLayout_android_divider
    int LinearLayout_android_dividerPadding -> LinearLayout_android_dividerPadding
    int LinearLayout_android_showDividers -> LinearLayout_android_showDividers
    int LinearLayout_dividerPadding -> LinearLayout_dividerPadding
    int LinearLayout_showDividers -> LinearLayout_showDividers
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_preserveIconSpacing -> MenuView_android_preserveIconSpacing
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int[] NumberPicker -> NumberPicker
    int NumberPicker_android_fadingEdgeLength -> NumberPicker_android_fadingEdgeLength
    int NumberPicker_android_layout -> NumberPicker_android_layout
    int NumberPicker_android_maxHeight -> NumberPicker_android_maxHeight
    int NumberPicker_android_maxWidth -> NumberPicker_android_maxWidth
    int NumberPicker_android_minHeight -> NumberPicker_android_minHeight
    int NumberPicker_android_minWidth -> NumberPicker_android_minWidth
    int NumberPicker_android_orientation -> NumberPicker_android_orientation
    int NumberPicker_flingable -> NumberPicker_flingable
    int NumberPicker_selectionDivider -> NumberPicker_selectionDivider
    int NumberPicker_selectionDividerHeight -> NumberPicker_selectionDividerHeight
    int NumberPicker_selectionDividersDistance -> NumberPicker_selectionDividersDistance
    int NumberPicker_solidColor -> NumberPicker_solidColor
    int NumberPicker_virtualButtonPressedDrawable -> NumberPicker_virtualButtonPressedDrawable
    int[] PopupWindow -> PopupWindow
    int PopupWindow_android_popupAnimationStyle -> PopupWindow_android_popupAnimationStyle
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int[] ProgressBar -> ProgressBar
    int ProgressBar_android_indeterminate -> ProgressBar_android_indeterminate
    int ProgressBar_android_indeterminateBehavior -> ProgressBar_android_indeterminateBehavior
    int ProgressBar_android_indeterminateDrawable -> ProgressBar_android_indeterminateDrawable
    int ProgressBar_android_indeterminateDuration -> ProgressBar_android_indeterminateDuration
    int ProgressBar_android_indeterminateOnly -> ProgressBar_android_indeterminateOnly
    int ProgressBar_android_interpolator -> ProgressBar_android_interpolator
    int ProgressBar_android_max -> ProgressBar_android_max
    int ProgressBar_android_maxHeight -> ProgressBar_android_maxHeight
    int ProgressBar_android_maxWidth -> ProgressBar_android_maxWidth
    int ProgressBar_android_minHeight -> ProgressBar_android_minHeight
    int ProgressBar_android_minWidth -> ProgressBar_android_minWidth
    int ProgressBar_android_progress -> ProgressBar_android_progress
    int ProgressBar_android_progressDrawable -> ProgressBar_android_progressDrawable
    int ProgressBar_android_secondaryProgress -> ProgressBar_android_secondaryProgress
    int[] RotateDrawable -> RotateDrawable
    int RotateDrawable_android_drawable -> RotateDrawable_android_drawable
    int RotateDrawable_android_fromDegrees -> RotateDrawable_android_fromDegrees
    int RotateDrawable_android_pivotX -> RotateDrawable_android_pivotX
    int RotateDrawable_android_pivotY -> RotateDrawable_android_pivotY
    int RotateDrawable_android_toDegrees -> RotateDrawable_android_toDegrees
    int RotateDrawable_android_visible -> RotateDrawable_android_visible
    int[] SeekBar -> SeekBar
    int SeekBar_android_disabledAlpha -> SeekBar_android_disabledAlpha
    int SeekBar_android_thumb -> SeekBar_android_thumb
    int SeekBar_android_thumbOffset -> SeekBar_android_thumbOffset
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownHintAppearance -> SherlockTheme_dropDownHintAppearance
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
    int[] Spinner -> Spinner
    int Spinner_android_dropDownSelector -> Spinner_android_dropDownSelector
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_gravity -> Spinner_android_gravity
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_android_prompt -> Spinner_android_prompt
    int Spinner_disableChildrenWhenDisabled -> Spinner_disableChildrenWhenDisabled
    int Spinner_dropDownHorizontalOffset -> Spinner_dropDownHorizontalOffset
    int Spinner_dropDownVerticalOffset -> Spinner_dropDownVerticalOffset
    int Spinner_popupPromptView -> Spinner_popupPromptView
    int Spinner_spinnerMode -> Spinner_spinnerMode
    int[] StateListDrawable -> StateListDrawable
    int StateListDrawable_android_constantSize -> StateListDrawable_android_constantSize
    int StateListDrawable_android_dither -> StateListDrawable_android_dither
    int StateListDrawable_android_enterFadeDuration -> StateListDrawable_android_enterFadeDuration
    int StateListDrawable_android_exitFadeDuration -> StateListDrawable_android_exitFadeDuration
    int StateListDrawable_android_variablePadding -> StateListDrawable_android_variablePadding
    int StateListDrawable_android_visible -> StateListDrawable_android_visible
    int[] Switch -> Switch
    int Switch_switchMinWidth -> Switch_switchMinWidth
    int Switch_switchPadding -> Switch_switchPadding
    int Switch_switchTextAppearance -> Switch_switchTextAppearance
    int Switch_textOff -> Switch_textOff
    int Switch_textOn -> Switch_textOn
    int Switch_thumb -> Switch_thumb
    int Switch_thumbTextPadding -> Switch_thumbTextPadding
    int Switch_toggleWhenClick -> Switch_toggleWhenClick
    int Switch_track -> Switch_track
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_textAllCaps -> TextAppearance_android_textAllCaps
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textColorHighlight -> TextAppearance_android_textColorHighlight
    int TextAppearance_android_textColorHint -> TextAppearance_android_textColorHint
    int TextAppearance_android_textColorLink -> TextAppearance_android_textColorLink
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int[] TextView -> TextView
    int TextView_android_text -> TextView_android_text
    int TextView_android_textAllCaps -> TextView_android_textAllCaps
    int TextView_textAllCaps -> TextView_textAllCaps
    int[] TimePicker -> TimePicker
    int TimePicker_layout -> TimePicker_layout
    int[] WindowSizes -> WindowSizes
    int WindowSizes_windowFixedHeightMajor -> WindowSizes_windowFixedHeightMajor
    int WindowSizes_windowFixedHeightMinor -> WindowSizes_windowFixedHeightMinor
    int WindowSizes_windowFixedWidthMajor -> WindowSizes_windowFixedWidthMajor
    int WindowSizes_windowFixedWidthMinor -> WindowSizes_windowFixedWidthMinor
    int WindowSizes_windowMinHeightMajor -> WindowSizes_windowMinHeightMajor
    int WindowSizes_windowMinHeightMinor -> WindowSizes_windowMinHeightMinor
    int WindowSizes_windowMinWidthMajor -> WindowSizes_windowMinWidthMajor
    int WindowSizes_windowMinWidthMinor -> WindowSizes_windowMinWidthMinor
com.actionbarsherlock.app.ActionBar -> com.actionbarsherlock.a.a:
    void setHomeButtonEnabled(boolean) -> a
    android.content.Context getThemedContext() -> a
com.actionbarsherlock.app.ActionBar$LayoutParams -> com.actionbarsherlock.a.b:
    int[] ATTRS -> b
    int gravity -> a
com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener -> com.actionbarsherlock.a.c:
    void onMenuVisibilityChanged(boolean) -> a
com.actionbarsherlock.app.ActionBar$OnNavigationListener -> com.actionbarsherlock.a.d:
    boolean onNavigationItemSelected(int,long) -> a
com.actionbarsherlock.app.ActionBar$Tab -> com.actionbarsherlock.a.e:
    android.graphics.drawable.Drawable getIcon() -> a
    java.lang.CharSequence getText() -> b
    android.view.View getCustomView() -> c
    void select() -> d
    java.lang.CharSequence getContentDescription() -> e
com.actionbarsherlock.internal.ActionBarSherlockCompat -> com.actionbarsherlock.internal.a:
    boolean mReserveOverflow -> d
    boolean mReserveOverflowSet -> e
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> f
    java.util.HashMap mNativeItemMap -> c
    android.view.ViewGroup mDecor -> g
    android.view.ViewGroup mContentParent -> h
    boolean mIsTitleReady -> i
    boolean mIsDestroyed -> j
    boolean mClosingActionMenu -> k
    boolean mMenuIsPrepared -> l
    boolean mMenuRefreshContent -> m
    android.os.Bundle mMenuFrozenActionViewState -> n
    com.actionbarsherlock.internal.app.ActionBarImpl aActionBar -> o
    com.actionbarsherlock.internal.widget.ActionBarView wActionBar -> p
    int mFeatures -> q
    int mUiOptions -> r
    com.actionbarsherlock.internal.widget.IcsProgressBar mCircularProgressBar -> s
    com.actionbarsherlock.view.ActionMode mActionMode -> t
    com.actionbarsherlock.internal.widget.ActionBarContextView mActionModeView -> u
    void initActionBar() -> h
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> a
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchPostResume() -> a
    void dispatchPause() -> b
    void dispatchStop() -> c
    void dispatchInvalidateOptionsMenu() -> d
    boolean dispatchOpenOptionsMenu() -> e
    boolean dispatchCloseOptionsMenu() -> f
    void dispatchPostCreate(android.os.Bundle) -> a
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchMenuOpened(int,android.view.Menu) -> a
    void dispatchPanelClosed(int,android.view.Menu) -> b
    void dispatchTitleChanged(java.lang.CharSequence,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    void dispatchDestroy() -> g
    boolean preparePanel() -> i
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void reopenMenu(boolean) -> a
    boolean initializePanelMenu() -> j
    void checkCloseActionMenu(com.actionbarsherlock.view.Menu) -> c
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> a
    com.actionbarsherlock.internal.widget.IcsProgressBar getCircularProgressBar(boolean) -> b
    boolean hasFeature(int) -> a
    boolean requestFeature(int) -> b
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void installDecor() -> k
    android.view.ViewGroup generateLayout() -> l
    boolean isReservingOverflow() -> m
    int loadUiOptionsFromManifest(android.app.Activity) -> a
    java.lang.String cleanActivityName(java.lang.String,java.lang.String) -> a
    boolean access$000(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> a
    android.app.Activity access$100(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$200(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> c
    com.actionbarsherlock.internal.widget.ActionBarContextView access$300(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> d
    android.app.Activity access$400(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> e
    com.actionbarsherlock.view.ActionMode access$500(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> f
    android.app.Activity access$600(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> g
    com.actionbarsherlock.view.ActionMode access$502(com.actionbarsherlock.internal.ActionBarSherlockCompat,com.actionbarsherlock.view.ActionMode) -> a
com.actionbarsherlock.internal.ActionBarSherlockCompat$1 -> com.actionbarsherlock.internal.b:
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper -> com.actionbarsherlock.internal.c:
    com.actionbarsherlock.view.ActionMode$Callback mWrapped -> b
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> a
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> a
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> b
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> a
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> a
com.actionbarsherlock.internal.ActionBarSherlockNative -> com.actionbarsherlock.internal.d:
    com.actionbarsherlock.internal.app.ActionBarWrapper mActionBar -> c
    com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper mActionMode -> d
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> e
    void initActionBar() -> h
    void dispatchInvalidateOptionsMenu() -> d
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> a
    com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$002(com.actionbarsherlock.internal.ActionBarSherlockNative,com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper) -> a
    com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$000(com.actionbarsherlock.internal.ActionBarSherlockNative) -> a
    android.app.Activity access$100(com.actionbarsherlock.internal.ActionBarSherlockNative) -> b
    android.app.Activity access$200(com.actionbarsherlock.internal.ActionBarSherlockNative) -> c
com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper -> com.actionbarsherlock.internal.e:
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> b
    com.actionbarsherlock.internal.ActionBarSherlockNative this$0 -> a
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper -> com.actionbarsherlock.internal.f:
    android.view.ActionMode mActionMode -> b
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> c
    com.actionbarsherlock.internal.ActionBarSherlockNative this$0 -> a
    void invalidate() -> a
    void finish() -> b
    com.actionbarsherlock.internal.view.menu.MenuWrapper getMenu() -> c
    com.actionbarsherlock.view.Menu getMenu() -> d
com.actionbarsherlock.internal.ResourcesCompat -> com.actionbarsherlock.internal.g:
    boolean getResources_getBoolean(android.content.Context,int) -> a
    int getResources_getInteger(android.content.Context,int) -> b
    int loadLogoFromManifest(android.app.Activity) -> a
com.actionbarsherlock.internal.app.ActionBarImpl -> com.actionbarsherlock.internal.a.a:
    android.content.Context mContext -> h
    android.content.Context mThemedContext -> i
    android.app.Activity mActivity -> j
    com.actionbarsherlock.internal.widget.ActionBarContainer mContainerView -> k
    com.actionbarsherlock.internal.widget.ActionBarView mActionView -> l
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> m
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> n
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout mContentView -> o
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> p
    java.util.ArrayList mTabs -> q
    int mSavedTabPosition -> r
    com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl mActionMode -> a
    com.actionbarsherlock.view.ActionMode mDeferredDestroyActionMode -> b
    com.actionbarsherlock.view.ActionMode$Callback mDeferredModeDestroyCallback -> c
    boolean mLastMenuVisibility -> s
    java.util.ArrayList mMenuVisibilityListeners -> t
    int mContextDisplayMode -> u
    boolean mHasEmbeddedTabs -> v
    android.os.Handler mHandler -> d
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentShowAnim -> w
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentModeAnim -> x
    boolean mShowHideAnimationEnabled -> y
    boolean mWasHiddenBeforeMode -> e
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mHideListener -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mShowListener -> g
    void init(android.view.View) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setHasEmbeddedTabs(boolean) -> f
    void completeDeferredDestroyActionMode() -> b
    void setShowHideAnimationEnabled(boolean) -> b
    void dispatchMenuVisibilityChanged(boolean) -> c
    void setHomeButtonEnabled(boolean) -> a
    int getNavigationMode() -> c
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> a
    void show(boolean) -> d
    void hide() -> d
    boolean isShowing() -> e
    void animateToMode(boolean) -> e
    android.content.Context getThemedContext() -> a
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout access$000(com.actionbarsherlock.internal.app.ActionBarImpl) -> a
    com.actionbarsherlock.internal.widget.ActionBarContainer access$100(com.actionbarsherlock.internal.app.ActionBarImpl) -> b
    com.actionbarsherlock.internal.widget.ActionBarContainer access$200(com.actionbarsherlock.internal.app.ActionBarImpl) -> c
    int access$300(com.actionbarsherlock.internal.app.ActionBarImpl) -> d
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator access$402(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    com.actionbarsherlock.internal.widget.ActionBarContextView access$500(com.actionbarsherlock.internal.app.ActionBarImpl) -> e
    com.actionbarsherlock.internal.widget.ActionBarView access$600(com.actionbarsherlock.internal.app.ActionBarImpl) -> f
com.actionbarsherlock.internal.app.ActionBarImpl$1 -> com.actionbarsherlock.internal.a.b:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.app.ActionBarImpl$2 -> com.actionbarsherlock.internal.a.c:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl -> com.actionbarsherlock.internal.a.d:
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> c
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> a
    com.actionbarsherlock.view.Menu getMenu() -> d
    void finish() -> b
    void invalidate() -> a
    boolean dispatchOnCreate() -> c
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
com.actionbarsherlock.internal.app.ActionBarWrapper -> com.actionbarsherlock.internal.a.e:
    android.app.Activity mActivity -> a
    android.app.ActionBar mActionBar -> b
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mNavigationListener -> c
    java.util.Set mMenuVisibilityListeners -> d
    void setHomeButtonEnabled(boolean) -> a
    android.content.Context getThemedContext() -> a
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
com.actionbarsherlock.internal.nineoldandroids.animation.Animator -> com.actionbarsherlock.internal.nineoldandroids.a.a:
    java.util.ArrayList mListeners -> a
    void start() -> a
    void cancel() -> b
    void end() -> c
    boolean isRunning() -> d
    boolean isStarted() -> e
    void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> a
    void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> b
    java.util.ArrayList getListeners() -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> g
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener -> com.actionbarsherlock.internal.nineoldandroids.a.b:
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter -> com.actionbarsherlock.internal.nineoldandroids.a.c:
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet -> com.actionbarsherlock.internal.nineoldandroids.a.d:
    java.util.ArrayList mPlayingSet -> c
    java.util.HashMap mNodeMap -> d
    java.util.ArrayList mNodes -> e
    java.util.ArrayList mSortedNodes -> f
    boolean mNeedsSort -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> h
    boolean mTerminated -> b
    boolean mStarted -> i
    long mStartDelay -> j
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator mDelayAnim -> k
    long mDuration -> l
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void cancel() -> b
    void end() -> c
    boolean isRunning() -> d
    boolean isStarted() -> e
    void start() -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet clone() -> h
    void sortNodes() -> i
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> g
    java.lang.Object clone() -> clone
    java.util.ArrayList access$000(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> a
    java.util.HashMap access$100(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> b
    java.util.ArrayList access$200(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> c
    boolean access$302(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,boolean) -> a
    java.util.ArrayList access$400(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> d
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1 -> com.actionbarsherlock.internal.nineoldandroids.a.e:
    boolean canceled -> a
    java.util.ArrayList val$nodesToStart -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> c
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> com.actionbarsherlock.internal.nineoldandroids.a.f:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> a
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder -> com.actionbarsherlock.internal.nineoldandroids.a.g:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder with(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency -> com.actionbarsherlock.internal.nineoldandroids.a.h:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node node -> a
    int rule -> b
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener -> com.actionbarsherlock.internal.nineoldandroids.a.i:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mNode -> b
    int mRule -> c
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> e
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node -> com.actionbarsherlock.internal.nineoldandroids.a.j:
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator animation -> a
    java.util.ArrayList dependencies -> b
    java.util.ArrayList tmpDependencies -> c
    java.util.ArrayList nodeDependencies -> d
    java.util.ArrayList nodeDependents -> e
    boolean done -> f
    void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node clone() -> a
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator -> com.actionbarsherlock.internal.nineoldandroids.a.k:
    java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.a.l:
    float firstValue -> g
    float lastValue -> h
    float deltaValue -> i
    boolean firstTime -> j
    java.lang.Object getValue(float) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet clone() -> a
    float getFloatValue(float) -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> b
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator -> com.actionbarsherlock.internal.nineoldandroids.a.m:
    java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe -> com.actionbarsherlock.internal.nineoldandroids.a.n:
    float mFraction -> a
    java.lang.Class mValueType -> b
    android.view.animation.Interpolator mInterpolator -> d
    boolean mHasValue -> c
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float,float) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float) -> a
    boolean hasValue() -> a
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
    float getFraction() -> c
    android.view.animation.Interpolator getInterpolator() -> d
    void setInterpolator(android.view.animation.Interpolator) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> e
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.actionbarsherlock.internal.nineoldandroids.a.o:
    float mValue -> d
    float getFloatValue() -> f
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> e
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.a.p:
    int mNumKeyframes -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mFirstKeyframe -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mLastKeyframe -> c
    android.view.animation.Interpolator mInterpolator -> d
    java.util.ArrayList mKeyframes -> e
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofFloat(float[]) -> a
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> b
    java.lang.Object getValue(float) -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator -> com.actionbarsherlock.internal.nineoldandroids.a.q:
    java.lang.Object mTarget -> h
    java.lang.String mPropertyName -> i
    void setPropertyName(java.lang.String) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> a
    void setFloatValues(float[]) -> a
    void start() -> a
    void initAnimation() -> h
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long) -> a
    void animateValue(float) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator clone() -> i
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> j
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> g
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.a.r:
    java.lang.String mPropertyName -> a
    java.lang.reflect.Method mSetter -> b
    java.lang.reflect.Method mGetter -> g
    java.lang.Class mValueType -> c
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet mKeyframeSet -> d
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> h
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> i
    java.lang.Class[] FLOAT_VARIANTS -> j
    java.lang.Class[] INTEGER_VARIANTS -> k
    java.lang.Class[] DOUBLE_VARIANTS -> l
    java.util.HashMap sSetterPropertyMap -> m
    java.util.HashMap sGetterPropertyMap -> n
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> e
    java.lang.Object[] mTmpValueArray -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> o
    java.lang.Object mAnimatedValue -> p
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> a
    void setFloatValues(float[]) -> a
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> a
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> a
    void setupSetter(java.lang.Class) -> a
    void setupGetter(java.lang.Class) -> b
    void setupSetterAndGetter(java.lang.Object) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    void setAnimatedValue(java.lang.Object) -> b
    void init() -> b
    void calculateValue(float) -> a
    void setPropertyName(java.lang.String) -> a
    java.lang.String getPropertyName() -> c
    java.lang.Object getAnimatedValue() -> d
    java.lang.String toString() -> toString
    java.lang.String getMethodName(java.lang.String,java.lang.String) -> a
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$1 -> com.actionbarsherlock.internal.nineoldandroids.a.s:
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.a.t:
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> g
    float mFloatAnimatedValue -> h
    void setFloatValues(float[]) -> a
    void calculateValue(float) -> a
    java.lang.Object getAnimatedValue() -> d
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> e
    void setAnimatedValue(java.lang.Object) -> b
    void setupSetter(java.lang.Class) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator -> com.actionbarsherlock.internal.nineoldandroids.a.u:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator -> com.actionbarsherlock.internal.nineoldandroids.a.v:
    long mStartTime -> b
    long mSeekTime -> c
    java.lang.ThreadLocal sAnimationHandler -> h
    java.lang.ThreadLocal sAnimations -> i
    java.lang.ThreadLocal sPendingAnimations -> j
    java.lang.ThreadLocal sDelayedAnims -> k
    java.lang.ThreadLocal sEndingAnims -> l
    java.lang.ThreadLocal sReadyAnims -> m
    android.view.animation.Interpolator sDefaultInterpolator -> n
    boolean mPlayingBackwards -> o
    int mCurrentIteration -> p
    float mCurrentFraction -> q
    boolean mStartedDelay -> r
    long mDelayStartTime -> s
    int mPlayingState -> d
    boolean mRunning -> t
    boolean mStarted -> u
    boolean mInitialized -> e
    long mDuration -> v
    long mStartDelay -> w
    long sFrameDelay -> x
    int mRepeatCount -> y
    int mRepeatMode -> z
    android.view.animation.Interpolator mInterpolator -> A
    java.util.ArrayList mUpdateListeners -> B
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[] mValues -> f
    java.util.HashMap mValuesMap -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> b
    void setFloatValues(float[]) -> a
    void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> a
    void initAnimation() -> h
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> b
    void setCurrentPlayTime(long) -> c
    long getCurrentPlayTime() -> k
    void setStartDelay(long) -> d
    void setInterpolator(android.view.animation.Interpolator) -> a
    void start(boolean) -> a
    void start() -> a
    void cancel() -> b
    void end() -> c
    boolean isRunning() -> d
    boolean isStarted() -> e
    void endAnimation() -> i
    void startAnimation() -> r
    boolean delayedAnimationFrame(long) -> a
    boolean animationFrame(long) -> e
    void animateValue(float) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> j
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> g
    java.lang.Object clone() -> clone
    java.lang.ThreadLocal access$000() -> l
    java.lang.ThreadLocal access$100() -> m
    java.lang.ThreadLocal access$200() -> n
    long access$300(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> a
    void access$400(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> b
    java.lang.ThreadLocal access$500() -> o
    java.lang.ThreadLocal access$600() -> p
    boolean access$700(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,long) -> a
    boolean access$802(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,boolean) -> a
    void access$900(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> c
    long access$1000() -> q
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1 -> com.actionbarsherlock.internal.nineoldandroids.a.w:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2 -> com.actionbarsherlock.internal.nineoldandroids.a.x:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3 -> com.actionbarsherlock.internal.nineoldandroids.a.y:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4 -> com.actionbarsherlock.internal.nineoldandroids.a.z:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5 -> com.actionbarsherlock.internal.nineoldandroids.a.aa:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler -> com.actionbarsherlock.internal.nineoldandroids.a.ab:
    void handleMessage(android.os.Message) -> handleMessage
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.actionbarsherlock.internal.nineoldandroids.a.ac:
    void onAnimationUpdate(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> a
com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup -> com.actionbarsherlock.internal.nineoldandroids.b.a:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy -> com.actionbarsherlock.internal.nineoldandroids.b.a.a:
    boolean NEEDS_PROXY -> a
    java.util.WeakHashMap PROXIES -> b
    java.lang.ref.WeakReference mView -> c
    float mAlpha -> d
    float mScaleX -> e
    float mScaleY -> f
    float mTranslationX -> g
    float mTranslationY -> h
    android.graphics.RectF mBefore -> i
    android.graphics.RectF mAfter -> j
    android.graphics.Matrix mTempMatrix -> k
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> a
    float getAlpha() -> a
    void setAlpha(float) -> a
    void setScaleY(float) -> b
    float getTranslationX() -> b
    void setTranslationX(float) -> c
    float getTranslationY() -> c
    void setTranslationY(float) -> d
    void prepareForUpdate() -> d
    void invalidateAfterUpdate() -> e
    void computeRect(android.graphics.RectF,android.view.View) -> a
    void transformMatrix(android.graphics.Matrix,android.view.View) -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    void reset() -> reset
com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView -> com.actionbarsherlock.internal.nineoldandroids.widget.a:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
com.actionbarsherlock.internal.view.ActionProviderWrapper -> com.actionbarsherlock.internal.view.a:
    com.actionbarsherlock.view.ActionProvider mProvider -> a
    com.actionbarsherlock.view.ActionProvider unwrap() -> a
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
com.actionbarsherlock.internal.view.StandaloneActionMode -> com.actionbarsherlock.internal.view.b:
    android.content.Context mContext -> a
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> b
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> c
    boolean mFinished -> d
    boolean mFocusable -> e
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> f
    void invalidate() -> a
    void finish() -> b
    com.actionbarsherlock.view.Menu getMenu() -> d
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
com.actionbarsherlock.internal.view.View_HasStateListenerSupport -> com.actionbarsherlock.internal.view.c:
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> a
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> b
com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener -> com.actionbarsherlock.internal.view.d:
    void onViewAttachedToWindow(android.view.View) -> a
    void onViewDetachedFromWindow(android.view.View) -> b
com.actionbarsherlock.internal.view.menu.ActionMenuItem -> com.actionbarsherlock.internal.view.menu.a:
    int mId -> a
    int mGroup -> b
    int mOrdering -> c
    java.lang.CharSequence mTitle -> d
    java.lang.CharSequence mTitleCondensed -> e
    android.content.Intent mIntent -> f
    char mShortcutNumericChar -> g
    char mShortcutAlphabeticChar -> h
    android.graphics.drawable.Drawable mIconDrawable -> i
    android.content.Context mContext -> j
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> k
    int mFlags -> l
    char getAlphabeticShortcut() -> a
    int getGroupId() -> b
    android.graphics.drawable.Drawable getIcon() -> c
    android.content.Intent getIntent() -> d
    int getItemId() -> e
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> f
    char getNumericShortcut() -> g
    int getOrder() -> h
    com.actionbarsherlock.view.SubMenu getSubMenu() -> i
    java.lang.CharSequence getTitle() -> j
    java.lang.CharSequence getTitleCondensed() -> k
    boolean hasSubMenu() -> l
    boolean isCheckable() -> m
    boolean isChecked() -> n
    boolean isEnabled() -> o
    boolean isVisible() -> p
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> a
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> a
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> a
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> a
    com.actionbarsherlock.view.MenuItem setTitle(int) -> b
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    void setShowAsAction(int) -> c
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    android.view.View getActionView() -> q
    com.actionbarsherlock.view.MenuItem setActionView(int) -> d
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> r
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> e
    boolean expandActionView() -> s
    boolean collapseActionView() -> t
    boolean isActionViewExpanded() -> u
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> a
com.actionbarsherlock.internal.view.menu.ActionMenuItemView -> com.actionbarsherlock.internal.view.menu.ActionMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> a
    java.lang.CharSequence mTitle -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> c
    android.widget.ImageButton mImageButton -> d
    com.actionbarsherlock.internal.widget.CapitalizingButton mTextButton -> e
    boolean mAllowTextWithIcon -> f
    boolean mExpandedFormat -> g
    int mMinWidth -> h
    java.util.Set mListeners -> i
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> a
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> a
    void setEnabled(boolean) -> setEnabled
    void onClick(android.view.View) -> onClick
    void setItemInvoker(com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    boolean prefersCondensedTitle() -> a
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> e
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> b
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter:
    android.view.View mOverflowButton -> i
    boolean mReserveOverflow -> j
    boolean mReserveOverflowSet -> k
    int mWidthLimit -> l
    int mActionItemWidthLimit -> m
    int mMaxItems -> n
    boolean mMaxItemsSet -> o
    boolean mStrictWidthLimit -> p
    boolean mWidthLimitSet -> q
    boolean mExpandedActionViewsExclusive -> r
    int mMinCellSize -> s
    android.util.SparseBooleanArray mActionButtonGroups -> t
    android.view.View mScrapActionButtonView -> u
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup -> v
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> w
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> x
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> a
    int mOpenSubMenuId -> b
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean reserveOverflow(android.content.Context) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setWidthLimit(int,boolean) -> a
    void setReserveOverflow(boolean) -> a
    void setItemLimit(int) -> a
    void setExpandedActionViewsExclusive(boolean) -> b
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void updateMenuView(boolean) -> c
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    android.view.View findViewForItem(com.actionbarsherlock.view.MenuItem) -> a
    boolean showOverflowMenu() -> a
    boolean hideOverflowMenu() -> b
    boolean dismissPopupMenus() -> c
    boolean hideSubMenus() -> d
    boolean isOverflowMenuShowing() -> e
    boolean isOverflowReserved() -> f
    boolean flagActionItems() -> g
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup access$100(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup access$102(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup) -> a
    android.view.View access$200(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu access$302(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu) -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable access$402(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable) -> a
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$1 -> com.actionbarsherlock.internal.view.menu.b:
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu -> com.actionbarsherlock.internal.view.menu.c:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey -> com.actionbarsherlock.internal.view.menu.d:
    boolean get(android.content.Context) -> a
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable -> com.actionbarsherlock.internal.view.menu.e:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mPopup -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton -> com.actionbarsherlock.internal.view.menu.f:
    java.util.Set mListeners -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> a
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> b
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup -> com.actionbarsherlock.internal.view.menu.g:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback -> com.actionbarsherlock.internal.view.menu.h:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState:
    int openSubMenuId -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1 -> com.actionbarsherlock.internal.view.menu.i:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.actionbarsherlock.internal.view.menu.ActionMenuView -> com.actionbarsherlock.internal.view.menu.ActionMenuView:
    boolean IS_FROYO -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> b
    boolean mReserveOverflow -> c
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mPresenter -> d
    boolean mFormatItems -> e
    int mFormatItemsWidth -> f
    int mMinCellSize -> g
    int mGeneratedItemPadding -> h
    boolean mFirst -> i
    void setPresenter(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> setPresenter
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> a
    int measureChildForCells(android.view.View,int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOverflowReserved(boolean) -> setOverflowReserved
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> b
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    int getWindowAnimations() -> getWindowAnimations
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean hasDividerBeforeChildAt(int) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.actionbarsherlock.internal.view.menu.ActionMenuView$ActionMenuChildView -> com.actionbarsherlock.internal.view.menu.j:
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams -> com.actionbarsherlock.internal.view.menu.k:
    boolean isOverflowButton -> a
    int cellsUsed -> b
    int extraPixels -> c
    boolean expandable -> d
    boolean preventEdgeOffset -> e
    boolean expanded -> f
com.actionbarsherlock.internal.view.menu.BaseMenuPresenter -> com.actionbarsherlock.internal.view.menu.l:
    boolean IS_HONEYCOMB -> a
    android.content.Context mSystemContext -> c
    android.content.Context mContext -> d
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> e
    android.view.LayoutInflater mSystemInflater -> f
    android.view.LayoutInflater mInflater -> g
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mCallback -> b
    int mMenuLayoutRes -> i
    int mItemLayoutRes -> j
    com.actionbarsherlock.internal.view.menu.MenuView mMenuView -> h
    int mId -> k
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    void updateMenuView(boolean) -> c
    void addItemView(android.view.View,int) -> a
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> a
    com.actionbarsherlock.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> b
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    void setId(int) -> b
com.actionbarsherlock.internal.view.menu.ContextMenuBackWrapper -> com.actionbarsherlock.internal.view.menu.m:
    com.actionbarsherlock.view.ContextMenu menu -> a
    void clearHeader() -> clearHeader
    android.view.ContextMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.ContextMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.ContextMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.ContextMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.ContextMenu setHeaderView(android.view.View) -> setHeaderView
com.actionbarsherlock.internal.view.menu.ContextMenuBuilder -> com.actionbarsherlock.internal.view.menu.n:
    android.view.ContextMenu$ContextMenuInfo mContextMenuInfo -> d
    com.actionbarsherlock.internal.view.menu.ContextMenuListener mListener -> e
    java.lang.String TAG -> f
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> e_
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo(android.view.View) -> a
    void setContextMenuListener(com.actionbarsherlock.internal.view.menu.ContextMenuListener) -> a
    com.actionbarsherlock.view.ContextMenu setHeaderIcon(android.graphics.drawable.Drawable) -> a
    com.actionbarsherlock.view.ContextMenu setHeaderIcon(int) -> a
    com.actionbarsherlock.view.ContextMenu setHeaderTitle(java.lang.CharSequence) -> a
    com.actionbarsherlock.view.ContextMenu setHeaderTitle(int) -> b
    com.actionbarsherlock.view.ContextMenu setHeaderView(android.view.View) -> b
    com.actionbarsherlock.internal.view.menu.MenuDialogHelper show(android.view.View,android.os.IBinder) -> a
com.actionbarsherlock.internal.view.menu.ContextMenuBuilder$ContextMenuInfoGetter -> com.actionbarsherlock.internal.view.menu.o:
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
com.actionbarsherlock.internal.view.menu.ContextMenuCallbackGetter -> com.actionbarsherlock.internal.view.menu.p:
    android.view.View$OnCreateContextMenuListener getOnCreateContextMenuListener() -> getOnCreateContextMenuListener
com.actionbarsherlock.internal.view.menu.ContextMenuDecorView -> com.actionbarsherlock.internal.view.menu.q:
    com.actionbarsherlock.internal.view.menu.ContextMenuBuilder mContextMenu -> a
    com.actionbarsherlock.internal.view.menu.ContextMenuListener mListener -> b
    com.actionbarsherlock.internal.view.menu.MenuDialogHelper mMenuDialogHelper -> c
    com.actionbarsherlock.internal.view.menu.ContextMenuDecorView$ContextMenuListenersProvider mProvider -> d
    java.lang.String TAG -> e
    void attachView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    android.view.ViewGroup$LayoutParams getLayoutParams() -> getLayoutParams
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setProvider(com.actionbarsherlock.internal.view.menu.ContextMenuDecorView$ContextMenuListenersProvider) -> setProvider
    boolean showContextMenuForChild(android.view.View) -> showContextMenuForChild
    android.view.View unwrap() -> a
com.actionbarsherlock.internal.view.menu.ContextMenuDecorView$ContextMenuListenersProvider -> com.actionbarsherlock.internal.view.menu.r:
    com.actionbarsherlock.internal.view.menu.ContextMenuListener getContextMenuListener(android.view.View) -> a
com.actionbarsherlock.internal.view.menu.ContextMenuItemWrapper -> com.actionbarsherlock.internal.view.menu.s:
    android.view.MenuItem nativeItem -> a
    android.view.MenuItem unwrap() -> v
com.actionbarsherlock.internal.view.menu.ContextMenuListener -> com.actionbarsherlock.internal.view.menu.t:
    boolean onContextItemSelected(com.actionbarsherlock.view.MenuItem) -> b
    void onContextMenuClosed(com.actionbarsherlock.view.ContextMenu) -> a
    void onCreateContextMenu(com.actionbarsherlock.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> a
com.actionbarsherlock.internal.view.menu.ContextMenuWrapper -> com.actionbarsherlock.internal.view.menu.u:
    android.view.ContextMenu nativeMenu -> a
    void clearHeader() -> a
    com.actionbarsherlock.view.ContextMenu setHeaderIcon(android.graphics.drawable.Drawable) -> a
    com.actionbarsherlock.view.ContextMenu setHeaderIcon(int) -> a
    com.actionbarsherlock.view.ContextMenu setHeaderTitle(java.lang.CharSequence) -> a
    com.actionbarsherlock.view.ContextMenu setHeaderTitle(int) -> b
    com.actionbarsherlock.view.ContextMenu setHeaderView(android.view.View) -> b
    android.view.ContextMenu unwrap() -> b
    android.view.Menu unwrap() -> c
com.actionbarsherlock.internal.view.menu.ExpandedMenuView -> com.actionbarsherlock.internal.view.menu.v:
    int mAnimations -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> b
    int getWindowAnimations() -> getWindowAnimations
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.internal.view.menu.HoloListMenuItemView -> com.actionbarsherlock.internal.view.menu.HoloListMenuItemView:
    android.graphics.drawable.Drawable mBackground -> a
    android.widget.CheckBox mCheckBox -> b
    boolean mForceShowIcon -> c
    android.widget.ImageView mIconView -> d
    org.holoeverywhere.LayoutInflater mInflater -> e
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> f
    boolean mPreserveIconSpacing -> g
    android.widget.RadioButton mRadioButton -> h
    org.holoeverywhere.widget.TextView mShortcutView -> i
    int mTextAppearance -> j
    android.content.Context mTextAppearanceContext -> k
    org.holoeverywhere.widget.TextView mTitleView -> l
    org.holoeverywhere.LayoutInflater getInflater() -> getInflater
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> a
    void insertCheckBox() -> b
    void insertIconView() -> c
    void insertRadioButton() -> d
    void onFinishInflate() -> onFinishInflate
    void onMeasure(int,int) -> onMeasure
    boolean prefersCondensedTitle() -> a
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setShortcut(boolean,char) -> a
    void setTitle(java.lang.CharSequence) -> setTitle
com.actionbarsherlock.internal.view.menu.ListMenuItemView -> com.actionbarsherlock.internal.view.menu.ListMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> b
    android.widget.ImageView mIconView -> c
    android.widget.RadioButton mRadioButton -> d
    android.widget.TextView mTitleView -> e
    android.widget.CheckBox mCheckBox -> f
    android.widget.TextView mShortcutView -> g
    android.graphics.drawable.Drawable mBackground -> h
    int mTextAppearance -> i
    android.content.Context mTextAppearanceContext -> j
    boolean mPreserveIconSpacing -> k
    android.view.LayoutInflater mInflater -> l
    boolean mForceShowIcon -> m
    android.content.Context mContext -> a
    void onFinishInflate() -> onFinishInflate
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> a
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> a
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> b
    void insertRadioButton() -> c
    void insertCheckBox() -> d
    boolean prefersCondensedTitle() -> a
    android.view.LayoutInflater getInflater() -> getInflater
com.actionbarsherlock.internal.view.menu.ListMenuPresenter -> com.actionbarsherlock.internal.view.menu.w:
    com.actionbarsherlock.internal.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> a
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mCallback -> g
    android.content.Context mContext -> b
    org.holoeverywhere.LayoutInflater mInflater -> c
    int mItemIndexOffset -> h
    int mItemLayoutRes -> d
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> e
    int mThemeRes -> f
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    boolean flagActionItems() -> g
    android.widget.ListAdapter getAdapter() -> a
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> a
    void updateMenuView(boolean) -> c
    int access$000(com.actionbarsherlock.internal.view.menu.ListMenuPresenter) -> a
com.actionbarsherlock.internal.view.menu.ListMenuPresenter$MenuAdapter -> com.actionbarsherlock.internal.view.menu.x:
    int mExpandedIndex -> b
    com.actionbarsherlock.internal.view.menu.ListMenuPresenter this$0 -> a
    void findExpandedIndex() -> a
    int getCount() -> getCount
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
com.actionbarsherlock.internal.view.menu.MenuBackWrapper -> com.actionbarsherlock.internal.view.menu.y:
    com.actionbarsherlock.view.Menu menu -> a
    com.actionbarsherlock.view.MenuItem[] array(android.view.MenuItem[]) -> a
    android.view.MenuItem item(com.actionbarsherlock.view.MenuItem) -> a
    android.view.SubMenu submenu(com.actionbarsherlock.view.SubMenu) -> a
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    void clear() -> clear
    void close() -> close
    android.view.MenuItem findItem(int) -> findItem
    android.view.MenuItem getItem(int) -> getItem
    boolean hasVisibleItems() -> hasVisibleItems
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void removeGroup(int) -> removeGroup
    void removeItem(int) -> removeItem
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setQwertyMode(boolean) -> setQwertyMode
    int size() -> size
com.actionbarsherlock.internal.view.menu.MenuBuilder -> com.actionbarsherlock.internal.view.menu.z:
    int[] sCategoryToOrder -> d
    android.content.Context mContext -> e
    android.content.res.Resources mResources -> f
    boolean mQwertyMode -> g
    boolean mShortcutsVisible -> h
    com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback mCallback -> i
    java.util.ArrayList mItems -> j
    java.util.ArrayList mVisibleItems -> k
    boolean mIsVisibleItemsStale -> l
    java.util.ArrayList mActionItems -> m
    java.util.ArrayList mNonActionItems -> n
    boolean mIsActionItemsStale -> o
    int mDefaultShowAsAction -> p
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> q
    java.lang.CharSequence mHeaderTitle -> a
    android.graphics.drawable.Drawable mHeaderIcon -> b
    android.view.View mHeaderView -> c
    boolean mPreventDispatchingItemsChanged -> r
    boolean mItemsChangedWhileDispatchPrevented -> s
    boolean mOptionalIconsVisible -> t
    boolean mIsClosing -> u
    java.util.ArrayList mTempShortcutItemList -> v
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> w
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mExpandedItem -> x
    com.actionbarsherlock.internal.view.menu.MenuBuilder setDefaultShowAsAction(int) -> c
    void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> a
    void removeMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> b
    void dispatchPresenterUpdate(boolean) -> d
    boolean dispatchSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void saveActionViewStates(android.os.Bundle) -> a
    void restoreActionViewStates(android.os.Bundle) -> b
    java.lang.String getActionViewStatesKey() -> b
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> a
    com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> c
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> b
    com.actionbarsherlock.view.MenuItem add(int) -> d
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> a
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> a
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> c
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> e
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> b
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> b
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> a
    void removeItem(int) -> f
    void removeGroup(int) -> g
    void removeItemAtInt(int,boolean) -> c
    void clearAll() -> c
    void clear() -> d
    void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem) -> a
    void setGroupCheckable(int,boolean,boolean) -> a
    void setGroupVisible(int,boolean) -> a
    void setGroupEnabled(int,boolean) -> b
    boolean hasVisibleItems() -> e
    com.actionbarsherlock.view.MenuItem findItem(int) -> h
    int findItemIndex(int) -> i
    int findGroupIndex(int) -> j
    int findGroupIndex(int,int) -> a
    int size() -> f
    com.actionbarsherlock.view.MenuItem getItem(int) -> k
    boolean isShortcutKey(int,android.view.KeyEvent) -> a
    void setQwertyMode(boolean) -> a
    int getOrdering(int) -> a
    boolean isQwertyMode() -> g
    void setShortcutsVisibleInner(boolean) -> e
    boolean isShortcutsVisible() -> h
    android.content.res.Resources getResources() -> i
    android.content.Context getContext() -> j
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    void changeMenuMode() -> k
    int findInsertIndex(java.util.ArrayList,int) -> a
    boolean performShortcut(int,android.view.KeyEvent,int) -> a
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> a
    com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> b
    boolean performIdentifierAction(int,int) -> b
    boolean performItemAction(com.actionbarsherlock.view.MenuItem,int) -> a
    void close(boolean) -> b
    void close() -> l
    void onItemsChanged(boolean) -> c
    void stopDispatchingItemsChanged() -> m
    void startDispatchingItemsChanged() -> n
    void onItemVisibleChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void onItemActionRequestChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    java.util.ArrayList getVisibleItems() -> o
    void flagActionItems() -> p
    java.util.ArrayList getActionItems() -> q
    java.util.ArrayList getNonActionItems() -> r
    void clearHeader() -> a
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> d
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(int) -> l
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(int) -> m
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> c
    java.lang.CharSequence getHeaderTitle() -> s
    android.graphics.drawable.Drawable getHeaderIcon() -> t
    android.view.View getHeaderView() -> u
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> v
    boolean getOptionalIconsVisible() -> w
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> d
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getExpandedItem() -> x
    boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap) -> a
com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback -> com.actionbarsherlock.internal.view.menu.aa:
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker -> com.actionbarsherlock.internal.view.menu.ab:
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
com.actionbarsherlock.internal.view.menu.MenuDialogHelper -> com.actionbarsherlock.internal.view.menu.ac:
    org.holoeverywhere.app.AlertDialog mDialog -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> c
    com.actionbarsherlock.internal.view.menu.ListMenuPresenter mPresenter -> a
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> d
    void dismiss() -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
    void setPresenterCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> a
    void show(android.os.IBinder) -> a
com.actionbarsherlock.internal.view.menu.MenuItemBackWrapper -> com.actionbarsherlock.internal.view.menu.ad:
    com.actionbarsherlock.view.MenuItem menuItem -> a
    boolean collapseActionView() -> collapseActionView
    boolean expandActionView() -> expandActionView
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.view.View getActionView() -> getActionView
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    android.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isActionViewExpanded() -> isActionViewExpanded
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.view.MenuItem setVisible(boolean) -> setVisible
    com.actionbarsherlock.view.MenuItem unwrap() -> a
com.actionbarsherlock.internal.view.menu.MenuItemBackWrapper$1 -> com.actionbarsherlock.internal.view.menu.ae:
    android.view.MenuItem$OnActionExpandListener val$arg0 -> a
    com.actionbarsherlock.internal.view.menu.MenuItemBackWrapper this$0 -> b
    boolean onMenuItemActionCollapse(com.actionbarsherlock.view.MenuItem) -> a
    boolean onMenuItemActionExpand(com.actionbarsherlock.view.MenuItem) -> b
com.actionbarsherlock.internal.view.menu.MenuItemBackWrapper$2 -> com.actionbarsherlock.internal.view.menu.af:
    android.view.MenuItem$OnMenuItemClickListener val$arg0 -> a
    com.actionbarsherlock.internal.view.menu.MenuItemBackWrapper this$0 -> b
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.internal.view.menu.MenuItemImpl -> com.actionbarsherlock.internal.view.menu.ag:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> l
    com.actionbarsherlock.internal.view.menu.SubMenuBuilder mSubMenu -> m
    java.lang.Runnable mItemCallback -> n
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> o
    int mFlags -> p
    int mShowAsAction -> q
    android.view.View mActionView -> r
    com.actionbarsherlock.view.ActionProvider mActionProvider -> s
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> t
    boolean mIsActionViewExpanded -> u
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> v
    java.lang.String sPrependShortcutLabel -> w
    java.lang.String sEnterShortcutLabel -> x
    java.lang.String sDeleteShortcutLabel -> y
    java.lang.String sSpaceShortcutLabel -> z
    boolean invoke() -> v
    boolean isEnabled() -> o
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    int getGroupId() -> b
    int getItemId() -> e
    int getOrder() -> h
    int getOrdering() -> w
    android.content.Intent getIntent() -> d
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> a
    char getAlphabeticShortcut() -> a
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    char getNumericShortcut() -> g
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> a
    char getShortcut() -> x
    java.lang.String getShortcutLabel() -> y
    boolean shouldShowShortcut() -> z
    com.actionbarsherlock.view.SubMenu getSubMenu() -> i
    boolean hasSubMenu() -> l
    void setSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    java.lang.CharSequence getTitle() -> j
    java.lang.CharSequence getTitleForItemView(com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> a
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> a
    com.actionbarsherlock.view.MenuItem setTitle(int) -> b
    java.lang.CharSequence getTitleCondensed() -> k
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    android.graphics.drawable.Drawable getIcon() -> c
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> a
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    boolean isCheckable() -> m
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    void setExclusiveCheckable(boolean) -> e
    boolean isExclusiveCheckable() -> A
    boolean isChecked() -> n
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    void setCheckedInt(boolean) -> f
    boolean isVisible() -> p
    boolean setVisibleInt(boolean) -> g
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> a
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> f
    void actionFormatChanged() -> B
    boolean shouldShowIcon() -> C
    boolean isActionButton() -> D
    boolean requestsActionButton() -> E
    boolean requiresActionButton() -> F
    void setIsActionButton(boolean) -> h
    boolean showsTextAsAction() -> G
    void setShowAsAction(int) -> c
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    com.actionbarsherlock.view.MenuItem setActionView(int) -> d
    android.view.View getActionView() -> q
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> r
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> e
    boolean expandActionView() -> s
    boolean collapseActionView() -> t
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> a
    boolean hasCollapsibleActionView() -> H
    void setActionViewExpanded(boolean) -> i
    boolean isActionViewExpanded() -> u
com.actionbarsherlock.internal.view.menu.MenuItemWrapper -> com.actionbarsherlock.internal.view.menu.ah:
    android.view.MenuItem mNativeItem -> a
    com.actionbarsherlock.view.SubMenu mSubMenu -> b
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener -> c
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mActionExpandListener -> d
    android.view.MenuItem$OnActionExpandListener mNativeActionExpandListener -> e
    int getItemId() -> e
    int getGroupId() -> b
    int getOrder() -> h
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> a
    com.actionbarsherlock.view.MenuItem setTitle(int) -> b
    java.lang.CharSequence getTitle() -> j
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    java.lang.CharSequence getTitleCondensed() -> k
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> a
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    android.graphics.drawable.Drawable getIcon() -> c
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> a
    android.content.Intent getIntent() -> d
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> a
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    char getNumericShortcut() -> g
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    char getAlphabeticShortcut() -> a
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    boolean isCheckable() -> m
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    boolean isChecked() -> n
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    boolean isVisible() -> p
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    boolean isEnabled() -> o
    boolean hasSubMenu() -> l
    com.actionbarsherlock.view.SubMenu getSubMenu() -> i
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> f
    void setShowAsAction(int) -> c
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> e
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    com.actionbarsherlock.view.MenuItem setActionView(int) -> d
    android.view.View getActionView() -> q
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> r
    boolean expandActionView() -> s
    boolean collapseActionView() -> t
    boolean isActionViewExpanded() -> u
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> a
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener access$000(com.actionbarsherlock.internal.view.menu.MenuItemWrapper) -> a
com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1 -> com.actionbarsherlock.internal.view.menu.ai:
    com.actionbarsherlock.internal.view.menu.MenuItemWrapper this$0 -> a
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
com.actionbarsherlock.internal.view.menu.MenuPopupHelper -> com.actionbarsherlock.internal.view.menu.aj:
    int ITEM_LAYOUT -> b
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> d
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mPopup -> e
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> f
    int mPopupMaxWidth -> g
    android.view.View mAnchorView -> h
    boolean mOverflowOnly -> i
    android.view.ViewTreeObserver mTreeObserver -> j
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> k
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> l
    boolean mForceShowIcon -> c
    android.view.ViewGroup mMeasureParent -> m
    void setAnchorView(android.view.View) -> c
    void setForceShowIcon(boolean) -> a
    void show() -> a
    boolean tryShow() -> b
    void dismiss() -> c
    void onDismiss() -> onDismiss
    boolean isShowing() -> d
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int measureContentWidth(android.widget.ListAdapter) -> a
    void onGlobalLayout() -> onGlobalLayout
    void onViewAttachedToWindow(android.view.View) -> a
    void onViewDetachedFromWindow(android.view.View) -> b
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> c
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    boolean access$200(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> a
    android.view.LayoutInflater access$300(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$400(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> c
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter access$500(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> d
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$1 -> com.actionbarsherlock.internal.view.menu.ak:
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver -> com.actionbarsherlock.internal.view.menu.al:
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> a
    void onChanged() -> onChanged
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter -> com.actionbarsherlock.internal.view.menu.am:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mAdapterMenu -> b
    int mExpandedIndex -> c
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> a
    int getCount() -> getCount
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    java.lang.Object getItem(int) -> getItem
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$000(com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter) -> a
com.actionbarsherlock.internal.view.menu.MenuPresenter -> com.actionbarsherlock.internal.view.menu.an:
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> c
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback -> com.actionbarsherlock.internal.view.menu.ao:
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
com.actionbarsherlock.internal.view.menu.MenuView -> com.actionbarsherlock.internal.view.menu.ap:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
com.actionbarsherlock.internal.view.menu.MenuView$ItemView -> com.actionbarsherlock.internal.view.menu.aq:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> a
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    boolean prefersCondensedTitle() -> a
com.actionbarsherlock.internal.view.menu.MenuWrapper -> com.actionbarsherlock.internal.view.menu.ar:
    android.view.Menu mNativeMenu -> a
    java.util.WeakHashMap mNativeMap -> b
    android.view.Menu unwrap() -> c
    com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem) -> b
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> b
    com.actionbarsherlock.view.MenuItem add(int) -> d
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> a
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> a
    com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu) -> a
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> c
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> e
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> b
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> b
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> a
    void removeItem(int) -> f
    void removeGroup(int) -> g
    void clear() -> d
    void invalidate() -> g
    void setGroupCheckable(int,boolean,boolean) -> a
    void setGroupVisible(int,boolean) -> a
    void setGroupEnabled(int,boolean) -> b
    boolean hasVisibleItems() -> e
    com.actionbarsherlock.view.MenuItem findItem(int) -> h
    com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem) -> a
    int size() -> f
    com.actionbarsherlock.view.MenuItem getItem(int) -> k
    void close() -> l
    boolean performShortcut(int,android.view.KeyEvent,int) -> a
    boolean isShortcutKey(int,android.view.KeyEvent) -> a
    boolean performIdentifierAction(int,int) -> b
    void setQwertyMode(boolean) -> a
com.actionbarsherlock.internal.view.menu.SubMenuBackWrapper -> com.actionbarsherlock.internal.view.menu.as:
    com.actionbarsherlock.view.SubMenu menu -> a
    void clearHeader() -> clearHeader
    android.view.MenuItem getItem() -> getItem
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.SubMenu setIcon(int) -> setIcon
com.actionbarsherlock.internal.view.menu.SubMenuBuilder -> com.actionbarsherlock.internal.view.menu.at:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mParentMenu -> d
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItem -> e
    void setQwertyMode(boolean) -> a
    boolean isQwertyMode() -> g
    boolean isShortcutsVisible() -> h
    com.actionbarsherlock.view.Menu getParentMenu() -> y
    com.actionbarsherlock.view.MenuItem getItem() -> z
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> v
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> a
    com.actionbarsherlock.view.SubMenu setIcon(int) -> a
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> c
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> b
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> a
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> n
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> a
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> d
    java.lang.String getActionViewStatesKey() -> b
com.actionbarsherlock.internal.view.menu.SubMenuWrapper -> com.actionbarsherlock.internal.view.menu.au:
    android.view.SubMenu mNativeSubMenu -> a
    com.actionbarsherlock.view.MenuItem mItem -> b
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> n
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> a
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> b
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> c
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> a
    void clearHeader() -> a
    com.actionbarsherlock.view.SubMenu setIcon(int) -> a
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> a
    com.actionbarsherlock.view.MenuItem getItem() -> z
com.actionbarsherlock.internal.widget.AbsActionBarView -> com.actionbarsherlock.internal.widget.a:
    com.actionbarsherlock.internal.view.menu.ActionMenuView mMenuView -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mActionMenuPresenter -> b
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> c
    boolean mSplitActionBar -> d
    boolean mSplitWhenNarrow -> e
    int mContentHeight -> f
    android.content.Context mContext -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> h
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> i
    android.view.animation.Interpolator sAlphaInterpolator -> j
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    void setSplitView(com.actionbarsherlock.internal.widget.ActionBarContainer) -> setSplitView
    int getAnimatedVisibility() -> getAnimatedVisibility
    void animateToVisibility(int) -> a
    void setVisibility(int) -> setVisibility
    boolean showOverflowMenu() -> a
    void postShowOverflowMenu() -> b
    boolean hideOverflowMenu() -> c
    boolean isOverflowMenuShowing() -> d
    boolean isOverflowReserved() -> e
    void dismissPopupMenus() -> f
    int measureChildView(android.view.View,int,int,int) -> a
    int positionChild(android.view.View,int,int,int) -> b
    int positionChildInverse(android.view.View,int,int,int) -> c
com.actionbarsherlock.internal.widget.AbsActionBarView$1 -> com.actionbarsherlock.internal.widget.b:
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener -> com.actionbarsherlock.internal.widget.c:
    boolean mCanceled -> c
    int mFinalVisibility -> a
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> b
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(int) -> a
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
com.actionbarsherlock.internal.widget.ActionBarContainer -> com.actionbarsherlock.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> a
    android.view.View mTabContainer -> b
    com.actionbarsherlock.internal.widget.ActionBarView mActionBarView -> c
    android.graphics.drawable.Drawable mBackground -> d
    android.graphics.drawable.Drawable mStackedBackground -> e
    android.graphics.drawable.Drawable mSplitBackground -> f
    boolean mIsSplit -> g
    boolean mIsStacked -> h
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setTabContainer(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarContextView -> com.actionbarsherlock.internal.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> j
    java.lang.CharSequence mSubtitle -> k
    com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout mClose -> l
    android.view.View mCustomView -> m
    android.widget.LinearLayout mTitleLayout -> n
    android.widget.TextView mTitleView -> o
    android.widget.TextView mSubtitleView -> p
    int mTitleStyleRes -> q
    int mSubtitleStyleRes -> r
    android.graphics.drawable.Drawable mSplitBackground -> s
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentAnimation -> t
    boolean mAnimateInOnLayout -> u
    int mAnimationMode -> v
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> i
    void initForMode(com.actionbarsherlock.view.ActionMode) -> a
    void closeMode() -> g
    void finishAnimation() -> j
    void killMode() -> h
    boolean showOverflowMenu() -> a
    boolean hideOverflowMenu() -> c
    boolean isOverflowMenuShowing() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation() -> k
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation() -> l
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
com.actionbarsherlock.internal.widget.ActionBarContextView$1 -> com.actionbarsherlock.internal.widget.d:
    com.actionbarsherlock.view.ActionMode val$mode -> a
    com.actionbarsherlock.internal.widget.ActionBarContextView this$0 -> b
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView -> com.actionbarsherlock.internal.widget.ActionBarView:
    int mNavigationMode -> l
    int mDisplayOptions -> m
    java.lang.CharSequence mTitle -> n
    java.lang.CharSequence mSubtitle -> o
    android.graphics.drawable.Drawable mIcon -> p
    android.graphics.drawable.Drawable mLogo -> q
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mHomeLayout -> r
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mExpandedHomeLayout -> s
    android.widget.LinearLayout mTitleLayout -> t
    android.widget.TextView mTitleView -> u
    android.widget.TextView mSubtitleView -> v
    android.view.View mTitleUpView -> w
    com.actionbarsherlock.internal.widget.IcsSpinner mSpinner -> x
    com.actionbarsherlock.internal.widget.IcsLinearLayout mListNavLayout -> y
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> z
    android.view.View mCustomNavView -> A
    com.actionbarsherlock.internal.widget.IcsProgressBar mProgressView -> B
    com.actionbarsherlock.internal.widget.IcsProgressBar mIndeterminateProgressView -> C
    int mProgressBarPadding -> D
    int mItemPadding -> E
    int mTitleStyleRes -> F
    int mSubtitleStyleRes -> G
    int mProgressStyle -> H
    int mIndeterminateProgressStyle -> I
    boolean mUserTitle -> J
    boolean mIncludeTabs -> K
    boolean mIsCollapsable -> L
    boolean mIsCollapsed -> M
    com.actionbarsherlock.internal.view.menu.MenuBuilder mOptionsMenu -> N
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> O
    com.actionbarsherlock.internal.view.menu.ActionMenuItem mLogoNavItem -> P
    android.widget.SpinnerAdapter mSpinnerAdapter -> Q
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mCallback -> R
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> S
    android.view.View mExpandedActionView -> j
    com.actionbarsherlock.view.Window$Callback mWindowCallback -> k
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mNavItemSelectedListener -> T
    android.view.View$OnClickListener mExpandedActionViewUpListener -> U
    android.view.View$OnClickListener mUpClickListener -> V
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWindowCallback(com.actionbarsherlock.view.Window$Callback) -> setWindowCallback
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void initProgress() -> g
    void initIndeterminateProgress() -> h
    void setSplitActionBar(boolean) -> setSplitActionBar
    boolean isSplitActionBar() -> i
    boolean hasEmbeddedTabs() -> j
    void setEmbeddedTabView(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    void setCallback(com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setCallback
    void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> a
    void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean hasExpandedActionView() -> k
    void collapseActionView() -> l
    void setCustomNavigationView(android.view.View) -> setCustomNavigationView
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setTitleImpl(java.lang.CharSequence) -> setTitleImpl
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setDisplayOptions(int) -> setDisplayOptions
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setIcon(int) -> setIcon
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setLogo(int) -> setLogo
    void setNavigationMode(int) -> setNavigationMode
    void setDropdownAdapter(android.widget.SpinnerAdapter) -> setDropdownAdapter
    android.widget.SpinnerAdapter getDropdownAdapter() -> getDropdownAdapter
    void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    android.view.View getCustomNavigationView() -> getCustomNavigationView
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onFinishInflate() -> onFinishInflate
    void initTitle() -> n
    void setContextView(com.actionbarsherlock.internal.widget.ActionBarContextView) -> setContextView
    void setCollapsable(boolean) -> setCollapsable
    boolean isCollapsed() -> m
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    com.actionbarsherlock.app.ActionBar$OnNavigationListener access$000(com.actionbarsherlock.internal.widget.ActionBarView) -> a
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$100(com.actionbarsherlock.internal.widget.ActionBarView) -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuItem access$200(com.actionbarsherlock.internal.widget.ActionBarView) -> c
    android.graphics.drawable.Drawable access$500(com.actionbarsherlock.internal.widget.ActionBarView) -> d
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$600(com.actionbarsherlock.internal.widget.ActionBarView) -> e
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$700(com.actionbarsherlock.internal.widget.ActionBarView) -> f
    android.widget.LinearLayout access$800(com.actionbarsherlock.internal.widget.ActionBarView) -> g
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$900(com.actionbarsherlock.internal.widget.ActionBarView) -> h
    com.actionbarsherlock.internal.widget.IcsSpinner access$1000(com.actionbarsherlock.internal.widget.ActionBarView) -> i
    android.view.View access$1100(com.actionbarsherlock.internal.widget.ActionBarView) -> j
    int access$1200(com.actionbarsherlock.internal.widget.ActionBarView) -> k
    void access$1300(com.actionbarsherlock.internal.widget.ActionBarView) -> l
    int access$1400(com.actionbarsherlock.internal.widget.ActionBarView) -> m
com.actionbarsherlock.internal.widget.ActionBarView$1 -> com.actionbarsherlock.internal.widget.e:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> a
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
com.actionbarsherlock.internal.widget.ActionBarView$2 -> com.actionbarsherlock.internal.widget.f:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$3 -> com.actionbarsherlock.internal.widget.g:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter -> com.actionbarsherlock.internal.widget.h:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> a
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> b
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> c
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> c
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
com.actionbarsherlock.internal.widget.ActionBarView$HomeView -> com.actionbarsherlock.internal.widget.ActionBarView$HomeView:
    android.view.View mUpView -> a
    android.widget.ImageView mIconView -> b
    int mUpWidth -> c
    void setUp(boolean) -> setUp
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    void onFinishInflate() -> onFinishInflate
    int getLeftOffset() -> getLeftOffset
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarView$SavedState -> com.actionbarsherlock.internal.widget.ActionBarView$SavedState:
    int expandedMenuItemId -> a
    boolean isOverflowOpen -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1 -> com.actionbarsherlock.internal.widget.i:
    com.actionbarsherlock.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel) -> a
    com.actionbarsherlock.internal.widget.ActionBarView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.actionbarsherlock.internal.widget.CapitalizingButton -> com.actionbarsherlock.internal.widget.CapitalizingButton:
    boolean SANS_ICE_CREAM -> a
    boolean IS_GINGERBREAD -> b
    int[] R_styleable_Button -> c
    boolean mAllCaps -> d
    void setTextCompat(java.lang.CharSequence) -> setTextCompat
com.actionbarsherlock.internal.widget.CapitalizingTextView -> com.actionbarsherlock.internal.widget.j:
    boolean SANS_ICE_CREAM -> a
    boolean IS_GINGERBREAD -> b
    int[] R_styleable_TextView -> c
    boolean mAllCaps -> d
    void setTextCompat(java.lang.CharSequence) -> setTextCompat
com.actionbarsherlock.internal.widget.CollapsibleActionViewWrapper -> com.actionbarsherlock.internal.widget.k:
    com.actionbarsherlock.view.CollapsibleActionView child -> a
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
    android.view.View unwrap() -> a
com.actionbarsherlock.internal.widget.IcsAbsSpinner -> com.actionbarsherlock.internal.widget.IcsAbsSpinner:
    boolean IS_HONEYCOMB -> F
    android.widget.SpinnerAdapter mAdapter -> a
    int mHeightMeasureSpec -> b
    int mWidthMeasureSpec -> c
    boolean mBlockLayoutRequests -> d
    int mSelectionLeftPadding -> e
    int mSelectionTopPadding -> f
    int mSelectionRightPadding -> g
    int mSelectionBottomPadding -> h
    android.graphics.Rect mSpinnerPadding -> i
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin mRecycler -> j
    android.database.DataSetObserver mDataSetObserver -> G
    void initAbsSpinner() -> j
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void resetList() -> a
    void onMeasure(int,int) -> onMeasure
    int getChildHeight(android.view.View) -> a
    int getChildWidth(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void recycleAllViews() -> b
    void setSelection(int) -> setSelection
    android.view.View getSelectedView() -> getSelectedView
    void requestLayout() -> requestLayout
    android.widget.SpinnerAdapter getAdapter() -> getAdapter
    int getCount() -> getCount
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$100(com.actionbarsherlock.internal.widget.IcsAbsSpinner,android.view.View,boolean) -> a
com.actionbarsherlock.internal.widget.IcsAbsSpinner$1 -> com.actionbarsherlock.internal.widget.l:
com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin -> com.actionbarsherlock.internal.widget.m:
    android.util.SparseArray mScrapHeap -> b
    com.actionbarsherlock.internal.widget.IcsAbsSpinner this$0 -> a
    void put(int,android.view.View) -> a
    android.view.View get(int) -> a
    void clear() -> a
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState:
    long selectedId -> a
    int position -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1 -> com.actionbarsherlock.internal.widget.n:
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState createFromParcel(android.os.Parcel) -> a
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.actionbarsherlock.internal.widget.IcsAdapterView -> com.actionbarsherlock.internal.widget.o:
    int mFirstPosition -> k
    int mSpecificTop -> l
    int mSyncPosition -> m
    long mSyncRowId -> n
    long mSyncHeight -> o
    boolean mNeedSync -> p
    int mSyncMode -> q
    int mLayoutHeight -> a
    boolean mInLayout -> r
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mOnItemSelectedListener -> s
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> t
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener mOnItemLongClickListener -> u
    boolean mDataChanged -> v
    int mNextSelectedPosition -> w
    long mNextSelectedRowId -> x
    int mSelectedPosition -> y
    long mSelectedRowId -> z
    android.view.View mEmptyView -> b
    int mItemCount -> A
    int mOldItemCount -> B
    int mOldSelectedPosition -> C
    long mOldSelectedRowId -> D
    boolean mDesiredFocusableState -> c
    boolean mDesiredFocusableInTouchModeState -> d
    com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier mSelectionNotifier -> e
    boolean mBlockLayoutRequests -> E
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    android.widget.AdapterView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    void setOnItemLongClickListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.view.View getSelectedView() -> getSelectedView
    java.lang.Object getSelectedItem() -> getSelectedItem
    int getCount() -> getCount
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void setSelection(int) -> setSelection
    void setEmptyView(android.view.View) -> setEmptyView
    android.view.View getEmptyView() -> getEmptyView
    boolean isInFilterMode() -> c
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> d
    void updateEmptyStatus(boolean) -> a
    long getItemIdAtPosition(int) -> a
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void selectionChanged() -> e
    void fireOnSelected() -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean isScrollableForAccessibility() -> b
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> f
    void checkSelectionChanged() -> g
    int findSyncPosition() -> h
    int lookForSelectablePosition(int,boolean) -> a
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    void setNextSelectedPositionInt(int) -> setNextSelectedPositionInt
    void rememberSyncState() -> i
    void access$000(com.actionbarsherlock.internal.widget.IcsAdapterView,android.os.Parcelable) -> a
    android.os.Parcelable access$100(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
    void access$200(com.actionbarsherlock.internal.widget.IcsAdapterView) -> b
com.actionbarsherlock.internal.widget.IcsAdapterView$1 -> com.actionbarsherlock.internal.widget.p:
com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver -> com.actionbarsherlock.internal.widget.q:
    android.os.Parcelable mInstanceState -> b
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener -> com.actionbarsherlock.internal.widget.r:
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener -> com.actionbarsherlock.internal.widget.s:
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> a
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier -> com.actionbarsherlock.internal.widget.t:
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsColorDrawable -> com.actionbarsherlock.internal.widget.u:
    int color -> a
    android.graphics.Paint paint -> b
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
com.actionbarsherlock.internal.widget.IcsLinearLayout -> com.actionbarsherlock.internal.widget.IcsLinearLayout:
    int[] R_styleable_LinearLayout -> a
    android.graphics.drawable.Drawable mDivider -> b
    int mDividerWidth -> c
    int mDividerHeight -> d
    int mShowDividers -> e
    int mDividerPadding -> f
    void setShowDividers(int) -> setShowDividers
    int getShowDividers() -> getShowDividers
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void setDividerPadding(int) -> setDividerPadding
    int getDividerPadding() -> getDividerPadding
    int getDividerWidth() -> getDividerWidth
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> a
    void drawDividersHorizontal(android.graphics.Canvas) -> b
    void drawHorizontalDivider(android.graphics.Canvas,int) -> a
    void drawVerticalDivider(android.graphics.Canvas,int) -> b
    boolean hasDividerBeforeChildAt(int) -> a
com.actionbarsherlock.internal.widget.IcsListPopupWindow -> com.actionbarsherlock.internal.widget.v:
    android.content.Context mContext -> a
    android.widget.PopupWindow mPopup -> b
    android.widget.ListAdapter mAdapter -> c
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView mDropDownList -> d
    int mDropDownHeight -> e
    int mDropDownWidth -> f
    int mDropDownHorizontalOffset -> g
    int mDropDownVerticalOffset -> h
    boolean mDropDownVerticalOffsetSet -> i
    int mListItemExpandMaximum -> j
    android.view.View mPromptView -> k
    int mPromptPosition -> l
    android.database.DataSetObserver mObserver -> m
    android.view.View mDropDownAnchorView -> n
    android.graphics.drawable.Drawable mDropDownListHighlight -> o
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> p
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> q
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> r
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> s
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener mScrollListener -> t
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider mHideSelector -> u
    android.os.Handler mHandler -> v
    android.graphics.Rect mTempRect -> w
    boolean mModal -> x
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptPosition(int) -> a
    void setModal(boolean) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setAnchorView(android.view.View) -> a
    void setHorizontalOffset(int) -> b
    void setVerticalOffset(int) -> c
    void setContentWidth(int) -> d
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    void show() -> a
    void dismiss() -> b
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    void setInputMethodMode(int) -> e
    void setSelection(int) -> f
    void clearListSelection() -> c
    boolean isShowing() -> d
    boolean isInputMethodNotNeeded() -> f
    android.widget.ListView getListView() -> e
    int buildDropDown() -> g
    int getMaxAvailableHeight(android.view.View,int,boolean) -> a
    int measureHeightOfChildren(int,int,int,int,int) -> a
    void measureScrapChild(android.view.View,int,int) -> a
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView access$600(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> a
    int access$700(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> b
    android.widget.PopupWindow access$800(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> c
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable access$900(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> d
    android.os.Handler access$1000(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> e
    boolean access$1100(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> f
com.actionbarsherlock.internal.widget.IcsListPopupWindow$1 -> com.actionbarsherlock.internal.widget.w:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView -> com.actionbarsherlock.internal.widget.x:
    boolean mListSelectionHidden -> a
    boolean mHijackFocus -> b
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    boolean access$502(com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView,boolean) -> a
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider -> com.actionbarsherlock.internal.widget.y:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver -> com.actionbarsherlock.internal.widget.z:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener -> com.actionbarsherlock.internal.widget.aa:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor -> com.actionbarsherlock.internal.widget.ab:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable -> com.actionbarsherlock.internal.widget.ac:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar -> com.actionbarsherlock.internal.widget.IcsProgressBar:
    boolean IS_HONEYCOMB -> f
    int[] ProgressBar -> g
    int mMinWidth -> a
    int mMaxWidth -> b
    int mMinHeight -> c
    int mMaxHeight -> d
    int mProgress -> h
    int mSecondaryProgress -> i
    int mMax -> j
    int mBehavior -> k
    int mDuration -> l
    boolean mIndeterminate -> m
    boolean mOnlyIndeterminate -> n
    android.view.animation.Transformation mTransformation -> o
    android.view.animation.AlphaAnimation mAnimation -> p
    android.graphics.drawable.Drawable mIndeterminateDrawable -> q
    int mIndeterminateRealLeft -> r
    int mIndeterminateRealTop -> s
    android.graphics.drawable.Drawable mProgressDrawable -> t
    android.graphics.drawable.Drawable mCurrentDrawable -> u
    android.graphics.Bitmap mSampleTile -> e
    boolean mNoInvalidate -> v
    android.view.animation.Interpolator mInterpolator -> w
    com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable mRefreshProgressRunnable -> x
    long mUiThreadId -> y
    boolean mShouldStartAnimationDrawable -> z
    long mLastDrawTime -> A
    boolean mInDrawing -> B
    int mAnimationResolution -> C
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> D
    com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender mAccessibilityEventSender -> E
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> a
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> a
    void initProgressBar() -> c
    void setIndeterminate(boolean) -> setIndeterminate
    android.graphics.drawable.Drawable getIndeterminateDrawable() -> getIndeterminateDrawable
    void setIndeterminateDrawable(android.graphics.drawable.Drawable) -> setIndeterminateDrawable
    android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    android.graphics.drawable.Drawable getCurrentDrawable() -> getCurrentDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void postInvalidate() -> postInvalidate
    void doRefreshProgress(int,int,boolean,boolean) -> a
    void onProgressRefresh(float,boolean) -> a
    void refreshProgress(int,int,boolean) -> a
    void setProgress(int) -> setProgress
    void setProgress(int,boolean) -> a
    void setSecondaryProgress(int) -> setSecondaryProgress
    int getProgress() -> getProgress
    int getSecondaryProgress() -> getSecondaryProgress
    int getMax() -> getMax
    void setMax(int) -> setMax
    void startAnimation() -> a
    void stopAnimation() -> b
    void setInterpolator(android.content.Context,int) -> a
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setVisibility(int) -> setVisibility
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void updateDrawableBounds(int,int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void drawableStateChanged() -> drawableStateChanged
    void updateDrawableState() -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void scheduleAccessibilityEventSender() -> e
    void access$000(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int,boolean,boolean) -> a
    com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable access$102(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable) -> a
com.actionbarsherlock.internal.widget.IcsProgressBar$1 -> com.actionbarsherlock.internal.widget.ad:
com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender -> com.actionbarsherlock.internal.widget.ae:
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable -> com.actionbarsherlock.internal.widget.af:
    int mId -> b
    int mProgress -> c
    boolean mFromUser -> d
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> a
    void run() -> run
    void setup(int,int,boolean) -> a
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState -> com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState:
    int progress -> a
    int secondaryProgress -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1 -> com.actionbarsherlock.internal.widget.ag:
    com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState createFromParcel(android.os.Parcel) -> a
    com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.actionbarsherlock.internal.widget.IcsSpinner -> com.actionbarsherlock.internal.widget.ah:
    com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup mPopup -> G
    com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter mTempAdapter -> H
    int mDropDownWidth -> F
    int mGravity -> I
    boolean mDisableChildrenWhenDisabled -> J
    android.graphics.Rect mTempRect -> K
    void setEnabled(boolean) -> setEnabled
    void setGravity(int) -> setGravity
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    int getBaseline() -> getBaseline
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,boolean) -> b
    android.view.View makeAndAddView(int) -> b
    void setUpChild(android.view.View) -> setUpChild
    boolean performClick() -> performClick
    void onClick(android.content.DialogInterface,int) -> onClick
    void setPrompt(java.lang.CharSequence) -> setPrompt
    void setPromptId(int) -> setPromptId
    java.lang.CharSequence getPrompt() -> getPrompt
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.graphics.Rect access$000(com.actionbarsherlock.internal.widget.IcsSpinner) -> a
com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter -> com.actionbarsherlock.internal.widget.ai:
    android.widget.SpinnerAdapter mAdapter -> a
    android.widget.ListAdapter mListAdapter -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup -> com.actionbarsherlock.internal.widget.aj:
    java.lang.CharSequence mHintText -> b
    android.widget.ListAdapter mAdapter -> c
    com.actionbarsherlock.internal.widget.IcsSpinner this$0 -> a
    void setAdapter(android.widget.ListAdapter) -> a
    java.lang.CharSequence getHintText() -> f
    void setPromptText(java.lang.CharSequence) -> a
    void show() -> a
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1 -> com.actionbarsherlock.internal.widget.ak:
    com.actionbarsherlock.internal.widget.IcsSpinner val$this$0 -> a
    com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup this$1 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup -> com.actionbarsherlock.internal.widget.al:
    void setAdapter(android.widget.ListAdapter) -> a
    void show() -> a
    void dismiss() -> b
    boolean isShowing() -> d
    void setPromptText(java.lang.CharSequence) -> a
    java.lang.CharSequence getHintText() -> f
com.actionbarsherlock.internal.widget.IcsToast -> com.actionbarsherlock.internal.widget.am:
    android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int) -> a
    void setText(java.lang.CharSequence) -> setText
com.actionbarsherlock.internal.widget.ScrollingTabContainerView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> a
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> e
    com.actionbarsherlock.internal.widget.IcsLinearLayout mTabLayout -> f
    com.actionbarsherlock.internal.widget.IcsSpinner mTabSpinner -> g
    boolean mAllowCollapse -> h
    android.view.LayoutInflater mInflater -> i
    int mMaxTabWidth -> b
    int mContentHeight -> j
    int mSelectedTabIndex -> k
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> c
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener -> d
    android.view.animation.Interpolator sAlphaInterpolator -> l
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> a
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> b
    boolean performExpand() -> c
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    com.actionbarsherlock.internal.widget.IcsSpinner createSpinner() -> d
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToVisibility(int) -> a
    void animateToTab(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView createTabView(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> a
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> a
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
    com.actionbarsherlock.internal.widget.IcsLinearLayout access$200(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> a
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView access$300(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean) -> a
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1 -> com.actionbarsherlock.internal.widget.an:
    android.view.View val$tabView -> a
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> b
    void run() -> run
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter -> com.actionbarsherlock.internal.widget.ao:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener -> com.actionbarsherlock.internal.widget.ap:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> a
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mParent -> a
    com.actionbarsherlock.app.ActionBar$Tab mTab -> b
    com.actionbarsherlock.internal.widget.CapitalizingTextView mTextView -> c
    android.widget.ImageView mIconView -> d
    android.view.View mCustomView -> e
    void init(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean) -> a
    void bindTab(com.actionbarsherlock.app.ActionBar$Tab) -> a
    void onMeasure(int,int) -> onMeasure
    void update() -> a
    com.actionbarsherlock.app.ActionBar$Tab getTab() -> getTab
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener -> com.actionbarsherlock.internal.widget.aq:
    boolean mCanceled -> b
    int mFinalVisibility -> c
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> a
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(int) -> a
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
com.actionbarsherlock.internal.widget.TabsLinearLayout -> com.actionbarsherlock.internal.widget.TabsLinearLayout:
    int[] R_styleable_LinearLayout -> a
    boolean mUseLargestChild -> b
    boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    void onMeasure(int,int) -> onMeasure
    void useLargestChildHorizontal() -> a
com.actionbarsherlock.view.ActionMode -> com.actionbarsherlock.b.a:
    void invalidate() -> a
    void finish() -> b
    com.actionbarsherlock.view.Menu getMenu() -> d
com.actionbarsherlock.view.ActionMode$Callback -> com.actionbarsherlock.b.b:
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> a
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> b
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> a
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> a
com.actionbarsherlock.view.ActionProvider -> com.actionbarsherlock.b.c:
    com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> a
    android.view.View onCreateActionView() -> a
    boolean onPerformDefaultAction() -> b
    boolean hasSubMenu() -> c
    void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu) -> a
    void setSubUiVisibilityListener(com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener) -> a
com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener -> com.actionbarsherlock.b.d:
com.actionbarsherlock.view.CollapsibleActionView -> com.actionbarsherlock.b.e:
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> b
com.actionbarsherlock.view.ContextMenu -> com.actionbarsherlock.b.f:
    void clearHeader() -> a
    com.actionbarsherlock.view.ContextMenu setHeaderIcon(android.graphics.drawable.Drawable) -> a
    com.actionbarsherlock.view.ContextMenu setHeaderIcon(int) -> a
    com.actionbarsherlock.view.ContextMenu setHeaderTitle(java.lang.CharSequence) -> a
    com.actionbarsherlock.view.ContextMenu setHeaderTitle(int) -> b
    com.actionbarsherlock.view.ContextMenu setHeaderView(android.view.View) -> b
com.actionbarsherlock.view.Menu -> com.actionbarsherlock.b.g:
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> b
    com.actionbarsherlock.view.MenuItem add(int) -> d
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> a
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> a
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> c
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> e
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> b
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> b
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> a
    void removeItem(int) -> f
    void removeGroup(int) -> g
    void clear() -> d
    void setGroupCheckable(int,boolean,boolean) -> a
    void setGroupVisible(int,boolean) -> a
    void setGroupEnabled(int,boolean) -> b
    boolean hasVisibleItems() -> e
    com.actionbarsherlock.view.MenuItem findItem(int) -> h
    int size() -> f
    com.actionbarsherlock.view.MenuItem getItem(int) -> k
    void close() -> l
    boolean performShortcut(int,android.view.KeyEvent,int) -> a
    boolean isShortcutKey(int,android.view.KeyEvent) -> a
    boolean performIdentifierAction(int,int) -> b
    void setQwertyMode(boolean) -> a
com.actionbarsherlock.view.MenuInflater -> com.actionbarsherlock.b.h:
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> a
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> b
    java.lang.Object[] mActionViewConstructorArguments -> c
    java.lang.Object[] mActionProviderConstructorArguments -> d
    android.content.Context mContext -> e
    java.lang.Object mRealOwner -> f
com.actionbarsherlock.view.MenuItem -> com.actionbarsherlock.b.i:
    int getItemId() -> e
    int getGroupId() -> b
    int getOrder() -> h
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> a
    com.actionbarsherlock.view.MenuItem setTitle(int) -> b
    java.lang.CharSequence getTitle() -> j
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    java.lang.CharSequence getTitleCondensed() -> k
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> a
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    android.graphics.drawable.Drawable getIcon() -> c
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> a
    android.content.Intent getIntent() -> d
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> a
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    char getNumericShortcut() -> g
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    char getAlphabeticShortcut() -> a
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    boolean isCheckable() -> m
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    boolean isChecked() -> n
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    boolean isVisible() -> p
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    boolean isEnabled() -> o
    boolean hasSubMenu() -> l
    com.actionbarsherlock.view.SubMenu getSubMenu() -> i
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> f
    void setShowAsAction(int) -> c
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> e
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    com.actionbarsherlock.view.MenuItem setActionView(int) -> d
    android.view.View getActionView() -> q
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> r
    boolean expandActionView() -> s
    boolean collapseActionView() -> t
    boolean isActionViewExpanded() -> u
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> a
com.actionbarsherlock.view.MenuItem$OnActionExpandListener -> com.actionbarsherlock.b.j:
    boolean onMenuItemActionExpand(com.actionbarsherlock.view.MenuItem) -> b
    boolean onMenuItemActionCollapse(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener -> com.actionbarsherlock.b.k:
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.view.SubMenu -> com.actionbarsherlock.b.l:
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> n
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> a
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> b
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> c
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> a
    void clearHeader() -> a
    com.actionbarsherlock.view.SubMenu setIcon(int) -> a
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> a
    com.actionbarsherlock.view.MenuItem getItem() -> z
com.actionbarsherlock.view.Window -> com.actionbarsherlock.b.m:
com.actionbarsherlock.view.Window$Callback -> com.actionbarsherlock.b.n:
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.widget.SearchView -> com.actionbarsherlock.widget.SearchView:
    com.actionbarsherlock.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> a
    com.actionbarsherlock.widget.SearchView$OnCloseListener mOnCloseListener -> b
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> c
    com.actionbarsherlock.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> d
    android.view.View$OnClickListener mOnSearchClickListener -> e
    boolean mIconifiedByDefault -> f
    boolean mIconified -> g
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> h
    android.view.View mSearchButton -> i
    android.view.View mSubmitButton -> j
    android.view.View mSubmitArea -> k
    android.widget.ImageView mCloseButton -> l
    android.view.View mSearchEditFrame -> m
    android.view.View mVoiceButton -> n
    com.actionbarsherlock.widget.SearchView$SearchAutoComplete mQueryTextView -> o
    android.widget.ImageView mSearchHintIcon -> p
    boolean mSubmitButtonEnabled -> q
    java.lang.CharSequence mQueryHint -> r
    boolean mQueryRefinement -> s
    boolean mClearingFocus -> t
    int mMaxWidth -> u
    boolean mVoiceButtonEnabled -> v
    boolean mExpandedInActionView -> w
    int mCollapsedImeOptions -> x
    android.app.SearchableInfo mSearchable -> y
    android.os.Bundle mAppSearchData -> z
    java.lang.Runnable mShowImeRunnable -> A
    java.lang.Runnable mUpdateDrawableStateRunnable -> B
    java.lang.Runnable mReleaseCursorRunnable -> C
    android.content.Intent mVoiceWebSearchIntent -> D
    android.content.Intent mVoiceAppSearchIntent -> E
    java.util.WeakHashMap mOutsideDrawablesCache -> F
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(com.actionbarsherlock.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(com.actionbarsherlock.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(com.actionbarsherlock.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> c
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    int getPreferredWidth() -> getPreferredWidth
    void updateViewsVisibility(boolean) -> a
    boolean hasVoiceSearch() -> e
    boolean isSubmitAreaEnabled() -> f
    void updateSubmitButton(boolean) -> b
    void updateSubmitArea() -> g
    void updateCloseButton() -> h
    void postUpdateFocusedState() -> i
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImeVisibility(boolean) -> setImeVisibility
    void onQueryRefine(java.lang.CharSequence) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    int getSearchIconId() -> getSearchIconId
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> b
    void updateQueryHint() -> j
    void updateSearchAutoComplete() -> k
    void updateVoiceButton(boolean) -> c
    void onCloseClicked() -> l
    void onSearchClicked() -> m
    void onTextFocusChanged() -> d
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> b
    void onActionViewExpanded() -> a
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void setQuery(java.lang.CharSequence) -> setQuery
    void forceSuggestionQuery() -> n
    boolean isLandscapeMode(android.content.Context) -> a
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> b
    void setText(android.widget.AutoCompleteTextView,java.lang.CharSequence,boolean) -> a
    void access$2200(android.widget.AutoCompleteTextView,boolean) -> a
    void access$2300(com.actionbarsherlock.widget.SearchView,boolean) -> a
com.actionbarsherlock.widget.SearchView$OnCloseListener -> com.actionbarsherlock.widget.a:
    boolean onClose() -> a
com.actionbarsherlock.widget.SearchView$OnQueryTextListener -> com.actionbarsherlock.widget.b:
com.actionbarsherlock.widget.SearchView$OnSuggestionListener -> com.actionbarsherlock.widget.c:
com.actionbarsherlock.widget.SearchView$SearchAutoComplete -> com.actionbarsherlock.widget.SearchView$SearchAutoComplete:
    int mThreshold -> a
    com.actionbarsherlock.widget.SearchView mSearchView -> b
    void setSearchView(com.actionbarsherlock.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    void replaceText(java.lang.CharSequence) -> replaceText
    void performCompletion() -> performCompletion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> enoughToFilter
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
com.actionbarsherlock.widget.SuggestionsAdapter -> com.actionbarsherlock.widget.d:
    android.app.SearchManager mSearchManager -> j
    android.app.SearchableInfo mSearchable -> k
    com.actionbarsherlock.widget.SearchView mSearchView -> l
    android.content.Context mProviderContext -> m
    java.util.WeakHashMap mOutsideDrawablesCache -> n
    boolean mClosed -> o
    int mQueryRefinement -> p
    android.content.res.ColorStateList mUrlColor -> q
    int mText1Col -> r
    int mText2Col -> s
    int mText2UrlCol -> t
    int mIconName1Col -> u
    int mIconName2Col -> v
    int mFlagsCol -> w
    void setQueryRefinement(int) -> a
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.database.Cursor getSuggestions(java.lang.String,int) -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> d
    void changeCursor(android.database.Cursor) -> a
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> b
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> a
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> e
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> f
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> a
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> b
    android.graphics.drawable.Drawable getTheDrawable(android.net.Uri) -> a
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> b
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> g
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> a
    java.lang.String getStringOrNull(android.database.Cursor,int) -> a
com.actionbarsherlock.widget.SuggestionsAdapter$ChildViewCache -> com.actionbarsherlock.widget.e:
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon1 -> c
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
org.holoeverywhere.ArrayAdapter -> org.holoeverywhere.a:
    boolean mAutoSetNotifyFlag -> a
    android.content.Context mContext -> b
    int mDropDownResource -> c
    int mFieldId -> d
    org.holoeverywhere.ArrayAdapter$ArrayFilter mFilter -> e
    org.holoeverywhere.LayoutInflater mInflater -> f
    java.lang.Object mLock -> g
    boolean mNotifyOnChange -> h
    java.util.List mObjects -> i
    java.util.ArrayList mOriginalValues -> j
    int mResource -> k
    android.view.View createViewFromResource(int,android.view.View,android.view.ViewGroup,int) -> a
    int getCount() -> getCount
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.widget.Filter getFilter() -> getFilter
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void init(android.content.Context,int,int,java.util.List) -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.util.ArrayList access$000(org.holoeverywhere.ArrayAdapter) -> a
    java.lang.Object access$100(org.holoeverywhere.ArrayAdapter) -> b
    java.util.ArrayList access$002(org.holoeverywhere.ArrayAdapter,java.util.ArrayList) -> a
    java.util.List access$200(org.holoeverywhere.ArrayAdapter) -> c
    java.util.List access$202(org.holoeverywhere.ArrayAdapter,java.util.List) -> a
org.holoeverywhere.ArrayAdapter$1 -> org.holoeverywhere.b:
org.holoeverywhere.ArrayAdapter$ArrayFilter -> org.holoeverywhere.c:
    org.holoeverywhere.ArrayAdapter this$0 -> a
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
org.holoeverywhere.FontLoader -> org.holoeverywhere.d:
    android.util.SparseArray FONT_CACHE -> a
    android.view.View apply(android.view.View) -> a
    android.view.View applyDefaultStyles(android.view.View) -> b
    android.graphics.Typeface loadTypeface(android.content.Context,int) -> a
    android.graphics.Typeface readTypeface(java.io.File,android.content.res.Resources,int,boolean) -> a
org.holoeverywhere.FontLoader$HoloFont -> org.holoeverywhere.e:
    org.holoeverywhere.FontLoader$HoloFont ROBOTO -> a
    org.holoeverywhere.FontLoader$HoloFont ROBOTO_BOLD -> b
    org.holoeverywhere.FontLoader$HoloFont ROBOTO_BOLD_ITALIC -> c
    org.holoeverywhere.FontLoader$HoloFont ROBOTO_ITALIC -> d
    org.holoeverywhere.FontLoader$HoloFont ROBOTO_REGULAR -> e
    int font -> f
    boolean ignore -> g
    android.graphics.Typeface typeface -> h
org.holoeverywhere.HoloEverywhere -> org.holoeverywhere.f:
    boolean ALWAYS_USE_PARENT_THEME -> a
    boolean DEBUG -> b
    boolean DISABLE_OVERSCROLL_EFFECT -> c
    boolean NAMED_PREFERENCES -> d
    java.lang.String PACKAGE -> e
    org.holoeverywhere.HoloEverywhere$PreferenceImpl PREFERENCE_IMPL -> f
    boolean WRAP_TO_NATIVE_CONTEXT_MENU -> g
org.holoeverywhere.HoloEverywhere$PreferenceImpl -> org.holoeverywhere.g:
    org.holoeverywhere.HoloEverywhere$PreferenceImpl JSON -> a
    org.holoeverywhere.HoloEverywhere$PreferenceImpl XML -> b
    org.holoeverywhere.HoloEverywhere$PreferenceImpl[] $VALUES -> c
    org.holoeverywhere.HoloEverywhere$PreferenceImpl[] values() -> values
    org.holoeverywhere.HoloEverywhere$PreferenceImpl valueOf(java.lang.String) -> valueOf
org.holoeverywhere.IHoloActivity -> org.holoeverywhere.h:
org.holoeverywhere.IHoloActivity$OnWindowFocusChangeListener -> org.holoeverywhere.i:
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
org.holoeverywhere.IHoloFragment -> org.holoeverywhere.j:
org.holoeverywhere.LayoutInflater -> org.holoeverywhere.k:
    java.util.HashMap sConstructorMap -> a
    java.lang.Class[] sConstructorSignature -> b
    java.util.Map sFinishInflateMethods -> c
    java.util.Map sInstances -> d
    org.holoeverywhere.LayoutInflater$OnInitInflaterListener sListener -> e
    java.util.List sPackages -> f
    java.util.Map sRemaps -> g
    org.holoeverywhere.app.Fragment mChildFragment -> h
    java.util.Map mClonedInstances -> i
    java.lang.Object[] mConstructorArgs -> j
    android.content.Context mContext -> k
    java.util.List mFactories -> l
    android.view.LayoutInflater$Filter mFilter -> m
    java.util.HashMap mFilterMap -> n
    android.support.v4.app.FragmentActivity mFragmentActivity -> o
    java.util.WeakHashMap mFragmentChildInstances -> p
    org.holoeverywhere.LayoutInflater mParentInflater -> q
    void asInternal(java.lang.Class) -> a
    org.holoeverywhere.LayoutInflater from(android.content.Context) -> a
    android.view.View inflate(android.content.Context,int) -> a
    void register(java.lang.String,java.lang.String) -> a
    void registerPackage(java.lang.String) -> a
    void removeInstance(android.content.Context) -> b
    android.view.View _createView(java.lang.String,java.lang.String,android.util.AttributeSet) -> a
    void addFactory(org.holoeverywhere.LayoutInflater$Factory,int) -> a
    void checkFactoryOnNull(org.holoeverywhere.LayoutInflater$Factory) -> b
    org.holoeverywhere.LayoutInflater cloneInContext(android.content.Context) -> c
    android.view.View createViewFromTag(android.view.View,java.lang.String,android.util.AttributeSet) -> a
    void failNotAllowed(java.lang.String,java.lang.String,android.util.AttributeSet) -> c
    android.view.LayoutInflater$Filter getFilter() -> getFilter
    android.support.v4.app.FragmentActivity getFragmentActivity() -> a
    android.view.View inflate(int,android.view.ViewGroup) -> inflate
    android.view.View inflate(int,android.view.ViewGroup,boolean) -> inflate
    android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup) -> inflate
    android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean) -> inflate
    org.holoeverywhere.internal.WindowDecorView makeDecorView(int) -> a
    org.holoeverywhere.LayoutInflater obtainFragmentChildInflater(org.holoeverywhere.app.Fragment) -> a
    android.view.View onCreateView(android.view.View,java.lang.String,android.util.AttributeSet) -> onCreateView
    void parseInclude(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet) -> a
    void parseRequestFocus(org.xmlpull.v1.XmlPullParser,android.view.View) -> a
    android.view.View prepareView(android.view.View) -> a
    void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean) -> a
    void setFactory(android.view.LayoutInflater$Factory) -> setFactory
    void setFactory(org.holoeverywhere.LayoutInflater$Factory) -> a
    void setFactory2(android.view.LayoutInflater$Factory2) -> setFactory2
    void setFilter(android.view.LayoutInflater$Filter) -> setFilter
    void setFragmentActivity(android.support.v4.app.FragmentActivity) -> a
    org.holoeverywhere.LayoutInflater setParent(android.view.LayoutInflater) -> a
    android.view.View tryCreateView(java.lang.String,java.lang.String,android.util.AttributeSet) -> b
    android.view.LayoutInflater cloneInContext(android.content.Context) -> cloneInContext
org.holoeverywhere.LayoutInflater$BlinkLayout -> org.holoeverywhere.l:
    boolean mBlink -> a
    boolean mBlinkState -> b
    android.os.Handler mHandler -> c
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void makeBlink() -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean access$000(org.holoeverywhere.LayoutInflater$BlinkLayout) -> a
    boolean access$102(org.holoeverywhere.LayoutInflater$BlinkLayout,boolean) -> a
    boolean access$100(org.holoeverywhere.LayoutInflater$BlinkLayout) -> b
    void access$200(org.holoeverywhere.LayoutInflater$BlinkLayout) -> c
org.holoeverywhere.LayoutInflater$BlinkLayout$1 -> org.holoeverywhere.m:
    org.holoeverywhere.LayoutInflater$BlinkLayout this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
org.holoeverywhere.LayoutInflater$Factory -> org.holoeverywhere.n:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
org.holoeverywhere.LayoutInflater$Factory2Wrapper -> org.holoeverywhere.o:
    android.view.LayoutInflater$Factory2 mFactory -> a
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
org.holoeverywhere.LayoutInflater$FactoryWrapper -> org.holoeverywhere.p:
    android.view.LayoutInflater$Factory mFactory -> a
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
org.holoeverywhere.LayoutInflater$LayoutInflaterCreator -> org.holoeverywhere.q:
    org.holoeverywhere.LayoutInflater createService(android.content.Context) -> a
    java.lang.Object createService(android.content.Context) -> b
org.holoeverywhere.LayoutInflater$OnInitInflaterListener -> org.holoeverywhere.r:
    void onInitInflater(org.holoeverywhere.LayoutInflater) -> a
org.holoeverywhere.R -> org.holoeverywhere.s:
org.holoeverywhere.R$styleable -> org.holoeverywhere.t:
    int[] AbsSpinner -> AbsSpinner
    int AbsSpinner_android_entries -> AbsSpinner_android_entries
    int[] AlertDialog -> AlertDialog
    int AlertDialog_bottomBright -> AlertDialog_bottomBright
    int AlertDialog_bottomDark -> AlertDialog_bottomDark
    int AlertDialog_bottomMedium -> AlertDialog_bottomMedium
    int AlertDialog_centerBright -> AlertDialog_centerBright
    int AlertDialog_centerDark -> AlertDialog_centerDark
    int AlertDialog_centerMedium -> AlertDialog_centerMedium
    int AlertDialog_fullBright -> AlertDialog_fullBright
    int AlertDialog_fullDark -> AlertDialog_fullDark
    int AlertDialog_gravity -> AlertDialog_gravity
    int AlertDialog_horizontalProgressLayout -> AlertDialog_horizontalProgressLayout
    int AlertDialog_layout -> AlertDialog_layout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_progressLayout -> AlertDialog_progressLayout
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int AlertDialog_topBright -> AlertDialog_topBright
    int AlertDialog_topDark -> AlertDialog_topDark
    int[] AutoCompleteTextView -> AutoCompleteTextView
    int AutoCompleteTextView_android_completionHint -> AutoCompleteTextView_android_completionHint
    int AutoCompleteTextView_android_completionHintView -> AutoCompleteTextView_android_completionHintView
    int AutoCompleteTextView_android_completionThreshold -> AutoCompleteTextView_android_completionThreshold
    int AutoCompleteTextView_android_dropDownAnchor -> AutoCompleteTextView_android_dropDownAnchor
    int AutoCompleteTextView_android_dropDownHeight -> AutoCompleteTextView_android_dropDownHeight
    int AutoCompleteTextView_android_dropDownSelector -> AutoCompleteTextView_android_dropDownSelector
    int AutoCompleteTextView_android_dropDownWidth -> AutoCompleteTextView_android_dropDownWidth
    int AutoCompleteTextView_android_entries -> AutoCompleteTextView_android_entries
    int AutoCompleteTextView_android_inputType -> AutoCompleteTextView_android_inputType
    int AutoCompleteTextView_dropDownHorizontalOffset -> AutoCompleteTextView_dropDownHorizontalOffset
    int AutoCompleteTextView_dropDownVerticalOffset -> AutoCompleteTextView_dropDownVerticalOffset
    int[] CalendarView -> CalendarView
    int CalendarView_dateTextAppearance -> CalendarView_dateTextAppearance
    int CalendarView_firstDayOfWeek -> CalendarView_firstDayOfWeek
    int CalendarView_focusedMonthDateColor -> CalendarView_focusedMonthDateColor
    int CalendarView_maxDate -> CalendarView_maxDate
    int CalendarView_minDate -> CalendarView_minDate
    int CalendarView_selectedDateVerticalBar -> CalendarView_selectedDateVerticalBar
    int CalendarView_selectedWeekBackgroundColor -> CalendarView_selectedWeekBackgroundColor
    int CalendarView_showWeekNumber -> CalendarView_showWeekNumber
    int CalendarView_shownWeekCount -> CalendarView_shownWeekCount
    int CalendarView_unfocusedMonthDateColor -> CalendarView_unfocusedMonthDateColor
    int CalendarView_weekDayTextAppearance -> CalendarView_weekDayTextAppearance
    int CalendarView_weekNumberColor -> CalendarView_weekNumberColor
    int CalendarView_weekSeparatorLineColor -> CalendarView_weekSeparatorLineColor
    int[] ColorDrawable -> ColorDrawable
    int ColorDrawable_android_color -> ColorDrawable_android_color
    int[] DatePicker -> DatePicker
    int DatePicker_calendarViewShown -> DatePicker_calendarViewShown
    int DatePicker_endYear -> DatePicker_endYear
    int DatePicker_forceShownState -> DatePicker_forceShownState
    int DatePicker_layout -> DatePicker_layout
    int DatePicker_maxDate -> DatePicker_maxDate
    int DatePicker_minDate -> DatePicker_minDate
    int DatePicker_spinnersShown -> DatePicker_spinnersShown
    int DatePicker_startYear -> DatePicker_startYear
    int[] Divider -> Divider
    int Divider_android_orientation -> Divider_android_orientation
    int[] ExpandableListView -> ExpandableListView
    int ExpandableListView_android_childDivider -> ExpandableListView_android_childDivider
    int ExpandableListView_android_childIndicator -> ExpandableListView_android_childIndicator
    int ExpandableListView_android_childIndicatorLeft -> ExpandableListView_android_childIndicatorLeft
    int ExpandableListView_android_childIndicatorRight -> ExpandableListView_android_childIndicatorRight
    int ExpandableListView_android_groupIndicator -> ExpandableListView_android_groupIndicator
    int ExpandableListView_android_indicatorLeft -> ExpandableListView_android_indicatorLeft
    int ExpandableListView_android_indicatorRight -> ExpandableListView_android_indicatorRight
    int[] FastScroll -> FastScroll
    int FastScroll_fastScrollOverlayPosition -> FastScroll_fastScrollOverlayPosition
    int FastScroll_fastScrollPreviewBackgroundLeft -> FastScroll_fastScrollPreviewBackgroundLeft
    int FastScroll_fastScrollPreviewBackgroundRight -> FastScroll_fastScrollPreviewBackgroundRight
    int FastScroll_fastScrollTextColor -> FastScroll_fastScrollTextColor
    int FastScroll_fastScrollThumbDrawable -> FastScroll_fastScrollThumbDrawable
    int FastScroll_fastScrollTrackDrawable -> FastScroll_fastScrollTrackDrawable
    int[] IconMenuView -> IconMenuView
    int IconMenuView_android_maxItems -> IconMenuView_android_maxItems
    int IconMenuView_android_maxItemsPerRow -> IconMenuView_android_maxItemsPerRow
    int IconMenuView_android_maxRows -> IconMenuView_android_maxRows
    int IconMenuView_android_moreIcon -> IconMenuView_android_moreIcon
    int IconMenuView_android_rowHeight -> IconMenuView_android_rowHeight
    int[] LayerDrawable -> LayerDrawable
    int LayerDrawable_android_opacity -> LayerDrawable_android_opacity
    int[] LayerDrawableItem -> LayerDrawableItem
    int LayerDrawableItem_android_bottom -> LayerDrawableItem_android_bottom
    int LayerDrawableItem_android_drawable -> LayerDrawableItem_android_drawable
    int LayerDrawableItem_android_id -> LayerDrawableItem_android_id
    int LayerDrawableItem_android_left -> LayerDrawableItem_android_left
    int LayerDrawableItem_android_right -> LayerDrawableItem_android_right
    int LayerDrawableItem_android_top -> LayerDrawableItem_android_top
    int[] LinearLayout -> LinearLayout
    int LinearLayout_android_divider -> LinearLayout_android_divider
    int LinearLayout_android_dividerPadding -> LinearLayout_android_dividerPadding
    int LinearLayout_android_showDividers -> LinearLayout_android_showDividers
    int LinearLayout_dividerPadding -> LinearLayout_dividerPadding
    int LinearLayout_showDividers -> LinearLayout_showDividers
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_preserveIconSpacing -> MenuView_android_preserveIconSpacing
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int[] NumberPicker -> NumberPicker
    int NumberPicker_android_fadingEdgeLength -> NumberPicker_android_fadingEdgeLength
    int NumberPicker_android_layout -> NumberPicker_android_layout
    int NumberPicker_android_maxHeight -> NumberPicker_android_maxHeight
    int NumberPicker_android_maxWidth -> NumberPicker_android_maxWidth
    int NumberPicker_android_minHeight -> NumberPicker_android_minHeight
    int NumberPicker_android_minWidth -> NumberPicker_android_minWidth
    int NumberPicker_android_orientation -> NumberPicker_android_orientation
    int NumberPicker_flingable -> NumberPicker_flingable
    int NumberPicker_selectionDivider -> NumberPicker_selectionDivider
    int NumberPicker_selectionDividerHeight -> NumberPicker_selectionDividerHeight
    int NumberPicker_selectionDividersDistance -> NumberPicker_selectionDividersDistance
    int NumberPicker_solidColor -> NumberPicker_solidColor
    int NumberPicker_virtualButtonPressedDrawable -> NumberPicker_virtualButtonPressedDrawable
    int[] PopupWindow -> PopupWindow
    int PopupWindow_android_popupAnimationStyle -> PopupWindow_android_popupAnimationStyle
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int[] ProgressBar -> ProgressBar
    int ProgressBar_android_indeterminate -> ProgressBar_android_indeterminate
    int ProgressBar_android_indeterminateBehavior -> ProgressBar_android_indeterminateBehavior
    int ProgressBar_android_indeterminateDrawable -> ProgressBar_android_indeterminateDrawable
    int ProgressBar_android_indeterminateDuration -> ProgressBar_android_indeterminateDuration
    int ProgressBar_android_indeterminateOnly -> ProgressBar_android_indeterminateOnly
    int ProgressBar_android_interpolator -> ProgressBar_android_interpolator
    int ProgressBar_android_max -> ProgressBar_android_max
    int ProgressBar_android_maxHeight -> ProgressBar_android_maxHeight
    int ProgressBar_android_maxWidth -> ProgressBar_android_maxWidth
    int ProgressBar_android_minHeight -> ProgressBar_android_minHeight
    int ProgressBar_android_minWidth -> ProgressBar_android_minWidth
    int ProgressBar_android_progress -> ProgressBar_android_progress
    int ProgressBar_android_progressDrawable -> ProgressBar_android_progressDrawable
    int ProgressBar_android_secondaryProgress -> ProgressBar_android_secondaryProgress
    int[] RotateDrawable -> RotateDrawable
    int RotateDrawable_android_drawable -> RotateDrawable_android_drawable
    int RotateDrawable_android_fromDegrees -> RotateDrawable_android_fromDegrees
    int RotateDrawable_android_pivotX -> RotateDrawable_android_pivotX
    int RotateDrawable_android_pivotY -> RotateDrawable_android_pivotY
    int RotateDrawable_android_toDegrees -> RotateDrawable_android_toDegrees
    int RotateDrawable_android_visible -> RotateDrawable_android_visible
    int[] SeekBar -> SeekBar
    int SeekBar_android_disabledAlpha -> SeekBar_android_disabledAlpha
    int SeekBar_android_thumb -> SeekBar_android_thumb
    int SeekBar_android_thumbOffset -> SeekBar_android_thumbOffset
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownHintAppearance -> SherlockTheme_dropDownHintAppearance
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
    int[] Spinner -> Spinner
    int Spinner_android_dropDownSelector -> Spinner_android_dropDownSelector
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_gravity -> Spinner_android_gravity
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_android_prompt -> Spinner_android_prompt
    int Spinner_disableChildrenWhenDisabled -> Spinner_disableChildrenWhenDisabled
    int Spinner_dropDownHorizontalOffset -> Spinner_dropDownHorizontalOffset
    int Spinner_dropDownVerticalOffset -> Spinner_dropDownVerticalOffset
    int Spinner_popupPromptView -> Spinner_popupPromptView
    int Spinner_spinnerMode -> Spinner_spinnerMode
    int[] StateListDrawable -> StateListDrawable
    int StateListDrawable_android_constantSize -> StateListDrawable_android_constantSize
    int StateListDrawable_android_dither -> StateListDrawable_android_dither
    int StateListDrawable_android_enterFadeDuration -> StateListDrawable_android_enterFadeDuration
    int StateListDrawable_android_exitFadeDuration -> StateListDrawable_android_exitFadeDuration
    int StateListDrawable_android_variablePadding -> StateListDrawable_android_variablePadding
    int StateListDrawable_android_visible -> StateListDrawable_android_visible
    int[] Switch -> Switch
    int Switch_switchMinWidth -> Switch_switchMinWidth
    int Switch_switchPadding -> Switch_switchPadding
    int Switch_switchTextAppearance -> Switch_switchTextAppearance
    int Switch_textOff -> Switch_textOff
    int Switch_textOn -> Switch_textOn
    int Switch_thumb -> Switch_thumb
    int Switch_thumbTextPadding -> Switch_thumbTextPadding
    int Switch_toggleWhenClick -> Switch_toggleWhenClick
    int Switch_track -> Switch_track
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_textAllCaps -> TextAppearance_android_textAllCaps
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textColorHighlight -> TextAppearance_android_textColorHighlight
    int TextAppearance_android_textColorHint -> TextAppearance_android_textColorHint
    int TextAppearance_android_textColorLink -> TextAppearance_android_textColorLink
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int[] TextView -> TextView
    int TextView_android_text -> TextView_android_text
    int TextView_android_textAllCaps -> TextView_android_textAllCaps
    int TextView_textAllCaps -> TextView_textAllCaps
    int[] TimePicker -> TimePicker
    int TimePicker_layout -> TimePicker_layout
    int[] WindowSizes -> WindowSizes
    int WindowSizes_windowFixedHeightMajor -> WindowSizes_windowFixedHeightMajor
    int WindowSizes_windowFixedHeightMinor -> WindowSizes_windowFixedHeightMinor
    int WindowSizes_windowFixedWidthMajor -> WindowSizes_windowFixedWidthMajor
    int WindowSizes_windowFixedWidthMinor -> WindowSizes_windowFixedWidthMinor
    int WindowSizes_windowMinHeightMajor -> WindowSizes_windowMinHeightMajor
    int WindowSizes_windowMinHeightMinor -> WindowSizes_windowMinHeightMinor
    int WindowSizes_windowMinWidthMajor -> WindowSizes_windowMinWidthMajor
    int WindowSizes_windowMinWidthMinor -> WindowSizes_windowMinWidthMinor
org.holoeverywhere.SystemServiceManager -> org.holoeverywhere.u:
    java.util.Map CREATORS_MAP -> a
    java.util.Map MAP -> b
    java.lang.Object getSuperSystemService(android.content.Context,java.lang.String) -> b
    java.lang.Object getSystemService(android.content.Context,java.lang.String) -> a
    void register(java.lang.Class) -> a
org.holoeverywhere.SystemServiceManager$SuperSystemService -> org.holoeverywhere.v:
    java.lang.Object superGetSystemService(java.lang.String) -> a_
org.holoeverywhere.SystemServiceManager$SystemServiceCreator -> org.holoeverywhere.w:
    java.lang.Object createService(android.content.Context) -> b
org.holoeverywhere.SystemServiceManager$SystemServiceCreator$SystemService -> org.holoeverywhere.x:
    java.lang.String value() -> a
org.holoeverywhere.ThemeManager -> org.holoeverywhere.y:
    int _DEFAULT_THEME -> i
    org.holoeverywhere.ThemeManager$ThemeGetter _THEME_GETTER -> j
    int _THEME_MASK -> k
    int _THEME_MODIFIER -> l
    android.util.SparseIntArray _THEMES_MAP -> m
    int COLOR_SCHEME_MASK -> a
    int DARK -> b
    int DIALOG -> c
    int FULLSCREEN -> d
    int LIGHT -> e
    int MIXED -> f
    int NEXT_OFFSET -> n
    int NO_ACTION_BAR -> g
    java.util.List sThemeSetters -> o
    int WALLPAPER -> h
    void applyTheme(org.holoeverywhere.app.Activity,boolean) -> a
    void cloneTheme(android.content.Intent,android.content.Intent,boolean) -> a
    int getDefaultTheme() -> a
    int getTheme(org.holoeverywhere.app.Activity) -> a
    int getTheme(android.content.Intent) -> a
    int getTheme(android.content.Intent,boolean) -> a
    int getThemeResource(org.holoeverywhere.app.Activity) -> b
    int getThemeResource(int) -> a
    int getThemeResource(int,boolean) -> a
    int getThemeType(android.content.Context) -> a
    boolean hasSpecifiedTheme(org.holoeverywhere.app.Activity) -> c
    boolean hasSpecifiedTheme(android.content.Intent) -> b
    boolean is(int,int) -> b
    boolean isDark(int) -> b
    boolean isDialog(int) -> c
    boolean isFullScreen(int) -> d
    boolean isLight(int) -> e
    boolean isMixed(int) -> f
    boolean isNoActionBar(int) -> g
    boolean isWallpaper(int) -> h
    int makeNewFlag() -> b
    void map(int,int) -> a
    int prepareFlags(int,boolean) -> b
    void reset() -> c
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> a
    void startActivity(android.content.Context,android.content.Intent,int,android.os.Bundle) -> a
org.holoeverywhere.ThemeManager$1 -> org.holoeverywhere.z:
org.holoeverywhere.ThemeManager$SuperStartActivity -> org.holoeverywhere.aa:
    void superStartActivity(android.content.Intent,int,android.os.Bundle) -> a
org.holoeverywhere.ThemeManager$ThemeGetter -> org.holoeverywhere.ab:
    int getThemeResource(org.holoeverywhere.ThemeManager$ThemeGetter$ThemeTag) -> a
org.holoeverywhere.ThemeManager$ThemeGetter$ThemeTag -> org.holoeverywhere.ac:
    boolean dark -> a
    boolean fullscreen -> b
    boolean light -> c
    boolean mixed -> d
    boolean noActionBar -> e
    boolean wallpaper -> f
    boolean dialog -> g
    int flags -> h
org.holoeverywhere.ThemeManager$ThemeSetter -> org.holoeverywhere.ad:
    void setupThemes() -> a
org.holoeverywhere.addon.AddonSherlock -> org.holoeverywhere.a.a:
org.holoeverywhere.addon.AddonSherlock$AddonSherlockA -> org.holoeverywhere.a.b:
    boolean mIgnoreNativeCreate -> a
    boolean mIgnoreNativePrepare -> b
    boolean mIgnoreNativeSelected -> c
    com.actionbarsherlock.ActionBarSherlock mSherlock -> d
    boolean addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    boolean closeOptionsMenu() -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> b
    boolean invalidateOptionsMenu() -> c
    void onConfigurationChanged(android.content.res.Configuration,android.content.res.Configuration) -> a
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    void onDestroy() -> d
    boolean onKeyUp(int,android.view.KeyEvent) -> a
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    boolean onMenuOpened(int,android.view.Menu) -> b
    void onPanelClosed(int,android.view.Menu) -> c
    void onPause() -> e
    void onPostCreate(android.os.Bundle) -> a
    void onPostResume() -> f
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    void onStop() -> g
    void onTitleChanged(java.lang.CharSequence,int) -> a
    boolean openOptionsMenu() -> h
    boolean setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> a
org.holoeverywhere.addon.AddonSherlock$HoloActionBarSherlockCompat -> org.holoeverywhere.a.c:
org.holoeverywhere.addon.AddonSherlock$HoloActionBarSherlockNative -> org.holoeverywhere.a.d:
org.holoeverywhere.addon.IAddon -> org.holoeverywhere.a.e:
    java.util.Map sAddonsMap -> a
    java.util.Map mStatesMap -> b
    java.util.Map mTypesMap -> c
    org.holoeverywhere.addon.IAddon addon(java.lang.Class) -> a
    java.lang.Class makeAddonClass(java.lang.String) -> a
    org.holoeverywhere.addon.IAddonBase obtain(java.lang.Class,java.lang.Object) -> a
    org.holoeverywhere.addon.IAddonBase obtain(java.lang.Object) -> a
    void register(java.lang.Class,java.lang.Class) -> a
org.holoeverywhere.addon.IAddonActivity -> org.holoeverywhere.a.f:
    boolean addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    boolean closeOptionsMenu() -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    android.view.View findViewById(int) -> a
    boolean invalidateOptionsMenu() -> c
    void onActivityResult(int,int,android.content.Intent) -> a
    void onConfigurationChanged(android.content.res.Configuration,android.content.res.Configuration) -> a
    void onContentChanged() -> i
    void onCreate(android.os.Bundle) -> b
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    void onDestroy() -> d
    boolean onKeyUp(int,android.view.KeyEvent) -> a
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    boolean onMenuOpened(int,android.view.Menu) -> b
    void onNewIntent(android.content.Intent) -> a
    void onPanelClosed(int,android.view.Menu) -> c
    void onPause() -> e
    void onPostCreate(android.os.Bundle) -> a
    void onPostResume() -> f
    void onPreCreate(android.os.Bundle) -> c
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    void onRestart() -> j
    void onResume() -> k
    void onSaveInstanceState(android.os.Bundle) -> d
    void onStart() -> l
    void onStop() -> g
    void onTitleChanged(java.lang.CharSequence,int) -> a
    boolean openOptionsMenu() -> h
    boolean setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
org.holoeverywhere.addon.IAddonApplication -> org.holoeverywhere.a.g:
    void onCreate() -> a
    void onPreCreate() -> b
org.holoeverywhere.addon.IAddonAttacher -> org.holoeverywhere.a.h:
    org.holoeverywhere.addon.IAddonBase addon(java.lang.Class) -> a
    void addon(java.util.List) -> a
    org.holoeverywhere.addon.IAddonBase addon(java.lang.String) -> b
    void lockAttaching() -> c_
    java.util.List obtainAddonsList() -> d_
    boolean performAddonAction(org.holoeverywhere.addon.IAddonAttacher$AddonCallback) -> a
org.holoeverywhere.addon.IAddonAttacher$AddonCallback -> org.holoeverywhere.a.i:
    boolean mStopped -> a
    boolean action(java.lang.Object) -> a
    void justAction(java.lang.Object) -> b
    void justPost() -> a
    boolean performAction(java.lang.Object) -> c
    boolean post() -> b
    void pre() -> c
    void stop() -> d
org.holoeverywhere.addon.IAddonAttacher$AttachException -> org.holoeverywhere.a.j:
org.holoeverywhere.addon.IAddonBase -> org.holoeverywhere.a.k:
    java.lang.Object mObject -> a
    void attach(java.lang.Object) -> a
    java.lang.Object get() -> m
    void onAttach(java.lang.Object) -> b
org.holoeverywhere.addon.IAddonBasicAttacher -> org.holoeverywhere.a.l:
    java.util.Map mAddons -> a
    java.util.List mAddonsList -> b
    boolean mLockAttaching -> c
    java.lang.Object mObject -> d
    org.holoeverywhere.addon.IAddonBase addon(java.lang.Class) -> a
    void addon(java.util.List) -> a
    org.holoeverywhere.addon.IAddonBase addon(java.lang.String) -> b
    void lockAttaching() -> c_
    java.util.List obtainAddonsList() -> d_
    boolean performAddonAction(org.holoeverywhere.addon.IAddonAttacher$AddonCallback) -> a
    void reset() -> c
org.holoeverywhere.addon.IAddonFragment -> org.holoeverywhere.a.m:
    void onCreate(android.os.Bundle) -> a
    void onPreCreate(android.os.Bundle) -> b
    void onViewCreated(android.view.View,android.os.Bundle) -> a
org.holoeverywhere.app.Activity -> org.holoeverywhere.b.a:
    org.holoeverywhere.addon.IAddonAttacher mAttacher -> n
    boolean mCreatedByThemeManager -> o
    boolean mFirstRun -> p
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    org.holoeverywhere.addon.IAddonActivity addon(java.lang.Class) -> b
    org.holoeverywhere.addon.IAddonActivity addon(java.lang.String) -> c
    org.holoeverywhere.addon.AddonSherlock$AddonSherlockA addonSherlock() -> j
    void closeOptionsMenu() -> closeOptionsMenu
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    android.view.View findViewById(int) -> findViewById
    android.os.Bundle instanceState(android.os.Bundle) -> d
    java.util.List obtainAddonsList() -> d_
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onContentChanged() -> onContentChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    void onDestroy() -> onDestroy
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onNewIntent(android.content.Intent) -> onNewIntent
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onPostResume() -> onPostResume
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> b
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    void openOptionsMenu() -> openOptionsMenu
    boolean performAddonAction(org.holoeverywhere.addon.IAddonAttacher$AddonCallback) -> a
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> a
    void supportInvalidateOptionsMenu() -> c
    void access$001(org.holoeverywhere.app.Activity) -> a
    boolean access$101(org.holoeverywhere.app.Activity,android.view.KeyEvent) -> a
    boolean access$201(org.holoeverywhere.app.Activity,int,android.view.Menu) -> a
    boolean access$301(org.holoeverywhere.app.Activity,int,android.view.KeyEvent) -> a
    boolean access$401(org.holoeverywhere.app.Activity,int,android.view.MenuItem) -> a
    boolean access$501(org.holoeverywhere.app.Activity,int,android.view.Menu) -> b
    boolean access$601(org.holoeverywhere.app.Activity,int,android.view.View,android.view.Menu) -> a
    void access$701(org.holoeverywhere.app.Activity) -> b
    void access$801(org.holoeverywhere.app.Activity) -> c
org.holoeverywhere.app.Activity$1 -> org.holoeverywhere.b.b:
    android.view.View val$view -> b
    android.view.ViewGroup$LayoutParams val$params -> c
    org.holoeverywhere.app.Activity this$0 -> d
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    void justPost() -> a
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$10 -> org.holoeverywhere.b.c:
    int val$featureId -> b
    android.view.Menu val$menu -> c
    org.holoeverywhere.app.Activity this$0 -> d
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    boolean post() -> b
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$11 -> org.holoeverywhere.b.d:
    org.holoeverywhere.app.Activity this$0 -> b
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$12 -> org.holoeverywhere.b.e:
    int val$keyCode -> b
    android.view.KeyEvent val$event -> c
    org.holoeverywhere.app.Activity this$0 -> d
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    boolean post() -> b
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$13 -> org.holoeverywhere.b.f:
    int val$featureId -> b
    android.view.MenuItem val$item -> c
    org.holoeverywhere.app.Activity this$0 -> d
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    boolean post() -> b
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$14 -> org.holoeverywhere.b.g:
    int val$featureId -> b
    android.view.Menu val$menu -> c
    org.holoeverywhere.app.Activity this$0 -> d
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    boolean post() -> b
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$15 -> org.holoeverywhere.b.h:
    android.content.Intent val$intent -> b
    org.holoeverywhere.app.Activity this$0 -> c
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$16 -> org.holoeverywhere.b.i:
    int val$featureId -> b
    android.view.Menu val$menu -> c
    org.holoeverywhere.app.Activity this$0 -> d
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$17 -> org.holoeverywhere.b.j:
    org.holoeverywhere.app.Activity this$0 -> b
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$18 -> org.holoeverywhere.b.k:
    android.os.Bundle val$savedInstanceState -> b
    org.holoeverywhere.app.Activity this$0 -> c
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$19 -> org.holoeverywhere.b.l:
    org.holoeverywhere.app.Activity this$0 -> b
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$2 -> org.holoeverywhere.b.m:
    org.holoeverywhere.app.Activity this$0 -> b
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    void justPost() -> a
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$20 -> org.holoeverywhere.b.n:
    int val$featureId -> b
    android.view.View val$view -> c
    android.view.Menu val$menu -> d
    org.holoeverywhere.app.Activity this$0 -> e
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    boolean post() -> b
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$21 -> org.holoeverywhere.b.o:
    org.holoeverywhere.app.Activity this$0 -> b
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$22 -> org.holoeverywhere.b.p:
    org.holoeverywhere.app.Activity this$0 -> b
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$23 -> org.holoeverywhere.b.q:
    android.os.Bundle val$outState -> b
    org.holoeverywhere.app.Activity this$0 -> c
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$24 -> org.holoeverywhere.b.r:
    org.holoeverywhere.app.Activity this$0 -> b
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$25 -> org.holoeverywhere.b.s:
    org.holoeverywhere.app.Activity this$0 -> b
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$26 -> org.holoeverywhere.b.t:
    java.lang.CharSequence val$title -> b
    int val$color -> c
    org.holoeverywhere.app.Activity this$0 -> d
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$27 -> org.holoeverywhere.b.u:
    org.holoeverywhere.app.Activity this$0 -> b
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    void justPost() -> a
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$29 -> org.holoeverywhere.b.v:
    android.view.View val$view -> b
    android.view.ViewGroup$LayoutParams val$params -> c
    org.holoeverywhere.app.Activity this$0 -> d
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    void justPost() -> a
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$3 -> org.holoeverywhere.b.w:
    android.view.KeyEvent val$event -> b
    org.holoeverywhere.app.Activity this$0 -> c
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    boolean post() -> b
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$30 -> org.holoeverywhere.b.x:
    org.holoeverywhere.app.Activity this$0 -> b
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    void justPost() -> a
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$4 -> org.holoeverywhere.b.y:
    int val$id -> b
    java.util.concurrent.atomic.AtomicReference val$ref -> c
    org.holoeverywhere.app.Activity this$0 -> d
    boolean action(org.holoeverywhere.addon.IAddonActivity) -> a
    boolean action(java.lang.Object) -> a
org.holoeverywhere.app.Activity$5 -> org.holoeverywhere.b.z:
    int val$requestCode -> b
    int val$resultCode -> c
    android.content.Intent val$data -> d
    org.holoeverywhere.app.Activity this$0 -> e
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$6 -> org.holoeverywhere.b.aa:
    android.content.res.Configuration val$oldConfig -> b
    android.content.res.Configuration val$newConfig -> c
    org.holoeverywhere.app.Activity this$0 -> d
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$7 -> org.holoeverywhere.b.ab:
    org.holoeverywhere.app.Activity this$0 -> b
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$8 -> org.holoeverywhere.b.ac:
    android.os.Bundle val$state -> b
    org.holoeverywhere.app.Activity this$0 -> c
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Activity$9 -> org.holoeverywhere.b.ad:
    android.os.Bundle val$state -> b
    org.holoeverywhere.app.Activity this$0 -> c
    void justAction(org.holoeverywhere.addon.IAddonActivity) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.AlertDialog -> org.holoeverywhere.b.ae:
    org.holoeverywhere.internal.AlertController mAlert -> a
    int resolveDialogTheme(android.content.Context,int) -> a
    void installDecorView(android.content.Context,int) -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void setTitle(java.lang.CharSequence) -> setTitle
    org.holoeverywhere.internal.AlertController access$000(org.holoeverywhere.app.AlertDialog) -> a
org.holoeverywhere.app.AlertDialog$Builder -> org.holoeverywhere.b.af:
    java.lang.Class[] CONSTRUCTOR_SIGNATURE -> a
    java.lang.Class mDialogClass -> b
    org.holoeverywhere.internal.AlertController$AlertParams P -> c
    org.holoeverywhere.app.AlertDialog create() -> a
    android.content.Context getContext() -> b
    org.holoeverywhere.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> a
    org.holoeverywhere.app.AlertDialog$Builder setCustomTitle(android.view.View) -> a
    org.holoeverywhere.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> a
    org.holoeverywhere.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> a
    org.holoeverywhere.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> a
org.holoeverywhere.app.Application -> org.holoeverywhere.b.ag:
    java.util.List sInitialAddons -> a
    org.holoeverywhere.app.Application sLastInstance -> b
    org.holoeverywhere.addon.IAddonAttacher mAttacher -> c
    org.holoeverywhere.addon.IAddonApplication addon(java.lang.Class) -> b
    void addon(java.util.List) -> a
    org.holoeverywhere.addon.IAddonApplication addon(java.lang.String) -> c
    org.holoeverywhere.preference.SharedPreferences getSharedPreferences(java.lang.String,int) -> a
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    void lockAttaching() -> c_
    java.util.List obtainAddonsList() -> d_
    void onCreate() -> onCreate
    boolean performAddonAction(org.holoeverywhere.addon.IAddonAttacher$AddonCallback) -> a
    void startActivities(android.content.Intent[]) -> startActivities
    void startActivities(android.content.Intent[],android.os.Bundle) -> startActivities
    void startActivity(android.content.Intent) -> startActivity
    void startActivity(android.content.Intent,android.os.Bundle) -> startActivity
    java.lang.Object superGetSystemService(java.lang.String) -> a_
    void superStartActivity(android.content.Intent,int,android.os.Bundle) -> a
    android.content.SharedPreferences getSharedPreferences(java.lang.String,int) -> getSharedPreferences
    org.holoeverywhere.addon.IAddonBase addon(java.lang.String) -> b
    org.holoeverywhere.addon.IAddonBase addon(java.lang.Class) -> a
org.holoeverywhere.app.Application$1 -> org.holoeverywhere.b.ah:
    org.holoeverywhere.app.Application this$0 -> b
    void justAction(org.holoeverywhere.addon.IAddonApplication) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Application$2 -> org.holoeverywhere.b.ai:
    org.holoeverywhere.app.Application this$0 -> b
    void justAction(org.holoeverywhere.addon.IAddonApplication) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.ContextThemeWrapperPlus -> org.holoeverywhere.b.aj:
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    java.lang.Object superGetSystemService(java.lang.String) -> a_
org.holoeverywhere.app.Dialog -> org.holoeverywhere.b.ak:
    java.util.Map mContextMenuListeners -> a
    int checkTheme(android.content.Context,int) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    com.actionbarsherlock.internal.view.menu.ContextMenuListener getContextMenuListener(android.view.View) -> a
    org.holoeverywhere.LayoutInflater getLayoutInflater() -> a
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    boolean onContextItemSelected(com.actionbarsherlock.view.MenuItem) -> b
    void onContextMenuClosed(com.actionbarsherlock.view.ContextMenu) -> a
    void onContextMenuClosed(android.view.Menu) -> onContextMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void onCreateContextMenu(com.actionbarsherlock.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> a
    android.view.View prepareDecorView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void registerForContextMenu(android.view.View,com.actionbarsherlock.internal.view.menu.ContextMenuListener) -> a
    void setCancelable(boolean) -> setCancelable
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
org.holoeverywhere.app.Fragment -> org.holoeverywhere.b.al:
    org.holoeverywhere.addon.IAddonBasicAttacher mAttacher -> P
    org.holoeverywhere.LayoutInflater mLayoutInflater -> Q
    org.holoeverywhere.addon.IAddonFragment addon(java.lang.Class) -> b
    void addon(java.util.List) -> a
    org.holoeverywhere.addon.IAddonFragment addon(java.lang.String) -> a
    org.holoeverywhere.LayoutInflater getLayoutInflater() -> x
    void lockAttaching() -> c_
    java.util.List obtainAddonsList() -> d_
    void onAttach(org.holoeverywhere.app.Activity) -> a
    void onCreate(android.os.Bundle) -> c
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    boolean performAddonAction(org.holoeverywhere.addon.IAddonAttacher$AddonCallback) -> a
    org.holoeverywhere.addon.IAddonBase addon(java.lang.String) -> b
    org.holoeverywhere.addon.IAddonBase addon(java.lang.Class) -> a
org.holoeverywhere.app.Fragment$1 -> org.holoeverywhere.b.am:
    android.os.Bundle val$savedInstanceState -> b
    org.holoeverywhere.app.Fragment this$0 -> c
    void justAction(org.holoeverywhere.addon.IAddonFragment) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Fragment$2 -> org.holoeverywhere.b.an:
    android.os.Bundle val$savedInstanceState -> b
    org.holoeverywhere.app.Fragment this$0 -> c
    void justAction(org.holoeverywhere.addon.IAddonFragment) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.app.Fragment$3 -> org.holoeverywhere.b.ao:
    android.view.View val$view -> b
    android.os.Bundle val$savedInstanceState -> c
    org.holoeverywhere.app.Fragment this$0 -> d
    void justAction(org.holoeverywhere.addon.IAddonFragment) -> a
    void justAction(java.lang.Object) -> b
org.holoeverywhere.drawable.ColorDrawable -> org.holoeverywhere.c.a:
    android.graphics.Paint mPaint -> a
    org.holoeverywhere.drawable.ColorDrawable$ColorState mState -> b
    void draw(android.graphics.Canvas) -> draw
    int getAlpha() -> getAlpha
    int getChangingConfigurations() -> getChangingConfigurations
    int getColor() -> getColor
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    int getOpacity() -> getOpacity
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    void setAlpha(int) -> setAlpha
    void setColor(int) -> setColor
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
org.holoeverywhere.drawable.ColorDrawable$1 -> org.holoeverywhere.c.b:
org.holoeverywhere.drawable.ColorDrawable$ColorState -> org.holoeverywhere.c.c:
    int mBaseColor -> a
    int mChangingConfigurations -> b
    int mUseColor -> c
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
org.holoeverywhere.drawable.DrawableCompat -> org.holoeverywhere.c.d:
    java.util.Map CLASS_MAP -> a
    org.holoeverywhere.util.LongSparseArray sDrawableCache -> b
    android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory$Options) -> a
    android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser) -> a
    android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> a
    android.graphics.drawable.Drawable getCachedDrawable(long,android.content.res.Resources) -> a
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int) -> a
    android.graphics.drawable.Drawable loadDrawable(android.content.res.Resources,android.util.TypedValue) -> a
org.holoeverywhere.drawable.DrawableContainer -> org.holoeverywhere.c.e:
    int mAlpha -> a
    java.lang.Runnable mAnimationRunnable -> b
    android.graphics.ColorFilter mColorFilter -> c
    int mCurIndex -> d
    android.graphics.drawable.Drawable mCurrDrawable -> e
    org.holoeverywhere.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState -> f
    long mEnterAnimationEnd -> g
    long mExitAnimationEnd -> h
    android.graphics.drawable.Drawable mLastDrawable -> i
    boolean mMutated -> j
    void animate(boolean) -> a
    void draw(android.graphics.Canvas) -> draw
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getMinimumHeight() -> getMinimumHeight
    int getMinimumWidth() -> getMinimumWidth
    int getOpacity() -> getOpacity
    boolean getPadding(android.graphics.Rect) -> getPadding
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    boolean isStateful() -> isStateful
    void jumpToCurrentState() -> jumpToCurrentState
    android.graphics.drawable.Drawable mutate() -> mutate
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean onLevelChange(int) -> onLevelChange
    boolean onStateChange(int[]) -> onStateChange
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    boolean selectDrawable(int) -> a
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setConstantState(org.holoeverywhere.drawable.DrawableContainer$DrawableContainerState) -> a
    void setDither(boolean) -> setDither
    boolean setVisible(boolean,boolean) -> setVisible
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
org.holoeverywhere.drawable.DrawableContainer$1 -> org.holoeverywhere.c.f:
    org.holoeverywhere.drawable.DrawableContainer this$0 -> a
    void run() -> run
org.holoeverywhere.drawable.DrawableContainer$DrawableContainerState -> org.holoeverywhere.c.g:
    boolean mCanConstantState -> a
    int mChangingConfigurations -> b
    boolean mCheckedConstantState -> c
    int mChildrenChangingConfigurations -> d
    boolean mComputedConstantSize -> e
    int mConstantHeight -> f
    int mConstantMinimumHeight -> g
    int mConstantMinimumWidth -> h
    android.graphics.Rect mConstantPadding -> i
    boolean mConstantSize -> j
    int mConstantWidth -> k
    boolean mDither -> l
    android.graphics.drawable.Drawable[] mDrawables -> m
    int mEnterFadeDuration -> n
    int mExitFadeDuration -> o
    boolean mHaveOpacity -> p
    boolean mHaveStateful -> q
    int mNumChildren -> r
    int mOpacity -> s
    org.holoeverywhere.drawable.DrawableContainer mOwner -> t
    boolean mPaddingChecked -> u
    boolean mStateful -> v
    boolean mVariablePadding -> w
    int addChild(android.graphics.drawable.Drawable) -> a
    boolean canConstantState() -> a
    void computeConstantSize() -> b
    int getChangingConfigurations() -> getChangingConfigurations
    int getChildCount() -> c
    android.graphics.drawable.Drawable[] getChildren() -> d
    int getConstantHeight() -> e
    int getConstantMinimumHeight() -> f
    int getConstantMinimumWidth() -> g
    android.graphics.Rect getConstantPadding() -> h
    int getConstantWidth() -> i
    int getOpacity() -> j
    void growArray(int,int) -> a
    boolean isConstantSize() -> k
    boolean isStateful() -> l
    void setConstantSize(boolean) -> a
    void setEnterFadeDuration(int) -> a
    void setExitFadeDuration(int) -> b
    void setVariablePadding(boolean) -> b
org.holoeverywhere.drawable.LayerDrawable -> org.holoeverywhere.c.h:
    org.holoeverywhere.drawable.LayerDrawable$LayerState mLayerState -> a
    boolean mMutated -> b
    int mOpacityOverride -> c
    int[] mPaddingB -> d
    int[] mPaddingL -> e
    int[] mPaddingR -> f
    int[] mPaddingT -> g
    android.graphics.Rect mTmpRect -> h
    void addLayer(android.graphics.drawable.Drawable,int,int,int,int,int) -> a
    org.holoeverywhere.drawable.LayerDrawable$LayerState createConstantState(org.holoeverywhere.drawable.LayerDrawable$LayerState,android.content.res.Resources) -> a
    void draw(android.graphics.Canvas) -> draw
    void ensurePadding() -> a
    android.graphics.drawable.Drawable$Callback getCallback() -> getCallback
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getOpacity() -> getOpacity
    boolean getPadding(android.graphics.Rect) -> getPadding
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    boolean isStateful() -> isStateful
    android.graphics.drawable.Drawable mutate() -> mutate
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean onLevelChange(int) -> onLevelChange
    boolean onStateChange(int[]) -> onStateChange
    boolean reapplyPadding(int,org.holoeverywhere.drawable.LayerDrawable$ChildDrawable) -> a
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setDither(boolean) -> setDither
    boolean setVisible(boolean,boolean) -> setVisible
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
org.holoeverywhere.drawable.LayerDrawable$ChildDrawable -> org.holoeverywhere.c.i:
    android.graphics.drawable.Drawable mDrawable -> a
    int mId -> b
    int mInsetL -> c
    int mInsetT -> d
    int mInsetR -> e
    int mInsetB -> f
org.holoeverywhere.drawable.LayerDrawable$LayerState -> org.holoeverywhere.c.j:
    boolean mCanConstantState -> e
    int mChangingConfigurations -> a
    boolean mCheckedConstantState -> f
    org.holoeverywhere.drawable.LayerDrawable$ChildDrawable[] mChildren -> b
    int mChildrenChangingConfigurations -> c
    boolean mHaveOpacity -> g
    boolean mHaveStateful -> h
    int mNum -> d
    int mOpacity -> i
    boolean mStateful -> j
    boolean canConstantState() -> a
    int getChangingConfigurations() -> getChangingConfigurations
    int getOpacity() -> b
    boolean isStateful() -> c
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
org.holoeverywhere.drawable.RotateDrawable -> org.holoeverywhere.c.k:
    boolean mMutated -> a
    org.holoeverywhere.drawable.RotateDrawable$RotateState mState -> b
    void draw(android.graphics.Canvas) -> draw
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getOpacity() -> getOpacity
    boolean getPadding(android.graphics.Rect) -> getPadding
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    boolean isStateful() -> isStateful
    android.graphics.drawable.Drawable mutate() -> mutate
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean onLevelChange(int) -> onLevelChange
    boolean onStateChange(int[]) -> onStateChange
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean setVisible(boolean,boolean) -> setVisible
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
org.holoeverywhere.drawable.RotateDrawable$1 -> org.holoeverywhere.c.l:
org.holoeverywhere.drawable.RotateDrawable$RotateState -> org.holoeverywhere.c.m:
    boolean mCanConstantState -> j
    int mChangingConfigurations -> a
    boolean mCheckedConstantState -> k
    float mCurrentDegrees -> b
    android.graphics.drawable.Drawable mDrawable -> c
    float mFromDegrees -> d
    float mPivotX -> e
    boolean mPivotXRel -> f
    float mPivotY -> g
    boolean mPivotYRel -> h
    float mToDegrees -> i
    boolean canConstantState() -> a
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
org.holoeverywhere.drawable.StateListDrawable -> org.holoeverywhere.c.n:
    boolean mMutated -> a
    org.holoeverywhere.drawable.StateListDrawable$StateListState mStateListState -> b
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    boolean isStateful() -> isStateful
    android.graphics.drawable.Drawable mutate() -> mutate
    boolean onStateChange(int[]) -> onStateChange
org.holoeverywhere.drawable.StateListDrawable$1 -> org.holoeverywhere.c.o:
org.holoeverywhere.drawable.StateListDrawable$StateListState -> org.holoeverywhere.c.p:
    int[][] mStateSets -> x
    int addStateSet(int[],android.graphics.drawable.Drawable) -> a
    void growArray(int,int) -> a
    int indexOfStateSet(int[]) -> a
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    int access$100(org.holoeverywhere.drawable.StateListDrawable$StateListState,int[]) -> a
org.holoeverywhere.internal.AlertController -> org.holoeverywhere.d.a:
    android.widget.ListAdapter mAdapter -> a
    int mAlertDialogLayout -> b
    int mButtonBehavior -> c
    android.view.View$OnClickListener mButtonHandler -> d
    org.holoeverywhere.widget.Button mButtonNegative -> e
    android.os.Message mButtonNegativeMessage -> f
    java.lang.CharSequence mButtonNegativeText -> g
    org.holoeverywhere.widget.Button mButtonNeutral -> h
    android.os.Message mButtonNeutralMessage -> i
    java.lang.CharSequence mButtonNeutralText -> j
    org.holoeverywhere.widget.Button mButtonPositive -> k
    android.os.Message mButtonPositiveMessage -> l
    java.lang.CharSequence mButtonPositiveText -> m
    int mCheckedItem -> n
    android.content.Context mContext -> o
    android.view.View mCustomTitleView -> p
    org.holoeverywhere.internal.AlertController$AlertDecorViewInstaller mDecorViewInstaller -> q
    android.content.DialogInterface mDialogInterface -> r
    boolean mForceInverseBackground -> s
    android.os.Handler mHandler -> t
    android.graphics.drawable.Drawable mIcon -> u
    int mIconId -> v
    android.widget.ImageView mIconView -> w
    int mListItemLayout -> x
    int mListLayout -> y
    org.holoeverywhere.widget.ListView mListView -> z
    java.lang.CharSequence mMessage -> A
    org.holoeverywhere.widget.TextView mMessageView -> B
    int mMultiChoiceItemLayout -> C
    android.widget.ScrollView mScrollView -> D
    int mSingleChoiceItemLayout -> E
    java.lang.CharSequence mTitle -> F
    org.holoeverywhere.widget.TextView mTitleView -> G
    android.view.View mView -> H
    int mViewSpacingBottom -> I
    int mViewSpacingLeft -> J
    int mViewSpacingRight -> K
    boolean mViewSpacingSpecified -> L
    int mViewSpacingTop -> M
    android.view.Window mWindow -> N
    boolean canTextInput(android.view.View) -> a
    boolean shouldCenterSingleButton(android.content.Context) -> a
    void centerButton(org.holoeverywhere.widget.Button) -> a
    void installContent() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> b
    void setBackground(org.holoeverywhere.widget.LinearLayout,org.holoeverywhere.widget.LinearLayout,android.view.View,boolean,android.content.res.TypedArray,boolean,android.view.View) -> a
    void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message) -> a
    void setButtonBehavior(int) -> a
    void setCustomTitle(android.view.View) -> b
    void setIcon(android.graphics.drawable.Drawable) -> a
    void setIcon(int) -> b
    void setInverseBackgroundForced(boolean) -> a
    void setMessage(java.lang.CharSequence) -> a
    void setTitle(java.lang.CharSequence) -> b
    boolean setupButtons() -> b
    void setupContent(org.holoeverywhere.widget.LinearLayout) -> a
    boolean setupTitle(org.holoeverywhere.widget.LinearLayout) -> b
    void setupView() -> c
    void setView(android.view.View) -> c
    void setView(android.view.View,int,int,int,int) -> a
    int access$000(org.holoeverywhere.internal.AlertController) -> a
    int access$100(org.holoeverywhere.internal.AlertController) -> b
    int access$200(org.holoeverywhere.internal.AlertController) -> c
    int access$300(org.holoeverywhere.internal.AlertController) -> d
    android.widget.ListAdapter access$402(org.holoeverywhere.internal.AlertController,android.widget.ListAdapter) -> a
    int access$502(org.holoeverywhere.internal.AlertController,int) -> a
    android.content.DialogInterface access$600(org.holoeverywhere.internal.AlertController) -> e
    org.holoeverywhere.widget.ListView access$702(org.holoeverywhere.internal.AlertController,org.holoeverywhere.widget.ListView) -> a
    int access$800(org.holoeverywhere.internal.AlertController) -> f
    org.holoeverywhere.widget.Button access$900(org.holoeverywhere.internal.AlertController) -> g
    org.holoeverywhere.widget.Button access$1000(org.holoeverywhere.internal.AlertController) -> h
    org.holoeverywhere.widget.Button access$1100(org.holoeverywhere.internal.AlertController) -> i
    android.os.Message access$1200(org.holoeverywhere.internal.AlertController) -> j
    android.os.Message access$1300(org.holoeverywhere.internal.AlertController) -> k
    android.os.Message access$1400(org.holoeverywhere.internal.AlertController) -> l
    android.os.Handler access$1500(org.holoeverywhere.internal.AlertController) -> m
org.holoeverywhere.internal.AlertController$1 -> org.holoeverywhere.d.b:
    org.holoeverywhere.internal.AlertController this$0 -> a
    boolean needToDismiss(int) -> a
    void onClick(android.view.View) -> onClick
    void send(android.os.Message) -> a
org.holoeverywhere.internal.AlertController$AlertDecorViewInstaller -> org.holoeverywhere.d.c:
    void installDecorView(android.content.Context,int) -> b
org.holoeverywhere.internal.AlertController$AlertParams -> org.holoeverywhere.d.d:
    android.widget.ListAdapter mAdapter -> a
    int mButtonBehavior -> b
    boolean mCancelable -> c
    int mCheckedItem -> d
    boolean[] mCheckedItems -> e
    android.content.Context mContext -> f
    android.database.Cursor mCursor -> g
    android.view.View mCustomTitleView -> h
    boolean mForceInverseBackground -> i
    android.graphics.drawable.Drawable mIcon -> j
    int mIconId -> k
    org.holoeverywhere.LayoutInflater mInflater -> l
    java.lang.String mIsCheckedColumn -> m
    boolean mIsMultiChoice -> n
    boolean mIsSingleChoice -> o
    java.lang.CharSequence[] mItems -> p
    java.lang.String mLabelColumn -> q
    java.lang.CharSequence mMessage -> r
    android.content.DialogInterface$OnClickListener mNegativeButtonListener -> s
    java.lang.CharSequence mNegativeButtonText -> t
    android.content.DialogInterface$OnClickListener mNeutralButtonListener -> u
    java.lang.CharSequence mNeutralButtonText -> v
    android.content.DialogInterface$OnCancelListener mOnCancelListener -> w
    android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener -> x
    android.content.DialogInterface$OnClickListener mOnClickListener -> y
    android.content.DialogInterface$OnDismissListener mOnDismissListener -> z
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> A
    android.content.DialogInterface$OnKeyListener mOnKeyListener -> B
    org.holoeverywhere.internal.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener -> C
    android.content.DialogInterface$OnClickListener mPositiveButtonListener -> D
    java.lang.CharSequence mPositiveButtonText -> E
    int mTheme -> F
    java.lang.CharSequence mTitle -> G
    android.view.View mView -> H
    int mViewSpacingBottom -> I
    int mViewSpacingLeft -> J
    int mViewSpacingRight -> K
    boolean mViewSpacingSpecified -> L
    int mViewSpacingTop -> M
    void apply(org.holoeverywhere.internal.AlertController) -> a
    void createListView(org.holoeverywhere.internal.AlertController) -> b
org.holoeverywhere.internal.AlertController$AlertParams$1 -> org.holoeverywhere.d.e:
    org.holoeverywhere.widget.ListView val$listView -> a
    org.holoeverywhere.internal.AlertController$AlertParams this$0 -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.holoeverywhere.internal.AlertController$AlertParams$2 -> org.holoeverywhere.d.f:
    int mIsCheckedIndex -> m
    int mLabelIndex -> n
    org.holoeverywhere.widget.ListView val$listView -> j
    org.holoeverywhere.internal.AlertController val$dialog -> k
    org.holoeverywhere.internal.AlertController$AlertParams this$0 -> l
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
org.holoeverywhere.internal.AlertController$AlertParams$3 -> org.holoeverywhere.d.g:
    org.holoeverywhere.internal.AlertController val$dialog -> a
    org.holoeverywhere.internal.AlertController$AlertParams this$0 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.holoeverywhere.internal.AlertController$AlertParams$4 -> org.holoeverywhere.d.h:
    org.holoeverywhere.widget.ListView val$listView -> a
    org.holoeverywhere.internal.AlertController val$dialog -> b
    org.holoeverywhere.internal.AlertController$AlertParams this$0 -> c
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.holoeverywhere.internal.AlertController$AlertParams$OnPrepareListViewListener -> org.holoeverywhere.d.i:
    void onPrepareListView(org.holoeverywhere.widget.ListView) -> a
org.holoeverywhere.internal.AlertController$ButtonHandler -> org.holoeverywhere.d.j:
    java.lang.ref.WeakReference mDialog -> a
    void handleMessage(android.os.Message) -> handleMessage
org.holoeverywhere.internal.DialogTitle -> org.holoeverywhere.d.k:
    void onMeasure(int,int) -> onMeasure
org.holoeverywhere.internal.NumberPickerEditText -> org.holoeverywhere.d.l:
    void onEditorAction(int) -> onEditorAction
org.holoeverywhere.internal.WindowDecorView -> org.holoeverywhere.d.m:
    android.util.TypedValue mFixedHeightMajor -> a
    android.util.TypedValue mFixedHeightMinor -> b
    android.util.TypedValue mFixedWidthMajor -> c
    android.util.TypedValue mFixedWidthMinor -> d
    android.util.TypedValue mMinHeightMajor -> e
    android.util.TypedValue mMinHeightMinor -> f
    android.util.TypedValue mMinWidthMajor -> g
    android.util.TypedValue mMinWidthMinor -> h
    org.holoeverywhere.internal.WindowDecorView inflateDecorView(org.holoeverywhere.LayoutInflater,int) -> a
    void onMeasure(int,int) -> onMeasure
org.holoeverywhere.internal._View -> org.holoeverywhere.d.n:
    int[] PRESSED_STATE_SET -> a
    int[] SUPPORT_EMPTY_STATE_SET -> b
    int[] SUPPORT_WINDOW_FOCUSED_STATE_SET -> c
    int[] SUPPORT_SELECTED_STATE_SET -> d
    int[] SUPPORT_SELECTED_WINDOW_FOCUSED_STATE_SET -> e
    int[] SUPPORT_FOCUSED_STATE_SET -> f
    int[] SUPPORT_FOCUSED_WINDOW_FOCUSED_STATE_SET -> g
    int[] SUPPORT_FOCUSED_SELECTED_STATE_SET -> h
    int[] SUPPORT_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET -> i
    int[] SUPPORT_ENABLED_STATE_SET -> j
    int[] SUPPORT_ENABLED_WINDOW_FOCUSED_STATE_SET -> k
    int[] SUPPORT_ENABLED_SELECTED_STATE_SET -> l
    int[] SUPPORT_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET -> m
    int[] SUPPORT_ENABLED_FOCUSED_STATE_SET -> n
    int[] SUPPORT_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET -> o
    int[] SUPPORT_ENABLED_FOCUSED_SELECTED_STATE_SET -> p
    int[] SUPPORT_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET -> q
    int[] SUPPORT_PRESSED_WINDOW_FOCUSED_STATE_SET -> r
    int[] SUPPORT_PRESSED_STATE_SET -> s
    int[] SUPPORT_PRESSED_SELECTED_STATE_SET -> t
    int[] SUPPORT_PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET -> u
    int[] SUPPORT_PRESSED_FOCUSED_STATE_SET -> v
    int[] SUPPORT_PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET -> w
    int[] SUPPORT_PRESSED_FOCUSED_SELECTED_STATE_SET -> x
    int[] SUPPORT_PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET -> y
    int[] SUPPORT_PRESSED_ENABLED_STATE_SET -> z
    int[] SUPPORT_PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET -> A
    int[] SUPPORT_PRESSED_ENABLED_SELECTED_STATE_SET -> B
    int[] SUPPORT_PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET -> C
    int[] SUPPORT_PRESSED_ENABLED_FOCUSED_STATE_SET -> D
    int[] SUPPORT_PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET -> E
    int[] SUPPORT_PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET -> F
    int[] SUPPORT_PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET -> G
    int[][] VIEW_STATE_SETS -> I
    int[] ViewDrawableStates -> J
    int[] Z_VIEW_STATE_IDS -> H
    int supportResolveSizeAndState(int,int,int) -> a
    int getMeasuredStateInt() -> getMeasuredStateInt
org.holoeverywhere.internal._ViewGroup -> org.holoeverywhere.d.o:
    boolean isAccessibilityManagerEnabled(android.content.Context) -> a
    boolean isAccessibilityManagerEnabled() -> a
org.holoeverywhere.preference.PreferenceManagerHelper -> org.holoeverywhere.e.a:
    org.holoeverywhere.preference.PreferenceManagerHelper$PreferenceManagerImpl IMPL -> a
    void checkImpl() -> b
    int obtainThemeTag() -> a
    org.holoeverywhere.preference.SharedPreferences wrap(android.content.Context,org.holoeverywhere.HoloEverywhere$PreferenceImpl,java.lang.String,int) -> a
    org.holoeverywhere.preference.SharedPreferences wrap(android.content.Context,java.lang.String,int) -> a
org.holoeverywhere.preference.PreferenceManagerHelper$PreferenceManagerImpl -> org.holoeverywhere.e.b:
    int obtainThemeTag() -> a
    org.holoeverywhere.preference.SharedPreferences wrap(android.content.Context,org.holoeverywhere.HoloEverywhere$PreferenceImpl,java.lang.String,int) -> a
org.holoeverywhere.preference.SharedPreferences -> org.holoeverywhere.e.c:
org.holoeverywhere.util.ArrayUtils -> org.holoeverywhere.util.a:
    java.lang.Object[] EMPTY -> a
    java.lang.Object[] sCache -> b
    int idealByteArraySize(int) -> a
    int idealIntArraySize(int) -> b
    int idealLongArraySize(int) -> c
org.holoeverywhere.util.Arrays -> org.holoeverywhere.util.b:
    java.lang.Object[] copyOfRange(java.lang.Object[],int,int) -> a
    java.lang.Object[] copyOfRange(java.lang.Object[],int,int,java.lang.Class) -> a
org.holoeverywhere.util.FinitePool -> org.holoeverywhere.util.c:
    boolean mInfinite -> a
    int mLimit -> b
    org.holoeverywhere.util.PoolableManager mManager -> c
    int mPoolCount -> d
    org.holoeverywhere.util.Poolable mRoot -> e
    org.holoeverywhere.util.Poolable acquire() -> a
    void release(org.holoeverywhere.util.Poolable) -> a
org.holoeverywhere.util.LongSparseArray -> org.holoeverywhere.util.d:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    long[] mKeys -> c
    int mSize -> d
    java.lang.Object[] mValues -> e
    int binarySearch(long[],int,int,long) -> a
    void clear() -> a
    org.holoeverywhere.util.LongSparseArray clone() -> b
    void delete(long) -> a
    void gc() -> d
    java.lang.Object get(long) -> b
    java.lang.Object get(long,java.lang.Object) -> a
    long keyAt(int) -> a
    void put(long,java.lang.Object) -> b
    int size() -> c
    java.lang.Object valueAt(int) -> b
    java.lang.Object clone() -> clone
org.holoeverywhere.util.Pool -> org.holoeverywhere.util.e:
    org.holoeverywhere.util.Poolable acquire() -> a
    void release(org.holoeverywhere.util.Poolable) -> a
org.holoeverywhere.util.Poolable -> org.holoeverywhere.util.f:
    java.lang.Object getNextPoolable() -> a
    boolean isPooled() -> b
    void setNextPoolable(java.lang.Object) -> a
    void setPooled(boolean) -> a
org.holoeverywhere.util.PoolableManager -> org.holoeverywhere.util.g:
    org.holoeverywhere.util.Poolable newInstance() -> a
    void onAcquired(org.holoeverywhere.util.Poolable) -> a
    void onReleased(org.holoeverywhere.util.Poolable) -> b
org.holoeverywhere.util.Pools -> org.holoeverywhere.util.h:
    org.holoeverywhere.util.Pool finitePool(org.holoeverywhere.util.PoolableManager,int) -> a
    org.holoeverywhere.util.Pool synchronizedPool(org.holoeverywhere.util.Pool) -> a
org.holoeverywhere.util.ReflectHelper -> org.holoeverywhere.util.i:
    java.lang.Class[] classess(java.lang.Object[]) -> a
    java.lang.Object invoke(java.lang.Object,java.lang.String,java.lang.Class,boolean,java.lang.Object[]) -> a
    java.lang.Object invoke(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Object[]) -> a
org.holoeverywhere.util.SparseIntArray -> org.holoeverywhere.util.SparseIntArray:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int[] mKeys -> a
    int mSize -> b
    int[] mValues -> c
    int binarySearch(int[],int,int,int) -> a
    org.holoeverywhere.util.SparseIntArray clone() -> a
    int describeContents() -> describeContents
    int keyAt(int) -> a
    void put(int,int) -> a
    int size() -> b
    int valueAt(int) -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object clone() -> clone
    int access$002(org.holoeverywhere.util.SparseIntArray,int) -> a
    int[] access$102(org.holoeverywhere.util.SparseIntArray,int[]) -> a
    int[] access$202(org.holoeverywhere.util.SparseIntArray,int[]) -> b
org.holoeverywhere.util.SparseIntArray$1 -> org.holoeverywhere.util.j:
    org.holoeverywhere.util.SparseIntArray createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.util.SparseIntArray[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.util.SynchronizedPool -> org.holoeverywhere.util.k:
    java.lang.Object mLock -> a
    org.holoeverywhere.util.Pool mPool -> b
    org.holoeverywhere.util.Poolable acquire() -> a
    void release(org.holoeverywhere.util.Poolable) -> a
org.holoeverywhere.widget.AbsSpinner -> org.holoeverywhere.widget.AbsSpinner:
    android.widget.SpinnerAdapter mAdapter -> a
    android.database.DataSetObserver mDataSetObserver -> E
    int mHeightMeasureSpec -> b
    org.holoeverywhere.widget.AbsSpinner$RecycleBin mRecycler -> c
    int mSelectionBottomPadding -> d
    int mSelectionLeftPadding -> e
    int mSelectionRightPadding -> f
    int mSelectionTopPadding -> g
    android.graphics.Rect mSpinnerPadding -> h
    int mWidthMeasureSpec -> i
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.SpinnerAdapter getAdapter() -> getAdapter
    int getChildHeight(android.view.View) -> a
    int getChildWidth(android.view.View) -> b
    int getCount() -> getCount
    android.view.View getSelectedView() -> getSelectedView
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void requestLayout() -> requestLayout
    void resetList() -> b
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void setSelection(int) -> setSelection
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
org.holoeverywhere.widget.AbsSpinner$1 -> org.holoeverywhere.widget.a:
org.holoeverywhere.widget.AbsSpinner$RecycleBin -> org.holoeverywhere.widget.b:
    android.util.SparseArray mScrapHeap -> a
    android.view.View get(int) -> a
    void put(int,android.view.View) -> a
org.holoeverywhere.widget.AbsSpinner$SavedState -> org.holoeverywhere.widget.AbsSpinner$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int position -> a
    long selectedId -> b
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.widget.AbsSpinner$SavedState$1 -> org.holoeverywhere.widget.c:
    org.holoeverywhere.widget.AbsSpinner$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.AbsSpinner$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.widget.AdapterView -> org.holoeverywhere.widget.d:
    boolean mBlockLayoutRequests -> j
    boolean mDataChanged -> k
    boolean mDesiredFocusableInTouchModeState -> a
    boolean mDesiredFocusableState -> b
    android.view.View mEmptyView -> c
    int mFirstPosition -> l
    boolean mInLayout -> m
    int mItemCount -> n
    int mLayoutHeight -> d
    boolean mNeedSync -> o
    int mNextSelectedPosition -> p
    long mNextSelectedRowId -> q
    int mOldItemCount -> r
    int mOldSelectedPosition -> s
    long mOldSelectedRowId -> t
    org.holoeverywhere.widget.AdapterView$OnItemClickListener mOnItemClickListener -> u
    org.holoeverywhere.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener -> v
    org.holoeverywhere.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> w
    int mSelectedPosition -> x
    long mSelectedRowId -> y
    org.holoeverywhere.widget.AdapterView$SelectionNotifier mSelectionNotifier -> e
    int mSpecificTop -> z
    long mSyncHeight -> A
    int mSyncMode -> B
    int mSyncPosition -> C
    long mSyncRowId -> D
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    boolean canAnimate() -> canAnimate
    void checkFocus() -> c
    void checkSelectionChanged() -> d
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    int findSyncPosition() -> e
    void fireOnSelected() -> b
    android.widget.Adapter getAdapter() -> getAdapter
    int getCount() -> getCount
    android.view.View getEmptyView() -> getEmptyView
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    long getItemIdAtPosition(int) -> a
    int getLastVisiblePosition() -> getLastVisiblePosition
    org.holoeverywhere.widget.AdapterView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    org.holoeverywhere.widget.AdapterView$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    org.holoeverywhere.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    java.lang.Object getSelectedItem() -> getSelectedItem
    long getSelectedItemId() -> getSelectedItemId
    int getSelectedItemPosition() -> getSelectedItemPosition
    android.view.View getSelectedView() -> getSelectedView
    void handleDataChanged() -> f
    boolean isInFilterMode() -> g
    boolean isScrollableForAccessibility() -> j
    int lookForSelectablePosition(int,boolean) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void performAccessibilityActionsOnSelected() -> k
    void rememberSyncState() -> h
    void removeAllViews() -> removeAllViews
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void selectionChanged() -> i
    void setAdapter(android.widget.Adapter) -> setAdapter
    void setEmptyView(android.view.View) -> setEmptyView
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void setNextSelectedPositionInt(int) -> setNextSelectedPositionInt
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setOnItemClickListener(org.holoeverywhere.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnItemLongClickListener(org.holoeverywhere.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    void setOnItemSelectedListener(org.holoeverywhere.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    void setSelection(int) -> setSelection
    void updateEmptyStatus(boolean) -> a
    void access$000(org.holoeverywhere.widget.AdapterView,android.os.Parcelable) -> a
    android.os.Parcelable access$100(org.holoeverywhere.widget.AdapterView) -> a
    void access$200(org.holoeverywhere.widget.AdapterView) -> b
    void access$300(org.holoeverywhere.widget.AdapterView) -> c
org.holoeverywhere.widget.AdapterView$1 -> org.holoeverywhere.widget.e:
org.holoeverywhere.widget.AdapterView$AdapterDataSetObserver -> org.holoeverywhere.widget.f:
    android.os.Parcelable mInstanceState -> b
    org.holoeverywhere.widget.AdapterView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
org.holoeverywhere.widget.AdapterView$OnItemClickListener -> org.holoeverywhere.widget.g:
org.holoeverywhere.widget.AdapterView$OnItemLongClickListener -> org.holoeverywhere.widget.h:
org.holoeverywhere.widget.AdapterView$OnItemSelectedListener -> org.holoeverywhere.widget.i:
    void onItemSelected(org.holoeverywhere.widget.AdapterView,android.view.View,int,long) -> a
    void onNothingSelected(org.holoeverywhere.widget.AdapterView) -> a
org.holoeverywhere.widget.AdapterView$SelectionNotifier -> org.holoeverywhere.widget.j:
    org.holoeverywhere.widget.AdapterView this$0 -> a
    void run() -> run
org.holoeverywhere.widget.Button -> org.holoeverywhere.widget.k:
    boolean allCaps -> a
    java.lang.CharSequence originalText -> b
    android.widget.TextView$BufferType originalType -> c
    void dispatchDisplayHint(int) -> dispatchDisplayHint
    void onDisplayHint(int) -> onDisplayHint
    void setAllCaps(boolean) -> setAllCaps
    void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
    void updateTextState() -> a
org.holoeverywhere.widget.CalendarView -> org.holoeverywhere.widget.l:
    java.lang.String LOG_TAG -> a
    org.holoeverywhere.widget.CalendarView$WeeksAdapter mAdapter -> b
    int mBottomBuffer -> c
    java.util.Locale mCurrentLocale -> d
    int mCurrentMonthDisplayed -> e
    int mCurrentScrollState -> f
    int mCurrentYearDisplayed -> g
    int mDateTextSize -> h
    java.lang.String[] mDayLabels -> i
    android.view.ViewGroup mDayNamesHeader -> j
    int mDaysPerWeek -> k
    java.util.Calendar mFirstDayOfMonth -> l
    int mFirstDayOfWeek -> m
    int mFocusedMonthDateColor -> n
    boolean mIsScrollingUp -> o
    int mListScrollTopOffset -> p
    org.holoeverywhere.widget.ListView mListView -> q
    java.util.Calendar mMaxDate -> r
    java.util.Calendar mMinDate -> s
    org.holoeverywhere.widget.TextView mMonthName -> t
    org.holoeverywhere.widget.CalendarView$OnDateChangeListener mOnDateChangeListener -> u
    int mPreviousScrollState -> v
    org.holoeverywhere.widget.CalendarView$ScrollStateRunnable mScrollStateChangedRunnable -> w
    android.graphics.drawable.Drawable mSelectedDateVerticalBar -> x
    int mSelectedDateVerticalBarWidth -> y
    int mSelectedWeekBackgroundColor -> z
    int mShownWeekCount -> A
    boolean mShowWeekNumber -> B
    java.util.Calendar mTempDate -> C
    int mUnfocusedMonthDateColor -> D
    int mWeekNumberColor -> E
    int mWeekSeparatorLineColor -> F
    int mWeekSeperatorLineWidth -> G
    java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale) -> a
    long getDate() -> getDate
    int getFirstDayOfWeek() -> getFirstDayOfWeek
    long getMaxDate() -> getMaxDate
    long getMinDate() -> getMinDate
    boolean getShowWeekNumber() -> getShowWeekNumber
    int getWeeksSinceMinDate(java.util.Calendar) -> a
    void goTo(java.util.Calendar,boolean,boolean,boolean) -> a
    boolean isEnabled() -> isEnabled
    boolean isSameDate(java.util.Calendar,java.util.Calendar) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onScrollStateChanged(android.widget.AbsListView,int) -> a
    void setCurrentLocale(java.util.Locale) -> setCurrentLocale
    void setDate(long) -> setDate
    void setDate(long,boolean,boolean) -> a
    void setEnabled(boolean) -> setEnabled
    void setFirstDayOfWeek(int) -> setFirstDayOfWeek
    void setMaxDate(long) -> setMaxDate
    void setMinDate(long) -> setMinDate
    void setMonthDisplayed(java.util.Calendar) -> setMonthDisplayed
    void setOnDateChangeListener(org.holoeverywhere.widget.CalendarView$OnDateChangeListener) -> setOnDateChangeListener
    void setShowWeekNumber(boolean) -> setShowWeekNumber
    void setUpHeader(int) -> setUpHeader
    int access$002(org.holoeverywhere.widget.CalendarView,int) -> a
    int access$100(org.holoeverywhere.widget.CalendarView) -> a
    int access$200(org.holoeverywhere.widget.CalendarView) -> b
    boolean access$300(org.holoeverywhere.widget.CalendarView) -> c
    int access$102(org.holoeverywhere.widget.CalendarView,int) -> b
    int access$400(org.holoeverywhere.widget.CalendarView,java.util.Calendar) -> a
    java.util.Calendar access$500(org.holoeverywhere.widget.CalendarView) -> d
    java.util.Calendar access$600(org.holoeverywhere.widget.CalendarView) -> e
    int access$700(org.holoeverywhere.widget.CalendarView) -> f
    void access$800(org.holoeverywhere.widget.CalendarView,java.util.Calendar) -> b
    org.holoeverywhere.widget.ListView access$900(org.holoeverywhere.widget.CalendarView) -> g
    java.util.Calendar access$1000(org.holoeverywhere.widget.CalendarView) -> h
    int access$1100(org.holoeverywhere.widget.CalendarView) -> i
    int access$1200(org.holoeverywhere.widget.CalendarView) -> j
    int access$1300(org.holoeverywhere.widget.CalendarView) -> k
    boolean access$1400(org.holoeverywhere.widget.CalendarView) -> l
    int access$1500(org.holoeverywhere.widget.CalendarView) -> m
    android.graphics.drawable.Drawable access$1600(org.holoeverywhere.widget.CalendarView) -> n
    int access$1700(org.holoeverywhere.widget.CalendarView) -> o
    int access$1800(org.holoeverywhere.widget.CalendarView) -> p
    int access$1900(org.holoeverywhere.widget.CalendarView) -> q
    int access$2000(org.holoeverywhere.widget.CalendarView) -> r
    int access$2100(org.holoeverywhere.widget.CalendarView) -> s
    int access$2200(org.holoeverywhere.widget.CalendarView) -> t
org.holoeverywhere.widget.CalendarView$OnDateChangeListener -> org.holoeverywhere.widget.m:
org.holoeverywhere.widget.CalendarView$ScrollStateRunnable -> org.holoeverywhere.widget.n:
    int mNewState -> b
    android.widget.AbsListView mView -> c
    org.holoeverywhere.widget.CalendarView this$0 -> a
    void doScrollStateChange(android.widget.AbsListView,int) -> a
    void run() -> run
org.holoeverywhere.widget.CalendarView$WeekView -> org.holoeverywhere.widget.o:
    java.lang.String[] mDayNumbers -> b
    android.graphics.Paint mDrawPaint -> c
    java.util.Calendar mFirstDay -> d
    boolean[] mFocusDay -> e
    boolean mHasSelectedDay -> f
    int mHeight -> g
    int mLastWeekDayMonth -> h
    android.graphics.Paint mMonthNumDrawPaint -> i
    int mMonthOfFirstWeekDay -> j
    int mNumCells -> k
    int mSelectedDay -> l
    int mSelectedLeft -> m
    int mSelectedRight -> n
    android.graphics.Rect mTempRect -> o
    int mWeek -> p
    int mWidth -> q
    org.holoeverywhere.widget.CalendarView this$0 -> a
    void drawBackground(android.graphics.Canvas) -> a
    void drawSelectedDateVerticalBars(android.graphics.Canvas) -> b
    void drawWeekNumbers(android.graphics.Canvas) -> c
    void drawWeekSeparators(android.graphics.Canvas) -> d
    boolean getDayFromLocation(float,java.util.Calendar) -> a
    void init(int,int,int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setPaintProperties() -> a
    void updateSelectionPositions() -> b
org.holoeverywhere.widget.CalendarView$WeeksAdapter -> org.holoeverywhere.widget.p:
    android.content.Context context -> b
    int mFocusedMonth -> c
    android.view.GestureDetector mGestureDetector -> d
    java.util.Calendar mSelectedDate -> e
    int mSelectedWeek -> f
    int mTotalWeekCount -> g
    org.holoeverywhere.widget.CalendarView this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void init() -> a
    void onDateTapped(java.util.Calendar) -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void setFocusMonth(int) -> a
    void setSelectedDay(java.util.Calendar) -> a
    java.util.Calendar access$2400(org.holoeverywhere.widget.CalendarView$WeeksAdapter) -> a
    void access$2500(org.holoeverywhere.widget.CalendarView$WeeksAdapter) -> b
org.holoeverywhere.widget.CheckedTextView -> org.holoeverywhere.widget.q:
    boolean allCaps -> a
    java.lang.CharSequence originalText -> b
    android.widget.TextView$BufferType originalType -> c
    void dispatchDisplayHint(int) -> dispatchDisplayHint
    void onDisplayHint(int) -> onDisplayHint
    void setAllCaps(boolean) -> setAllCaps
    void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
    void updateTextState() -> a
org.holoeverywhere.widget.DatePicker -> org.holoeverywhere.widget.DatePicker:
    java.lang.String LOG_TAG -> a
    org.holoeverywhere.widget.NumberPicker daySpinner -> b
    org.holoeverywhere.widget.NumberPicker monthSpinner -> c
    org.holoeverywhere.widget.NumberPicker yearSpinner -> d
    java.util.Locale locale -> e
    org.holoeverywhere.widget.CalendarView mCalendarView -> f
    int numberOfMonths -> g
    org.holoeverywhere.widget.DatePicker$OnDateChangedListener onDateChangedListener -> h
    java.lang.String[] shortMonths -> i
    org.holoeverywhere.widget.LinearLayout spinners -> j
    java.util.Calendar tempDate -> k
    java.util.Calendar minDate -> l
    java.util.Calendar maxDate -> m
    java.util.Calendar currentDate -> n
    java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    org.holoeverywhere.widget.CalendarView getCalendarView() -> getCalendarView
    boolean getCalendarViewShown() -> getCalendarViewShown
    int getDayOfMonth() -> getDayOfMonth
    long getMaxDate() -> getMaxDate
    long getMinDate() -> getMinDate
    int getMonth() -> getMonth
    org.holoeverywhere.widget.DatePicker$OnDateChangedListener getOnDateChangedListener() -> getOnDateChangedListener
    boolean getSpinnersShown() -> getSpinnersShown
    int getYear() -> getYear
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void setCalendarViewShown(boolean) -> setCalendarViewShown
    void setDate(int,int,int) -> a
    void setEnabled(boolean) -> setEnabled
    void setLocale(java.util.Locale) -> setLocale
    void setMaxDate(long) -> setMaxDate
    void setMinDate(long) -> setMinDate
    void setOnDateChangedListener(org.holoeverywhere.widget.DatePicker$OnDateChangedListener) -> setOnDateChangedListener
    void setSpinnersShown(boolean) -> setSpinnersShown
    void updateCalendarView() -> a
    void updateSpinners() -> b
org.holoeverywhere.widget.DatePicker$1 -> org.holoeverywhere.widget.r:
org.holoeverywhere.widget.DatePicker$OnDateChangedListener -> org.holoeverywhere.widget.s:
org.holoeverywhere.widget.DatePicker$SavedState -> org.holoeverywhere.widget.DatePicker$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int year -> a
    int month -> b
    int day -> c
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int access$1200(org.holoeverywhere.widget.DatePicker$SavedState) -> a
    int access$1300(org.holoeverywhere.widget.DatePicker$SavedState) -> b
    int access$1400(org.holoeverywhere.widget.DatePicker$SavedState) -> c
org.holoeverywhere.widget.DatePicker$SavedState$1 -> org.holoeverywhere.widget.t:
    org.holoeverywhere.widget.DatePicker$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.DatePicker$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.widget.EditText -> org.holoeverywhere.widget.u:
    boolean allCaps -> a
    android.view.View$OnCreateContextMenuListener mOnCreateContextMenuListener -> b
    java.lang.CharSequence originalText -> c
    android.widget.TextView$BufferType originalType -> d
    void dispatchDisplayHint(int) -> dispatchDisplayHint
    android.view.View$OnCreateContextMenuListener getOnCreateContextMenuListener() -> getOnCreateContextMenuListener
    void onDisplayHint(int) -> onDisplayHint
    void setAllCaps(boolean) -> setAllCaps
    void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener) -> setOnCreateContextMenuListener
    void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
    void updateTextState() -> a
org.holoeverywhere.widget.ExpandableListConnector -> org.holoeverywhere.widget.ExpandableListConnector:
    android.database.DataSetObserver mDataSetObserver -> a
    android.widget.ExpandableListAdapter mExpandableListAdapter -> b
    java.util.ArrayList mExpGroupMetadataList -> c
    int mMaxExpGroupCount -> d
    int mTotalExpChildrenCount -> e
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean collapseGroup(int) -> a
    boolean collapseGroup(org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata) -> a
    boolean expandGroup(org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata) -> b
    int findGroupPosition(long,int) -> a
    android.widget.ExpandableListAdapter getAdapter() -> a
    int getCount() -> getCount
    java.util.ArrayList getExpandedGroupMetadataList() -> b
    android.widget.Filter getFilter() -> getFilter
    org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata getFlattenedPos(org.holoeverywhere.widget.ExpandableListPosition) -> a
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata getUnflattenedPos(int) -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    boolean isEmpty() -> isEmpty
    boolean isEnabled(int) -> isEnabled
    void refreshExpGroupMetadataList(boolean,boolean) -> a
    void setExpandableListAdapter(android.widget.ExpandableListAdapter) -> a
    void setExpandedGroupMetadataList(java.util.ArrayList) -> a
    void access$000(org.holoeverywhere.widget.ExpandableListConnector,boolean,boolean) -> a
org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata -> org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int flPos -> a
    long gId -> b
    int gPos -> c
    int lastChildFlPos -> d
    org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata obtain(int,int,int,long) -> a
    int compareTo(org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int compareTo(java.lang.Object) -> compareTo
org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata$1 -> org.holoeverywhere.widget.v:
    org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.widget.ExpandableListConnector$MyDataSetObserver -> org.holoeverywhere.widget.w:
    org.holoeverywhere.widget.ExpandableListConnector this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata -> org.holoeverywhere.widget.x:
    java.util.ArrayList sPool -> d
    int groupInsertIndex -> a
    org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata groupMetadata -> b
    org.holoeverywhere.widget.ExpandableListPosition position -> c
    org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata getRecycledOrCreate() -> c
    org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata obtain(int,int,int,int,org.holoeverywhere.widget.ExpandableListConnector$GroupMetadata,int) -> a
    boolean isExpanded() -> a
    void recycle() -> b
    void resetState() -> d
org.holoeverywhere.widget.ExpandableListPosition -> org.holoeverywhere.widget.y:
    java.util.ArrayList sPool -> e
    int childPos -> a
    int flatListPos -> b
    int groupPos -> c
    int type -> d
    org.holoeverywhere.widget.ExpandableListPosition getRecycledOrCreate() -> c
    org.holoeverywhere.widget.ExpandableListPosition obtain(int,int,int,int) -> a
    org.holoeverywhere.widget.ExpandableListPosition obtainGroupPosition(int) -> a
    org.holoeverywhere.widget.ExpandableListPosition obtainPosition(long) -> a
    long getPackedPosition() -> a
    void recycle() -> b
    void resetState() -> d
org.holoeverywhere.widget.ExpandableListView -> org.holoeverywhere.widget.ExpandableListView:
    int[] CHILD_LAST_STATE_SET -> a
    int[] EMPTY_STATE_SET -> b
    int[] GROUP_EMPTY_STATE_SET -> c
    int[] GROUP_EXPANDED_EMPTY_STATE_SET -> d
    int[] GROUP_EXPANDED_STATE_SET -> e
    int[][] GROUP_STATE_SETS -> f
    android.widget.ExpandableListAdapter mAdapter -> g
    android.graphics.drawable.Drawable mChildDivider -> h
    android.graphics.drawable.Drawable mChildIndicator -> i
    int mChildIndicatorLeft -> j
    int mChildIndicatorRight -> k
    boolean mClipToPadding -> l
    org.holoeverywhere.widget.ExpandableListConnector mConnector -> m
    android.graphics.drawable.Drawable mGroupIndicator -> n
    int mIndicatorLeft -> o
    android.graphics.Rect mIndicatorRect -> p
    int mIndicatorRight -> q
    org.holoeverywhere.widget.ExpandableListView$OnChildClickListener mOnChildClickListener -> r
    org.holoeverywhere.widget.ExpandableListView$OnGroupClickListener mOnGroupClickListener -> s
    org.holoeverywhere.widget.ExpandableListView$OnGroupCollapseListener mOnGroupCollapseListener -> t
    org.holoeverywhere.widget.ExpandableListView$OnGroupExpandListener mOnGroupExpandListener -> u
    int getPackedPositionChild(long) -> a
    long getPackedPositionForChild(int,int) -> a
    long getPackedPositionForGroup(int) -> a
    int getPackedPositionGroup(long) -> b
    int getPackedPositionType(long) -> c
    android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long) -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    int getAbsoluteFlatPosition(int) -> d
    long getChildOrGroupId(org.holoeverywhere.widget.ExpandableListPosition) -> a
    android.widget.ExpandableListAdapter getExpandableListAdapter() -> getExpandableListAdapter
    long getExpandableListPosition(int) -> b
    int getFlatListPosition(long) -> d
    int getFlatPositionForConnector(int) -> e
    android.graphics.drawable.Drawable getIndicator(org.holoeverywhere.widget.ExpandableListConnector$PositionMetadata) -> a
    long getSelectedId() -> getSelectedId
    long getSelectedPosition() -> getSelectedPosition
    boolean handleItemClick(android.view.View,int,long) -> b
    boolean isHeaderOrFooterPosition(int) -> f
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void setAdapter(android.widget.ExpandableListAdapter) -> setAdapter
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setChildDivider(android.graphics.drawable.Drawable) -> setChildDivider
    void setChildIndicator(android.graphics.drawable.Drawable) -> setChildIndicator
    void setClipToPadding(boolean) -> setClipToPadding
    void setGroupIndicator(android.graphics.drawable.Drawable) -> setGroupIndicator
    void setOnChildClickListener(org.holoeverywhere.widget.ExpandableListView$OnChildClickListener) -> setOnChildClickListener
    void setOnGroupClickListener(org.holoeverywhere.widget.ExpandableListView$OnGroupClickListener) -> setOnGroupClickListener
    void setOnGroupCollapseListener(org.holoeverywhere.widget.ExpandableListView$OnGroupCollapseListener) -> setOnGroupCollapseListener
    void setOnGroupExpandListener(org.holoeverywhere.widget.ExpandableListView$OnGroupExpandListener) -> setOnGroupExpandListener
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setSelectedGroup(int) -> setSelectedGroup
    void setAdapter(android.widget.Adapter) -> setAdapter
org.holoeverywhere.widget.ExpandableListView$1 -> org.holoeverywhere.widget.z:
org.holoeverywhere.widget.ExpandableListView$ExpandableListContextMenuInfo -> org.holoeverywhere.widget.aa:
    long id -> a
    long packedPosition -> b
    android.view.View targetView -> c
org.holoeverywhere.widget.ExpandableListView$OnChildClickListener -> org.holoeverywhere.widget.ab:
    boolean onChildClick(org.holoeverywhere.widget.ExpandableListView,android.view.View,int,int,long) -> a
org.holoeverywhere.widget.ExpandableListView$OnGroupClickListener -> org.holoeverywhere.widget.ac:
    boolean onGroupClick(org.holoeverywhere.widget.ExpandableListView,android.view.View,int,long) -> a
org.holoeverywhere.widget.ExpandableListView$OnGroupCollapseListener -> org.holoeverywhere.widget.ad:
    void onGroupCollapse(int) -> a
org.holoeverywhere.widget.ExpandableListView$OnGroupExpandListener -> org.holoeverywhere.widget.ae:
    void onGroupExpand(int) -> a
org.holoeverywhere.widget.ExpandableListView$SavedState -> org.holoeverywhere.widget.ExpandableListView$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.ArrayList expandedGroupMetadataList -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.widget.ExpandableListView$SavedState$1 -> org.holoeverywhere.widget.af:
    org.holoeverywhere.widget.ExpandableListView$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.ExpandableListView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.widget.FastScroller -> org.holoeverywhere.widget.ag:
    int[] DEFAULT_STATES -> i
    int MIN_PAGES -> j
    int[] PRESSED_STATES -> k
    boolean mAlwaysShow -> l
    boolean mChangedBounds -> m
    java.lang.Runnable mDeferStartDrag -> n
    boolean mDrawOverlay -> o
    android.os.Handler mHandler -> p
    float mInitialTouchY -> a
    int mItemCount -> q
    org.holoeverywhere.widget.ListView mList -> b
    android.widget.ListAdapter mListAdapter -> c
    int mListOffset -> r
    boolean mLongList -> s
    boolean mMatchDragPosition -> t
    android.graphics.drawable.Drawable mOverlayDrawable -> u
    android.graphics.drawable.Drawable mOverlayDrawableLeft -> v
    android.graphics.drawable.Drawable mOverlayDrawableRight -> w
    android.graphics.RectF mOverlayPos -> x
    int mOverlayPosition -> y
    int mOverlaySize -> z
    android.graphics.Paint mPaint -> A
    boolean mPendingDrag -> d
    int mPosition -> B
    int mScaledTouchSlop -> C
    boolean mScrollCompleted -> e
    org.holoeverywhere.widget.FastScroller$ScrollFade mScrollFade -> D
    android.widget.SectionIndexer mSectionIndexer -> E
    java.lang.Object[] mSections -> F
    java.lang.String mSectionText -> G
    int mState -> H
    android.graphics.drawable.Drawable mThumbDrawable -> I
    int mThumbH -> f
    int mThumbW -> g
    int mThumbY -> h
    android.graphics.Rect mTmpRect -> J
    android.graphics.drawable.Drawable mTrackDrawable -> K
    void beginDrag() -> a
    void cancelFling() -> j
    void cancelPendingDrag() -> b
    void draw(android.graphics.Canvas) -> a
    void getSectionsFromIndexer() -> c
    int getState() -> d
    int getWidth() -> e
    void init(android.content.Context) -> a
    boolean isAlwaysShowEnabled() -> f
    boolean isPointInside(float,float) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> a
    void onItemCountChanged(int,int) -> a
    void onSectionsChanged() -> g
    void onSizeChanged(int,int,int,int) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> b
    void refreshDrawableState() -> k
    void resetThumbPos() -> l
    void scrollTo(float) -> a
    void setAlwaysShow(boolean) -> a
    void setScrollbarPosition(int) -> a
    void setState(int) -> b
    void startPendingDrag() -> h
    void stop() -> i
    void useThumbDrawable(android.content.Context,android.graphics.drawable.Drawable) -> a
org.holoeverywhere.widget.FastScroller$1 -> org.holoeverywhere.widget.ah:
    org.holoeverywhere.widget.FastScroller this$0 -> a
    void run() -> run
org.holoeverywhere.widget.FastScroller$ScrollFade -> org.holoeverywhere.widget.ai:
    long mFadeDuration -> a
    long mStartTime -> b
    org.holoeverywhere.widget.FastScroller this$0 -> c
    int getAlpha() -> a
    void run() -> run
    void startFade() -> b
org.holoeverywhere.widget.FrameLayout -> org.holoeverywhere.widget.aj:
org.holoeverywhere.widget.HeaderViewListAdapter -> org.holoeverywhere.widget.ak:
    java.util.List EMPTY_INFO_LIST -> b
    boolean mAreAllFixedViewsSelectable -> a
    java.util.List mFooterViewInfos -> c
    java.util.List mHeaderViewInfos -> d
    boolean mIsFilterable -> e
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean areAllListInfosSelectable(java.util.List) -> a
    int getCount() -> getCount
    android.widget.Filter getFilter() -> getFilter
    int getFootersCount() -> a
    int getHeadersCount() -> b
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean isEnabled(int) -> isEnabled
    boolean removeFooter(android.view.View) -> a
    boolean removeHeader(android.view.View) -> b
org.holoeverywhere.widget.HeaderViewListAdapter$ViewInfo -> org.holoeverywhere.widget.al:
    java.lang.Object data -> a
    boolean isSelectable -> b
    android.view.View view -> c
org.holoeverywhere.widget.HeterogeneousExpandableList -> org.holoeverywhere.widget.am:
    int getChildType(int,int) -> a
    int getChildTypeCount() -> a
    int getGroupType(int) -> a
    int getGroupTypeCount() -> b
org.holoeverywhere.widget.LinearLayout -> org.holoeverywhere.widget.an:
    android.graphics.drawable.Drawable mDivider -> a
    int mDividerHeight -> b
    int mDividerPadding -> c
    int mDividerWidth -> d
    int mShowDividers -> e
    void drawDividersHorizontal(android.graphics.Canvas) -> a
    void drawDividersVertical(android.graphics.Canvas) -> b
    void drawHorizontalDivider(android.graphics.Canvas,int) -> a
    void drawVerticalDivider(android.graphics.Canvas,int) -> b
    int getDividerPadding() -> getDividerPadding
    int getDividerWidth() -> getDividerWidth
    int getShowDividers() -> getShowDividers
    boolean hasDividerBeforeChildAt(int) -> a
    void init(android.util.AttributeSet,int) -> a
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void setDividerPadding(int) -> setDividerPadding
    void setShowDividers(int) -> setShowDividers
org.holoeverywhere.widget.ListAdapterWrapper -> org.holoeverywhere.widget.ao:
    org.holoeverywhere.widget.ListAdapterWrapper$ListAdapterCallback mCallback -> a
    android.database.DataSetObserver mLastDataSetObserver -> b
    android.widget.ListAdapter mWrapped -> c
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getViewTypeCount() -> getViewTypeCount
    android.widget.ListAdapter getWrappedAdapter() -> getWrappedAdapter
    boolean hasStableIds() -> hasStableIds
    boolean isEmpty() -> isEmpty
    boolean isEnabled(int) -> isEnabled
    void notifyDataSetChanged() -> c
    android.view.View onPrepareView(android.view.View,int) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    org.holoeverywhere.widget.ListAdapterWrapper$ListAdapterCallback access$000(org.holoeverywhere.widget.ListAdapterWrapper) -> a
org.holoeverywhere.widget.ListAdapterWrapper$ListAdapterCallback -> org.holoeverywhere.widget.ap:
    void onChanged() -> a
    void onInvalidated() -> b
    android.view.View onPrepareView(android.view.View,int) -> a
org.holoeverywhere.widget.ListAdapterWrapper$WrapperDataSetObserver -> org.holoeverywhere.widget.aq:
    android.database.DataSetObserver mDataSetObserver -> b
    org.holoeverywhere.widget.ListAdapterWrapper this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
org.holoeverywhere.widget.ListView -> org.holoeverywhere.widget.ListView:
    boolean USE_ACTIVATED -> a
    org.holoeverywhere.app.Activity mActivity -> b
    org.holoeverywhere.widget.ListAdapterWrapper mAdapter -> c
    boolean mAdapterHasStableIds -> d
    org.holoeverywhere.util.LongSparseArray mCheckedIdStates -> e
    int mCheckedItemCount -> f
    android.util.SparseBooleanArray mCheckStates -> g
    com.actionbarsherlock.view.ActionMode mChoiceActionMode -> h
    int mChoiceMode -> i
    android.view.ContextMenu$ContextMenuInfo mContextMenuInfo -> j
    boolean mEnableModalBackgroundWrapper -> k
    boolean mFastScrollEnabled -> l
    org.holoeverywhere.widget.FastScroller mFastScroller -> m
    java.util.List mFooterViewInfos -> n
    java.util.List mHeaderViewInfos -> o
    boolean mForceFastScrollAlwaysVisibleDisable -> p
    boolean mForceHeaderListAdapter -> q
    boolean mIsAttached -> r
    int mLastScrollState -> s
    org.holoeverywhere.widget.ListAdapterWrapper$ListAdapterCallback mListAdapterCallback -> t
    org.holoeverywhere.widget.ListView$MultiChoiceModeWrapper mMultiChoiceModeCallback -> u
    org.holoeverywhere.widget.ListView$OnItemLongClickListenerWrapper mOnItemLongClickListenerWrapper -> v
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> w
    boolean mPaddingFromScroller -> x
    int mVerticalScrollbarPosition -> y
    void addFooterView(android.view.View) -> addFooterView
    void addFooterView(android.view.View,java.lang.Object,boolean) -> addFooterView
    void addHeaderView(android.view.View) -> addHeaderView
    void addHeaderView(android.view.View,java.lang.Object,boolean) -> addHeaderView
    void clearChoices() -> clearChoices
    android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long) -> a
    void draw(android.graphics.Canvas) -> draw
    org.holoeverywhere.app.Activity getActivity() -> getActivity
    android.widget.ListAdapter getAdapterSource() -> getAdapterSource
    int getCheckedItemCount() -> getCheckedItemCount
    long[] getCheckedItemIds() -> getCheckedItemIds
    int getCheckedItemPosition() -> getCheckedItemPosition
    android.util.SparseBooleanArray getCheckedItemPositions() -> getCheckedItemPositions
    long[] getCheckItemIds() -> getCheckItemIds
    int getChoiceMode() -> getChoiceMode
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
    int getFooterViewsCount() -> getFooterViewsCount
    int getHeaderViewsCount() -> getHeaderViewsCount
    int getVerticalScrollbarPosition() -> getVerticalScrollbarPosition
    int getVerticalScrollbarWidth() -> getVerticalScrollbarWidth
    boolean isAttached() -> a
    boolean isFastScrollAlwaysVisible() -> isFastScrollAlwaysVisible
    boolean isFastScrollEnabled() -> isFastScrollEnabled
    boolean isInScrollingContainer() -> b
    boolean isItemChecked(int) -> isItemChecked
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.View onPrepareView(android.view.View,int) -> a
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    boolean performItemLongClick(android.view.View,int,long) -> c
    void recomputePaddingFromScroller() -> c
    boolean removeFooterView(android.view.View) -> removeFooterView
    boolean removeHeaderView(android.view.View) -> removeHeaderView
    void removeViewInfo(android.view.View,java.util.List) -> a
    void reportScrollStateChange(int) -> c
    void setActivity(org.holoeverywhere.app.Activity) -> setActivity
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setChoiceMode(int) -> setChoiceMode
    void setEnableModalBackgroundWrapper(boolean) -> setEnableModalBackgroundWrapper
    void setFastScrollAlwaysVisible(boolean) -> setFastScrollAlwaysVisible
    void setFastScrollEnabled(boolean) -> setFastScrollEnabled
    void setForceHeaderListAdapter(boolean) -> setForceHeaderListAdapter
    void setItemChecked(int,boolean) -> setItemChecked
    void setMultiChoiceModeListener(org.holoeverywhere.widget.ListView$MultiChoiceModeListener) -> setMultiChoiceModeListener
    void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setPaddingFromScroller(boolean) -> setPaddingFromScroller
    void setSelectionAfterHeaderView() -> setSelectionAfterHeaderView
    void setSelector(int) -> setSelector
    void setStateOnView(android.view.View,boolean) -> a
    void setVerticalScrollbarPosition(int) -> setVerticalScrollbarPosition
    boolean showContextMenuForChild(android.view.View) -> showContextMenuForChild
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> a
    void updateOnScreenCheckedViews() -> d
    void setAdapter(android.widget.Adapter) -> setAdapter
    com.actionbarsherlock.view.ActionMode access$002(org.holoeverywhere.widget.ListView,com.actionbarsherlock.view.ActionMode) -> a
    org.holoeverywhere.widget.FastScroller access$100(org.holoeverywhere.widget.ListView) -> a
org.holoeverywhere.widget.ListView$1 -> org.holoeverywhere.widget.ar:
    org.holoeverywhere.widget.ListView this$0 -> a
    void onChanged() -> a
    void onInvalidated() -> b
    android.view.View onPrepareView(android.view.View,int) -> a
org.holoeverywhere.widget.ListView$MultiChoiceModeListener -> org.holoeverywhere.widget.as:
    void onItemCheckedStateChanged(com.actionbarsherlock.view.ActionMode,int,long,boolean) -> a
org.holoeverywhere.widget.ListView$MultiChoiceModeWrapper -> org.holoeverywhere.widget.at:
    org.holoeverywhere.widget.ListView$MultiChoiceModeListener mWrapped -> b
    org.holoeverywhere.widget.ListView this$0 -> a
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> a
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> a
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> a
    void onItemCheckedStateChanged(com.actionbarsherlock.view.ActionMode,int,long,boolean) -> a
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> b
    void setWrapped(org.holoeverywhere.widget.ListView$MultiChoiceModeListener) -> a
org.holoeverywhere.widget.ListView$OnItemLongClickListenerWrapper -> org.holoeverywhere.widget.au:
    android.widget.AdapterView$OnItemLongClickListener wrapped -> b
    org.holoeverywhere.widget.ListView this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void setWrapped(android.widget.AdapterView$OnItemLongClickListener) -> a
    android.widget.AdapterView$OnItemLongClickListener access$300(org.holoeverywhere.widget.ListView$OnItemLongClickListenerWrapper) -> a
org.holoeverywhere.widget.ListView$SavedState -> org.holoeverywhere.widget.ListView$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int checkedItemCount -> a
    org.holoeverywhere.util.LongSparseArray checkIdState -> b
    android.util.SparseBooleanArray checkState -> c
    boolean inActionMode -> d
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.widget.ListView$SavedState$1 -> org.holoeverywhere.widget.av:
    org.holoeverywhere.widget.ListView$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.ListView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.widget.ModalBackgroundWrapper -> org.holoeverywhere.widget.aw:
    int[] CHECKED_STATE_SET -> a
    boolean mChecked -> b
    boolean isChecked() -> isChecked
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void setChecked(boolean) -> setChecked
    void toggle() -> toggle
org.holoeverywhere.widget.NumberPicker -> org.holoeverywhere.widget.ax:
    char[] DIGIT_CHARACTERS -> b
    org.holoeverywhere.widget.NumberPicker$Formatter TWO_DIGIT_FORMATTER -> a
    org.holoeverywhere.widget.Scroller mAdjustScroller -> c
    org.holoeverywhere.widget.NumberPicker$BeginSoftInputOnLongPressCommand mBeginSoftInputOnLongPressCommand -> d
    int mBottomSelectionDividerBottom -> e
    org.holoeverywhere.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand mChangeCurrentByOneFromLongPressCommand -> f
    boolean mComputeMaxWidth -> g
    int mCurrentScrollOffset -> h
    android.widget.ImageButton mDecrementButton -> i
    boolean mDecrementVirtualButtonPressed -> j
    java.lang.String[] mDisplayedValues -> k
    org.holoeverywhere.widget.Scroller mFlingScroller -> l
    org.holoeverywhere.widget.NumberPicker$Formatter mFormatter -> m
    boolean mHasSelectorWheel -> n
    android.widget.ImageButton mIncrementButton -> o
    boolean mIncrementVirtualButtonPressed -> p
    boolean mIngonreMoveEvents -> q
    int mInitialScrollOffset -> r
    org.holoeverywhere.internal.NumberPickerEditText mInputText -> s
    long mLastDownEventTime -> t
    float mLastDownEventY -> u
    float mLastDownOrMoveEventY -> v
    long mLongPressUpdateInterval -> w
    int mMaxHeight -> x
    int mMaximumFlingVelocity -> y
    int mMaxValue -> z
    int mMaxWidth -> A
    int mMinHeight -> B
    int mMinimumFlingVelocity -> C
    int mMinValue -> D
    int mMinWidth -> E
    org.holoeverywhere.widget.NumberPicker$OnScrollListener mOnScrollListener -> F
    org.holoeverywhere.widget.NumberPicker$OnValueChangeListener mOnValueChangeListener -> G
    org.holoeverywhere.widget.NumberPicker$PressedStateHelper mPressedStateHelper -> H
    int mPreviousScrollerY -> I
    int mScrollState -> J
    android.graphics.drawable.Drawable mSelectionDivider -> K
    int mSelectionDividerHeight -> L
    int mSelectionDividersDistance -> M
    int mSelectorElementHeight -> N
    android.util.SparseArray mSelectorIndexToStringCache -> O
    int[] mSelectorIndices -> P
    int mSelectorTextGapHeight -> Q
    android.graphics.Paint mSelectorWheelPaint -> R
    org.holoeverywhere.widget.NumberPicker$SetSelectionCommand mSetSelectionCommand -> S
    boolean mShowSoftInputOnTap -> T
    int mSolidColor -> U
    int mTextSize -> V
    int mTopSelectionDividerTop -> W
    int mTouchSlop -> Z
    int mValue -> aa
    android.view.VelocityTracker mVelocityTracker -> ab
    android.graphics.drawable.Drawable mVirtualButtonPressedDrawable -> ac
    boolean mWrapSelectorWheel -> ad
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void changeValueByOne(boolean) -> a
    void computeScroll() -> computeScroll
    void decrementSelectorIndices(int[]) -> a
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    void ensureCachedScrollSelectorValue(int) -> b
    boolean ensureScrollWheelAdjusted() -> a
    void fling(int) -> c
    java.lang.String formatNumber(int) -> d
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    java.lang.String[] getDisplayedValues() -> getDisplayedValues
    org.holoeverywhere.internal.NumberPickerEditText getInputField() -> getInputField
    int getMaxValue() -> getMaxValue
    int getMinValue() -> getMinValue
    int getSolidColor() -> getSolidColor
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    int getValue() -> getValue
    int getWrappedSelectorIndex(int) -> e
    boolean getWrapSelectorWheel() -> getWrapSelectorWheel
    void hideSoftInput() -> b
    void incrementSelectorIndices(int[]) -> b
    void initializeFadingEdges() -> c
    void initializeSelectorWheel() -> d
    void initializeSelectorWheelIndices() -> e
    int makeMeasureSpec(int,int) -> a
    boolean moveToFinalScrollerPosition(org.holoeverywhere.widget.Scroller) -> a
    void notifyChange(int,int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onScrollerFinished(org.holoeverywhere.widget.Scroller) -> b
    void onScrollStateChange(int) -> f
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void postBeginSoftInputOnLongPressCommand() -> f
    void postChangeCurrentByOneFromLongPress(boolean,long) -> a
    void removeAllCallbacks() -> g
    void removeBeginSoftInputCommand() -> h
    void removeChangeCurrentByOneFromLongPress() -> i
    int resolveSizeAndStateRespectingMinSize(int,int,int) -> a
    void scrollBy(int,int) -> scrollBy
    void setDisplayedValues(java.lang.String[]) -> setDisplayedValues
    void setEnabled(boolean) -> setEnabled
    void setFormatter(org.holoeverywhere.widget.NumberPicker$Formatter) -> setFormatter
    void setMaxValue(int) -> setMaxValue
    void setMinValue(int) -> setMinValue
    void setOnLongPressUpdateInterval(long) -> setOnLongPressUpdateInterval
    void setOnScrollListener(org.holoeverywhere.widget.NumberPicker$OnScrollListener) -> setOnScrollListener
    void setOnValueChangedListener(org.holoeverywhere.widget.NumberPicker$OnValueChangeListener) -> setOnValueChangedListener
    void setValue(int) -> setValue
    void setValueInternal(int,boolean) -> a
    void setWrapSelectorWheel(boolean) -> setWrapSelectorWheel
    void showSoftInput() -> j
    void tryComputeMaxWidth() -> k
    boolean updateInputTextView() -> l
    void access$000(org.holoeverywhere.widget.NumberPicker) -> a
    boolean access$102(org.holoeverywhere.widget.NumberPicker,boolean) -> a
    void access$200(org.holoeverywhere.widget.NumberPicker,boolean) -> b
    long access$300(org.holoeverywhere.widget.NumberPicker) -> b
    boolean access$900(org.holoeverywhere.widget.NumberPicker) -> c
    boolean access$902(org.holoeverywhere.widget.NumberPicker,boolean) -> c
    int access$1000(org.holoeverywhere.widget.NumberPicker) -> d
    boolean access$1102(org.holoeverywhere.widget.NumberPicker,boolean) -> d
    boolean access$1100(org.holoeverywhere.widget.NumberPicker) -> e
    int access$1200(org.holoeverywhere.widget.NumberPicker) -> f
    boolean access$980(org.holoeverywhere.widget.NumberPicker,int) -> a
    boolean access$1180(org.holoeverywhere.widget.NumberPicker,int) -> b
    org.holoeverywhere.internal.NumberPickerEditText access$1300(org.holoeverywhere.widget.NumberPicker) -> g
org.holoeverywhere.widget.NumberPicker$1 -> org.holoeverywhere.widget.ay:
    java.lang.Object[] mArgs -> a
    java.lang.StringBuilder mBuilder -> b
    java.util.Formatter mFmt -> c
    java.lang.String format(int) -> a
org.holoeverywhere.widget.NumberPicker$BeginSoftInputOnLongPressCommand -> org.holoeverywhere.widget.az:
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    void run() -> run
org.holoeverywhere.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand -> org.holoeverywhere.widget.ba:
    boolean mIncrement -> b
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    void run() -> run
    void setStep(boolean) -> a
    void access$1700(org.holoeverywhere.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand,boolean) -> a
org.holoeverywhere.widget.NumberPicker$Formatter -> org.holoeverywhere.widget.bb:
    java.lang.String format(int) -> a
org.holoeverywhere.widget.NumberPicker$OnScrollListener -> org.holoeverywhere.widget.bc:
    void onScrollStateChange(org.holoeverywhere.widget.NumberPicker,int) -> a
org.holoeverywhere.widget.NumberPicker$OnValueChangeListener -> org.holoeverywhere.widget.bd:
    void onValueChange(org.holoeverywhere.widget.NumberPicker,int,int) -> a
org.holoeverywhere.widget.NumberPicker$PressedStateHelper -> org.holoeverywhere.widget.be:
    int mManagedButton -> b
    int mMode -> c
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    void buttonPressDelayed(int) -> a
    void buttonTapped(int) -> b
    void cancel() -> a
    void run() -> run
org.holoeverywhere.widget.NumberPicker$SetSelectionCommand -> org.holoeverywhere.widget.bf:
    int mSelectionEnd -> b
    int mSelectionStart -> c
    org.holoeverywhere.widget.NumberPicker this$0 -> a
    void run() -> run
org.holoeverywhere.widget.ProgressBar -> org.holoeverywhere.widget.ProgressBar:
    org.holoeverywhere.widget.ProgressBar$AccessibilityEventSender mAccessibilityEventSender -> e
    android.view.animation.AlphaAnimation mAnimation -> f
    boolean mAttached -> g
    int mBehavior -> h
    android.graphics.drawable.Drawable mCurrentDrawable -> i
    int mDuration -> j
    boolean mHasAnimation -> k
    boolean mIndeterminate -> l
    android.graphics.drawable.Drawable mIndeterminateDrawable -> m
    boolean mInDrawing -> n
    android.view.animation.Interpolator mInterpolator -> o
    int mMax -> p
    int mMinWidth -> a
    int mMaxWidth -> b
    int mMinHeight -> c
    int mMaxHeight -> d
    boolean mNoInvalidate -> q
    boolean mOnlyIndeterminate -> r
    int mProgress -> s
    android.graphics.drawable.Drawable mProgressDrawable -> t
    java.util.ArrayList mRefreshData -> u
    boolean mRefreshIsPosted -> v
    org.holoeverywhere.widget.ProgressBar$RefreshProgressRunnable mRefreshProgressRunnable -> w
    int mSecondaryProgress -> x
    boolean mShouldStartAnimationDrawable -> y
    android.view.animation.Transformation mTransformation -> z
    long mUiThreadId -> A
    void doRefreshProgress(int,int,boolean,boolean) -> a
    void drawableStateChanged() -> drawableStateChanged
    android.graphics.drawable.Drawable getCurrentDrawable() -> getCurrentDrawable
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    android.graphics.drawable.Drawable getIndeterminateDrawable() -> getIndeterminateDrawable
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    int getMax() -> getMax
    int getProgress() -> getProgress
    android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    int getResolvedLayoutDirection() -> getResolvedLayoutDirection
    int getSecondaryProgress() -> getSecondaryProgress
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    boolean isIndeterminate() -> isIndeterminate
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onMeasure(int,int) -> onMeasure
    void onProgressRefresh(float,boolean) -> a
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void postInvalidate() -> postInvalidate
    void refreshProgress(int,int,boolean) -> a
    void scheduleAccessibilityEventSender() -> c
    void setIndeterminate(boolean) -> setIndeterminate
    void setIndeterminateDrawable(android.graphics.drawable.Drawable) -> setIndeterminateDrawable
    void setInterpolator(android.content.Context,int) -> setInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    void setMax(int) -> setMax
    void setProgress(int) -> setProgress
    void setProgress(int,boolean) -> a
    void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    void setSecondaryProgress(int) -> setSecondaryProgress
    void setVisibility(int) -> setVisibility
    void startAnimation() -> a
    void stopAnimation() -> b
    void updateDrawableBounds(int,int) -> a
    void updateDrawableState() -> d
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    java.util.ArrayList access$100(org.holoeverywhere.widget.ProgressBar) -> a
    void access$200(org.holoeverywhere.widget.ProgressBar,int,int,boolean,boolean) -> a
    boolean access$302(org.holoeverywhere.widget.ProgressBar,boolean) -> a
org.holoeverywhere.widget.ProgressBar$1 -> org.holoeverywhere.widget.bg:
org.holoeverywhere.widget.ProgressBar$AccessibilityEventSender -> org.holoeverywhere.widget.bh:
    org.holoeverywhere.widget.ProgressBar this$0 -> a
    void run() -> run
org.holoeverywhere.widget.ProgressBar$RefreshData -> org.holoeverywhere.widget.bi:
    org.holoeverywhere.util.Pool sPool -> d
    boolean fromUser -> a
    int id -> b
    boolean mIsPooled -> e
    org.holoeverywhere.widget.ProgressBar$RefreshData mNext -> f
    int progress -> c
    org.holoeverywhere.widget.ProgressBar$RefreshData obtain(int,int,boolean) -> a
    org.holoeverywhere.widget.ProgressBar$RefreshData getNextPoolable() -> c
    boolean isPooled() -> b
    void recycle() -> d
    void setNextPoolable(org.holoeverywhere.widget.ProgressBar$RefreshData) -> a
    void setPooled(boolean) -> a
    void setNextPoolable(java.lang.Object) -> a
    java.lang.Object getNextPoolable() -> a
org.holoeverywhere.widget.ProgressBar$RefreshData$1 -> org.holoeverywhere.widget.bj:
    org.holoeverywhere.widget.ProgressBar$RefreshData newInstance() -> b
    void onAcquired(org.holoeverywhere.widget.ProgressBar$RefreshData) -> a
    void onReleased(org.holoeverywhere.widget.ProgressBar$RefreshData) -> b
    void onReleased(org.holoeverywhere.util.Poolable) -> b
    void onAcquired(org.holoeverywhere.util.Poolable) -> a
    org.holoeverywhere.util.Poolable newInstance() -> a
org.holoeverywhere.widget.ProgressBar$RefreshProgressRunnable -> org.holoeverywhere.widget.bk:
    org.holoeverywhere.widget.ProgressBar this$0 -> a
    void run() -> run
org.holoeverywhere.widget.ProgressBar$SavedState -> org.holoeverywhere.widget.ProgressBar$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int progress -> a
    int secondaryProgress -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.widget.ProgressBar$SavedState$1 -> org.holoeverywhere.widget.bl:
    org.holoeverywhere.widget.ProgressBar$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.ProgressBar$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.holoeverywhere.widget.Scroller -> org.holoeverywhere.widget.bm:
    float ALPHA -> a
    float DECELERATION_RATE -> b
    float END_TENSION -> c
    float[] SPLINE -> d
    float START_TENSION -> e
    float sViscousFluidNormalize -> f
    float sViscousFluidScale -> g
    int mCurrX -> h
    int mCurrY -> i
    float mDeceleration -> j
    float mDeltaX -> k
    float mDeltaY -> l
    int mDuration -> m
    float mDurationReciprocal -> n
    int mFinalX -> o
    int mFinalY -> p
    boolean mFinished -> q
    boolean mFlywheel -> r
    android.view.animation.Interpolator mInterpolator -> s
    int mMaxX -> t
    int mMaxY -> u
    int mMinX -> v
    int mMinY -> w
    int mMode -> x
    long mStartTime -> y
    int mStartX -> z
    int mStartY -> A
    float mVelocity -> B
    float viscousFluid(float) -> a
    boolean computeScrollOffset() -> a
    void fling(int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    float getCurrVelocity() -> b
    int getCurrY() -> c
    int getFinalY() -> d
    int getStartY() -> e
    boolean isFinished() -> f
    void startScroll(int,int,int,int,int) -> a
    int timePassed() -> g
org.holoeverywhere.widget.TextView -> org.holoeverywhere.widget.bn:
    boolean allCaps -> a
    java.lang.CharSequence originalText -> b
    android.widget.TextView$BufferType originalType -> c
    void dispatchDisplayHint(int) -> dispatchDisplayHint
    void onDisplayHint(int) -> onDisplayHint
    void setAllCaps(boolean) -> setAllCaps
    void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
    void updateTextState() -> a
org.holoeverywhere.widget.TimePicker -> org.holoeverywhere.widget.TimePicker:
    org.holoeverywhere.widget.TimePicker$OnTimeChangedListener NO_OP_CHANGE_LISTENER -> a
    android.widget.Button mAmPmButton -> b
    java.lang.String[] mAmPmStrings -> c
    android.content.Context mContext -> d
    java.util.Locale mCurrentLocale -> e
    org.holoeverywhere.widget.TextView mDivider -> f
    org.holoeverywhere.widget.NumberPicker mHourSpinner -> g
    org.holoeverywhere.widget.NumberPicker mMinuteSpinner -> h
    org.holoeverywhere.widget.NumberPicker mAmPmSpinner -> i
    boolean mIs24HourView -> j
    boolean mIsAm -> k
    boolean mIsEnabled -> l
    org.holoeverywhere.widget.TimePicker$OnTimeChangedListener mOnTimeChangedListener -> m
    java.util.Calendar mTempCalendar -> n
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    int getBaseline() -> getBaseline
    java.lang.Integer getCurrentHour() -> getCurrentHour
    java.lang.Integer getCurrentMinute() -> getCurrentMinute
    boolean is24HourView() -> a
    boolean isEnabled() -> isEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onTimeChanged() -> b
    void setCurrentHour(java.lang.Integer) -> setCurrentHour
    void setCurrentLocale(java.util.Locale) -> setCurrentLocale
    void setCurrentMinute(java.lang.Integer) -> setCurrentMinute
    void setEnabled(boolean) -> setEnabled
    void setIs24HourView(java.lang.Boolean) -> setIs24HourView
    void setOnTimeChangedListener(org.holoeverywhere.widget.TimePicker$OnTimeChangedListener) -> setOnTimeChangedListener
    void updateAmPmControl() -> c
    void updateHourControl() -> d
org.holoeverywhere.widget.TimePicker$1 -> org.holoeverywhere.widget.bo:
    void onTimeChanged(org.holoeverywhere.widget.TimePicker,int,int) -> a
org.holoeverywhere.widget.TimePicker$OnTimeChangedListener -> org.holoeverywhere.widget.bp:
    void onTimeChanged(org.holoeverywhere.widget.TimePicker,int,int) -> a
org.holoeverywhere.widget.TimePicker$SavedState -> org.holoeverywhere.widget.TimePicker$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int mHour -> a
    int mMinute -> b
    int getHour() -> a
    int getMinute() -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.holoeverywhere.widget.TimePicker$SavedState$1 -> org.holoeverywhere.widget.bq:
    org.holoeverywhere.widget.TimePicker$SavedState createFromParcel(android.os.Parcel) -> a
    org.holoeverywhere.widget.TimePicker$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
